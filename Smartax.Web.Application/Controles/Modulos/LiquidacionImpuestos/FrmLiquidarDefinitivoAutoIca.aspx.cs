using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using log4net;
using Telerik.Web.UI;
using System.Data;
using System.IO;
using iTextSharp.text;
using iTextSharp.text.pdf;
using Smartax.Web.Application.Clases.Seguridad;
using Smartax.Web.Application.Clases.Modulos;
using Smartax.Web.Application.Clases.Parametros;
using Smartax.Web.Application.Clases.Administracion;
using Smartax.Web.Application.Clases.Parametros.Tipos;
using System.Web.Script.Serialization;

namespace Smartax.Web.Application.Controles.Modulos.LiquidacionImpuestos
{
    public partial class FrmLiquidarDefinitivoAutoIca : System.Web.UI.Page
    {
        private static readonly ILog _log = LogManager.GetLogger(FixedData.LOG_AUDITORIA_NAME);
        RadWindow Ventana = new RadWindow();

        #region DEFINICION OBJETO DE CLASES
        LiquidarImpuestos ObjLiqImpuesto = new LiquidarImpuestos();
        ConsultaLiqImpuesto ObjConsulta = new ConsultaLiqImpuesto();
        ClienteBaseGravable ObjBaseGrav = new ClienteBaseGravable();
        ClientePuc ObjPucCliente = new ClientePuc();
        Estado ObjEstado = new Estado();
        Firmantes ObjFirmante = new Firmantes();
        Combox ObjCombox = new Combox();
        Utilidades ObjUtils = new Utilidades();
        LogsAuditoria ObjAuditoria = new LogsAuditoria();
        #endregion

        private void GetConsultarLiquidacion()
        {
            try
            {
                ObjLiqImpuesto.TipoConsulta = 1;
                ObjLiqImpuesto.IdCliente = this.Session["IdCliente"] != null ? this.Session["IdCliente"].ToString().Trim() : null;
                ObjLiqImpuesto.IdFormularioImpuesto = Int32.Parse(this.ViewState["IdFormImpuesto"].ToString().Trim());
                ObjLiqImpuesto.CodigoDane = this.TxtCodDane.Text.ToString().Trim();
                ObjLiqImpuesto.AnioGravable = Int32.Parse(this.TxtAnioGravable.Text.ToString().Trim());
                ObjLiqImpuesto.PeriodicidadImpuesto = this.ViewState["PeriodicidadImpuesto"].ToString().Trim();
                ObjLiqImpuesto.MotorBaseDatos = this.Session["MotorBaseDatos"].ToString().Trim();
                //--
                DataTable dtDatos = new DataTable();
                dtDatos = ObjLiqImpuesto.GetConsultarLiquidacion();

                if (dtDatos != null)
                {
                    if (dtDatos.Rows.Count > 0)
                    {
                        #region MOSTRAR DATOS DEL IMPUESTO LIQUIDADO
                        int _IdEstado = Int32.Parse(dtDatos.Rows[0]["id_estado"].ToString().Trim());
                        string _EstadoLiquidacion = dtDatos.Rows[0]["estado_liquidacion"].ToString().Trim();

                        if (_IdEstado == 2) //--ESTADO BORRADOR
                        {
                            #region MOSTRAR LOS DATOS DEL CLIENTE Y DE LA LIQUIDACION DEL FORM
                            this.ViewState["IdLiquidImpuesto"] = dtDatos.Rows[0]["idliquid_impuesto"].ToString().Trim();
                            this.ViewState["IdClienteEstablecimiento"] = dtDatos.Rows[0]["idcliente_establecimiento"].ToString().Trim();
                            //this.ViewState["TipoProceso"] = "2";
                            //--AÑO GRAVABLE
                            this.TxtAnioGravable.Text = dtDatos.Rows[0]["anio_gravable"].ToString().Trim();
                            //--FECHA MAX. DE PRESENTACION
                            string[] _ArrayFechaMaxPres = dtDatos.Rows[0]["fecha_max_presentacion"].ToString().Trim().Split('-');
                            this.CmbFecha1.SelectedValue = _ArrayFechaMaxPres[0].ToString().Trim();
                            this.CmbFecha2.SelectedValue = _ArrayFechaMaxPres[1].ToString().Trim();
                            this.CmbFecha3.SelectedValue = _ArrayFechaMaxPres[2].ToString().Trim();
                            //--FECHA LIQUIDACION
                            //string[] _ArrayFechaLiquidacion = dtDatos.Rows[0]["fecha_liquidacion"].ToString().Trim().Split('-');
                            this.LblFechaActual.Text = dtDatos.Rows[0]["fecha_liquidacion"].ToString().Trim();

                            //this.RbPeriodoImpuesto.SelectedValue = dtDatos.Rows[0]["periodo_impuesto"].ToString().Trim();
                            this.ViewState["OpcionUso"] = dtDatos.Rows[0]["opcion_uso"].ToString().Trim();
                            this.ViewState["Sancion"] = dtDatos.Rows[0]["sanciones"].ToString().Trim();

                            #region SELECCIONAR LA PERIODICIDAD DEL IMPUESTO
                            int _IdPeriodicidad = Int32.Parse(this.ViewState["IdPeriodicidad"].ToString().Trim());
                            int _PeriodicidadImpuesto = Int32.Parse(this.ViewState["PeriodicidadImpuesto"].ToString().Trim());
                            //--
                            switch (_IdPeriodicidad)
                            {
                                case 1:
                                    this.LblPeriodicidad.Text = "PERIODICIDAD DE PAGO ( MENSUAL )";
                                    this.RbPeriodoMensual.Visible = true;
                                    this.RbPeriodoMensual.Enabled = false;
                                    this.RbPeriodoMensual.SelectedValue = _PeriodicidadImpuesto.ToString();
                                    this.RbPeriodoBimestral.Visible = false;
                                    this.RbPeriodoTrimestral.Visible = false;
                                    this.RbPeriodoCuatrimestral.Visible = false;
                                    this.RbPeriodoSemestral.Visible = false;
                                    break;
                                case 3:
                                    this.LblPeriodicidad.Text = "PERIODICIDAD DE PAGO ( BIMESTRAL )";
                                    this.RbPeriodoMensual.Visible = false;
                                    this.RbPeriodoBimestral.Visible = true;
                                    this.RbPeriodoBimestral.Enabled = false;
                                    this.RbPeriodoBimestral.SelectedValue = _PeriodicidadImpuesto.ToString();
                                    this.RbPeriodoTrimestral.Visible = false;
                                    this.RbPeriodoCuatrimestral.Visible = false;
                                    this.RbPeriodoSemestral.Visible = false;
                                    break;
                                case 5:
                                    this.LblPeriodicidad.Text = "PERIODICIDAD DE PAGO ( TRIMESTRAL )";
                                    this.RbPeriodoMensual.Visible = false;
                                    this.RbPeriodoBimestral.Visible = false;
                                    this.RbPeriodoTrimestral.Visible = true;
                                    this.RbPeriodoTrimestral.Enabled = false;
                                    this.RbPeriodoTrimestral.SelectedValue = _PeriodicidadImpuesto.ToString();
                                    this.RbPeriodoCuatrimestral.Visible = false;
                                    this.RbPeriodoSemestral.Visible = false;
                                    break;
                                case 6:
                                    this.LblPeriodicidad.Text = "PERIODICIDAD DE PAGO ( CUATRIMESTRAL )";
                                    this.RbPeriodoMensual.Visible = false;
                                    this.RbPeriodoBimestral.Visible = false;
                                    this.RbPeriodoTrimestral.Visible = false;
                                    this.RbPeriodoCuatrimestral.Visible = true;
                                    this.RbPeriodoCuatrimestral.Enabled = false;
                                    this.RbPeriodoCuatrimestral.SelectedValue = _PeriodicidadImpuesto.ToString();
                                    this.RbPeriodoSemestral.Visible = false;
                                    break;
                                case 7:
                                    this.LblPeriodicidad.Text = "PERIODICIDAD DE PAGO ( SEMESTRAL )";
                                    this.RbPeriodoMensual.Visible = false;
                                    this.RbPeriodoBimestral.Visible = false;
                                    this.RbPeriodoTrimestral.Visible = false;
                                    this.RbPeriodoCuatrimestral.Visible = false;
                                    this.RbPeriodoSemestral.Visible = true;
                                    this.RbPeriodoSemestral.Enabled = false;
                                    this.RbPeriodoSemestral.SelectedValue = _PeriodicidadImpuesto.ToString();
                                    break;
                                default:
                                    break;
                            }
                            #endregion

                            #region AQUI VALIDAMOS LAS OPCIONES DE USO
                            //--AQUI VALIDAMOS LA OPCION DE USO.
                            if (this.ViewState["OpcionUso"].ToString().Trim().Equals("1"))
                            {
                                this.RbDeclaracionInicial.Checked = true;
                                this.RbSoloPago.Checked = false;
                                this.RbCorreccion.Checked = false;
                                this.TxtNumCorreccion.Text = "";
                            }
                            else if (this.ViewState["OpcionUso"].ToString().Trim().Equals("2"))
                            {
                                this.RbSoloPago.Checked = true;
                                this.RbDeclaracionInicial.Checked = false;
                                this.RbCorreccion.Checked = false;
                                this.TxtNumCorreccion.Text = "";
                            }
                            else if (this.ViewState["OpcionUso"].ToString().Trim().Equals("3"))
                            {
                                this.RbCorreccion.Checked = true;
                                this.RbSoloPago.Checked = false;
                                this.RbDeclaracionInicial.Checked = false;
                                this.TxtNumCorreccion.Enabled = true;
                                this.TxtNumCorreccion.Text = dtDatos.Rows[0]["num_declaracion"].ToString().Trim();
                            }
                            #endregion

                            #region AQUI VALIDAMOS LA OPCION DE SANCION
                            //--AQUI VALIDAMOS EL TIPO DE SANCION.
                            if (this.ViewState["Sancion"].ToString().Trim().Equals("1"))
                            {
                                this.RbExtemporaneidad.Checked = true;
                                this.RbCorreccion2.Checked = false;
                                this.RbInexactitud.Checked = false;
                                this.RbOtra.Checked = false;
                                this.TxtDescripcionSancion.Text = "";
                            }
                            else if (this.ViewState["Sancion"].ToString().Trim().Equals("2"))
                            {
                                this.RbCorreccion2.Checked = true;
                                this.RbExtemporaneidad.Checked = false;
                                this.RbInexactitud.Checked = false;
                                this.RbOtra.Checked = false;
                                this.TxtDescripcionSancion.Text = "";
                            }
                            else if (this.ViewState["Sancion"].ToString().Trim().Equals("3"))
                            {
                                this.RbInexactitud.Checked = true;
                                this.RbExtemporaneidad.Checked = false;
                                this.RbCorreccion2.Checked = false;
                                this.RbOtra.Checked = false;
                                this.TxtDescripcionSancion.Text = "";
                            }
                            else if (this.ViewState["Sancion"].ToString().Trim().Equals("4"))
                            {
                                this.RbOtra.Checked = true;
                                this.RbExtemporaneidad.Checked = false;
                                this.RbCorreccion2.Checked = false;
                                this.RbInexactitud.Checked = false;
                                this.TxtDescripcionSancion.Enabled = true;
                                this.TxtDescripcionSancion.Text = dtDatos.Rows[0]["descripcion_sancion_otro"].ToString().Trim();
                            }
                            else
                            {
                                this.RbExtemporaneidad.Checked = false;
                                this.RbCorreccion2.Checked = false;
                                this.RbInexactitud.Checked = false;
                                this.RbOtra.Checked = false;
                                this.TxtDescripcionSancion.Enabled = false;
                                this.TxtDescripcionSancion.Text = "";
                            }
                            #endregion

                            this.TxtValorRenglon39.Text = dtDatos.Rows[0]["valor_sancion"].ToString().Trim();
                            //this.LblValorRenglon37.Text = dtDatos.Rows[0]["interes_mora"].ToString().Trim();
                            this.TxtValorRenglon43.Text = dtDatos.Rows[0]["interes_mora"].ToString().Trim();
                            //--SELECCIONAR FIRMANTES
                            this.ViewState["IdFirmante1"] = dtDatos.Rows[0]["idfirmante_1"].ToString().Trim().Length > 0 ? dtDatos.Rows[0]["idfirmante_1"].ToString().Trim() : "0";
                            this.ViewState["IdFirmante2"] = dtDatos.Rows[0]["idfirmante_2"].ToString().Trim().Length > 0 ? dtDatos.Rows[0]["idfirmante_2"].ToString().Trim() : "0";

                            #region AQUI OBTENEMOS LOS DATOS DEL FIRMANTE
                            //--AQUI OBTENEMOS LOS DATOS DEL FIRMANTE COMO REPRESENTANTE LEGAL
                            #region OBTENER DATOS DEL FIRMANTE 1
                            //--FIRMANTE UNO
                            DataTable dtDatosFirm1 = new DataTable();
                            ObjFirmante.TipoConsulta = 4;   //--CON ESTE TIPO DE CONSULTA SOLO OBTENEMOS DATOS DEL REP. LEGAL
                            ObjFirmante.IdCliente = this.Session["IdCliente"] != null ? this.Session["IdCliente"].ToString().Trim() : null;
                            ObjFirmante.IdFirmante = null;
                            ObjFirmante.IdRol = 4;  //--ID ROL
                            ObjFirmante.IdEstado = 1;
                            ObjFirmante.MostrarSeleccione = "SI";
                            ObjFirmante.MotorBaseDatos = this.Session["MotorBaseDatos"].ToString().Trim();
                            //--
                            dtDatosFirm1 = ObjFirmante.GetImagenFirma();

                            if (dtDatosFirm1 != null)
                            {
                                if (dtDatosFirm1.Rows.Count > 0)
                                {
                                    #region OBTENER DATOS DEL FIRMANTE 1
                                    this.ViewState["DtFirmante1"] = dtDatosFirm1;
                                    //--
                                    DataRow[] dataRows = dtDatosFirm1.Select("id_firmante = " + Int32.Parse(this.ViewState["IdFirmante1"].ToString().Trim()));
                                    if (dataRows.Length == 1)
                                    {
                                        #region AQUI OBTENEMOS LOS DATOS DEL FIRMANTE
                                        this.ViewState["IdFirmante1"] = dataRows[0]["id_firmante"].ToString().Trim();
                                        this.ViewState["IdRolFirmante1"] = dataRows[0]["id_rol"].ToString().Trim();
                                        string _IdTipoIdentificacion = dataRows[0]["idtipo_identificacion"].ToString().Trim();
                                        //--AQUI VALIDAMOS EL TIPO DE IDENTIFICACION.
                                        if (_IdTipoIdentificacion.Equals("1"))
                                        {
                                            this.RbCedulaCiudFirm1.Checked = true;
                                            this.RbCedulaExtrFirm1.Checked = false;
                                        }
                                        else if (_IdTipoIdentificacion.Equals("3"))
                                        {
                                            this.RbCedulaExtrFirm1.Checked = true;
                                            this.RbCedulaCiudFirm1.Checked = false;
                                        }

                                        //this.LblNombreFirmante1.Text = dtDatosFirm1.Rows[0]["nombre_firmante"].ToString().Trim();
                                        this.LblNumeroFirm1.Text = "No.: " + dataRows[0]["numero_documento"].ToString().Trim();

                                        if (dataRows[0]["imagen_firma"].ToString().Trim().Length > 0)
                                        {
                                            Byte[] ImagenByte = (Byte[])dataRows[0]["imagen_firma"];
                                            this.ViewState["ImagenFirma1"] = ImagenByte;
                                            this.ImgFirma1.Visible = true;
                                            this.ImgFirma1.DataValue = ImagenByte;
                                        }
                                        else
                                        {
                                            this.ViewState["ImagenFirma1"] = null;
                                            this.ImgFirma1.Visible = false;
                                            this.ImgFirma1.DataValue = null;
                                        }
                                        #endregion
                                    }

                                    if (dtDatosFirm1.Rows.Count > 1)
                                    {
                                        this.Validator5.Enabled = true;
                                        this.CmbFirmante1.Enabled = true;
                                        this.CmbFirmante1.SelectedValue = this.ViewState["IdFirmante1"].ToString().Trim();
                                    }
                                    else
                                    {
                                        this.Validator5.Enabled = false;
                                        this.CmbFirmante1.Enabled = false;
                                    }

                                    //--AQUI HABILITAMOS EL COMBO DE LOS 2do FIRMANTES
                                    this.CmbFirmante1.DataSource = dtDatosFirm1;
                                    this.CmbFirmante1.DataValueField = "id_firmante";
                                    this.CmbFirmante1.DataTextField = "nombre_firmante";
                                    this.CmbFirmante1.DataBind();
                                    #endregion
                                }
                            }
                            #endregion

                            //--AQUI OBTENEMOS LOS DATOS DEL FIRMANTE COMO REVISOR FISCAL
                            #region OBTENER DATOS DEL FIRMANTE 2
                            //--FIRMANTE UNO
                            DataTable dtDatosFirm2 = new DataTable();
                            ObjFirmante.TipoConsulta = 4;   //--CON ESTE TIPO DE CONSULTA SOLO OBTENEMOS DATOS DEL REP. LEGAL
                            ObjFirmante.IdCliente = this.Session["IdCliente"].ToString().Trim();
                            ObjFirmante.IdFirmante = null;
                            ObjFirmante.IdRol = 5;  //--ID ROL REVISOR FISCAL
                            ObjFirmante.IdEstado = 1;
                            ObjFirmante.MostrarSeleccione = "SI";
                            ObjFirmante.MotorBaseDatos = this.Session["MotorBaseDatos"].ToString().Trim();
                            //--
                            dtDatosFirm2 = ObjFirmante.GetImagenFirma();

                            if (dtDatosFirm2 != null)
                            {
                                if (dtDatosFirm2.Rows.Count > 0)
                                {
                                    #region OBTENER DATOS DEL FIRMANTE 2
                                    this.ViewState["DtFirmante2"] = dtDatosFirm2;
                                    //--
                                    string _IdFirmante = this.ViewState["IdFirmante2"].ToString().Trim().Length > 0 ? this.ViewState["IdFirmante2"].ToString().Trim() : "0";
                                    DataRow[] dataRows = dtDatosFirm2.Select("id_firmante = " + _IdFirmante);
                                    if (dataRows.Length == 1)
                                    {
                                        #region AQUI OBTENEMOS LOS DATOS DEL FIRMANTE
                                        //this.UpdatePanel1.Update();
                                        this.ViewState["IdFirmante2"] = dataRows[0]["id_firmante"].ToString().Trim();
                                        this.ViewState["IdRolFirmante2"] = dataRows[0]["id_rol"].ToString().Trim();
                                        int _IdRol = Int32.Parse(this.ViewState["IdRolFirmante2"].ToString().Trim());
                                        //--AQUI VALIDAMOS EL TIPO DE IDENTIFICACION.
                                        if (_IdRol == 5 || _IdRol == 10)
                                        {
                                            this.RbFirmaContador.Checked = false;
                                            this.RbFirmaRevFiscal.Checked = true;
                                        }
                                        else if (_IdRol == 6)
                                        {
                                            this.RbFirmaContador.Checked = true;
                                            this.RbFirmaRevFiscal.Checked = false;
                                        }

                                        string _IdTipoIdentificacion = dataRows[0]["idtipo_identificacion"].ToString().Trim();
                                        //--AQUI VALIDAMOS EL TIPO DE IDENTIFICACION.
                                        if (_IdTipoIdentificacion.Equals("1"))
                                        {
                                            this.RbCedulaExtrFirm2.Checked = false;
                                            this.RbCedulaCiudFirm2.Checked = true;
                                        }
                                        else if (_IdTipoIdentificacion.Equals("3"))
                                        {
                                            this.RbCedulaExtrFirm2.Checked = true;
                                            this.RbCedulaCiudFirm2.Checked = false;
                                        }

                                        this.LblNumDocFirm2.Text = "No.: " + dataRows[0]["numero_documento"].ToString().Trim();
                                        this.LblNumTpFirm2.Text = "No.: " + dataRows[0]["numero_tp"].ToString().Trim();

                                        if (dataRows[0]["imagen_firma"].ToString().Trim().Length > 0)
                                        {
                                            Byte[] ImagenByte = (Byte[])dataRows[0]["imagen_firma"];
                                            this.ViewState["ImagenFirma2"] = ImagenByte;
                                            this.ImgFirma2.Visible = true;
                                            this.ImgFirma2.DataValue = ImagenByte;
                                        }
                                        else
                                        {
                                            this.ViewState["ImagenFirma2"] = null;
                                            this.ImgFirma2.Visible = false;
                                            this.ImgFirma2.DataValue = null;
                                        }
                                        #endregion
                                    }

                                    if (dtDatosFirm2.Rows.Count > 1)
                                    {
                                        //this.Validator6.Enabled = true;
                                        this.CmbFirmante2.Enabled = true;
                                        this.CmbFirmante2.SelectedValue = this.ViewState["IdFirmante2"].ToString().Trim();
                                    }
                                    else
                                    {
                                        //this.Validator6.Enabled = false;
                                        this.CmbFirmante2.Enabled = false;
                                    }

                                    //--AQUI HABILITAMOS EL COMBO DE LOS 2do FIRMANTES
                                    this.CmbFirmante2.DataSource = dtDatosFirm2;
                                    this.CmbFirmante2.DataValueField = "id_firmante";
                                    this.CmbFirmante2.DataTextField = "nombre_firmante";
                                    this.CmbFirmante2.DataBind();
                                    #endregion
                                }
                            }
                            #endregion
                            //--FIN
                            #endregion

                            //--AQUI OBTENEMOS LOS DATOS DEL CLIENTE
                            this.GetDatosCliente();
                            //--MANDAMOS A CONSULTAR LOS DATOS DE LA OFICINA + ESTADO FINANCIEROS
                            this.GetEstadoFinanciero();
                            #endregion
                        }
                        else
                        {
                            #region MOSTRAR MENSAJE DE USUARIO
                            this.LimpiarForm();
                            //Mostramos el mensaje porque se produjo un error con la Trx.
                            this.RadWindowManager1.ReloadOnShow = true;
                            this.RadWindowManager1.DestroyOnClose = true;
                            this.RadWindowManager1.Windows.Clear();
                            this.RadWindowManager1.Enabled = true;
                            this.RadWindowManager1.EnableAjaxSkinRendering = true;
                            this.RadWindowManager1.Visible = true;

                            RadWindow Ventana = new RadWindow();
                            Ventana.Modal = true;
                            string _MsgMensaje = "Señor usuario. El formulario se encuentra en estado [" + _EstadoLiquidacion + "]. Por favor valide con el administrador del sistema !";
                            Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgMensaje;
                            Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                            Ventana.VisibleOnPageLoad = true;
                            Ventana.Visible = true;
                            Ventana.Height = Unit.Pixel(300);
                            Ventana.Width = Unit.Pixel(600);
                            Ventana.KeepInScreenBounds = true;
                            Ventana.Title = "Mensaje del Sistema";
                            Ventana.VisibleStatusbar = false;
                            Ventana.Behaviors = WindowBehaviors.Close;
                            this.RadWindowManager1.Windows.Add(Ventana);
                            this.RadWindowManager1 = null;
                            Ventana = null;
                            #endregion
                        }
                        #endregion
                    }
                    else
                    {
                        this.ViewState["IdLiquidImpuesto"] = null;
                        this.ViewState["TipoProceso"] = "1";
                        //--AQUI OBTENEMOS LOS DATOS DEL CLIENTE
                        //this.GetDatosCliente();
                        //--MANDAMOS A CONSULTAR LOS DATOS DE LA OFICINA + ESTADO FINANCIEROS
                        this.GetEstadoFinanciero();
                    }
                }
            }
            catch (Exception ex)
            {
                #region MOSTRAR MENSAJE DE USUARIO
                //Mostramos el mensaje porque se produjo un error con la Trx.
                this.RadWindowManager1.ReloadOnShow = true;
                this.RadWindowManager1.DestroyOnClose = true;
                this.RadWindowManager1.Windows.Clear();
                this.RadWindowManager1.Enabled = true;
                this.RadWindowManager1.EnableAjaxSkinRendering = true;
                this.RadWindowManager1.Visible = true;

                RadWindow Ventana = new RadWindow();
                Ventana.Modal = true;
                string _MsgMensaje = "Señor usuario. Error al consultar la liquidación del impuesto. Motivo: " + ex.ToString();
                Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgMensaje;
                Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                Ventana.VisibleOnPageLoad = true;
                Ventana.Visible = true;
                Ventana.Height = Unit.Pixel(300);
                Ventana.Width = Unit.Pixel(600);
                Ventana.KeepInScreenBounds = true;
                Ventana.Title = "Mensaje del Sistema";
                Ventana.VisibleStatusbar = false;
                Ventana.Behaviors = WindowBehaviors.Close;
                this.RadWindowManager1.Windows.Add(Ventana);
                this.RadWindowManager1 = null;
                Ventana = null;
                #endregion
            }
        }

        private void GetDatosCliente()
        {
            try
            {
                ObjConsulta.TipoImpuesto = Int32.Parse(this.ViewState["IdFormImpuesto"].ToString().Trim());
                ObjConsulta.IdCliente = this.Session["IdCliente"] != null ? this.Session["IdCliente"].ToString().Trim() : null;
                this.ViewState["CodigoDane"] = this.TxtCodDane.Text.ToString().Trim();
                ObjConsulta.CodigoDane = this.ViewState["CodigoDane"].ToString().Trim();
                ObjConsulta.AnioGravable = this.TxtAnioGravable.Text.ToString().Trim();
                ObjConsulta.MotorBaseDatos = this.Session["MotorBaseDatos"].ToString().Trim();

                DataTable dtDatos = new DataTable();
                dtDatos = ObjConsulta.GetConsultarDatos();

                if (dtDatos != null)
                {
                    if (dtDatos.Rows.Count > 0)
                    {
                        #region OBTENEMOS LOS VALORES DE LA SESION (A. INFORMACION DEL CONTRIBUYENTE)
                        int _IdMunOficina = Int32.Parse(dtDatos.Rows[0]["idmun_oficina"].ToString().Trim());
                        this.ViewState["IdMunicipioOficina"] = _IdMunOficina;
                        this.ViewState["IdClienteEstablecimiento"] = Int32.Parse(dtDatos.Rows[0]["idcliente_establecimiento"].ToString().Trim());
                        this.ViewState["LiquidacionMixta"] = dtDatos.Rows[0]["liquidacion_mixta"].ToString().Trim();
                        this.LblNombreMunicipio.Text = dtDatos.Rows[0]["municipio_oficina"].ToString().Trim();
                        this.LblNombreDpto.Text = dtDatos.Rows[0]["dpto_oficina"].ToString().Trim();
                        this.LblNombreCliente.Text = dtDatos.Rows[0]["nombre_cliente"].ToString().Trim();

                        //--AQUI VALIDAMOS EL TIPO DE IDENTIFICACION.
                        if (dtDatos.Rows[0]["idtipo_identificacion"].ToString().Trim().Equals("1"))
                        {
                            this.RbCedulaCiudadania.Checked = true;
                        }
                        else if (dtDatos.Rows[0]["idtipo_identificacion"].ToString().Trim().Equals("2"))
                        {
                            this.RbNit.Checked = true;
                        }
                        else if (dtDatos.Rows[0]["idtipo_identificacion"].ToString().Trim().Equals("3"))
                        {
                            this.RbCedulaExtranjeria.Checked = true;
                        }

                        this.LblNumDocumento.Text = "No.: " + dtDatos.Rows[0]["numero_documento"].ToString().Trim();
                        this.LblDv.Text = "DV: " + dtDatos.Rows[0]["digito_verificacion"].ToString().Trim();
                        this.RbUnionTemporal.Checked = dtDatos.Rows[0]["consorcio_union_temporal"].ToString().Trim().Equals("S") ? true : false;
                        this.RbPatrimonioAut.Checked = dtDatos.Rows[0]["actividad_patrim_autonomo"].ToString().Trim().Equals("S") ? true : false;

                        this.LblDireccionNotificacion.Text = dtDatos.Rows[0]["direccion_cliente"].ToString().Trim();
                        this.LblMunicipioDirNotificacion.Text = dtDatos.Rows[0]["municipio_cliente"].ToString().Trim();
                        this.LblDptoDirNotificacion.Text = dtDatos.Rows[0]["dpto_cliente"].ToString().Trim();

                        this.LblTelefono.Text = dtDatos.Rows[0]["telefono_contacto"].ToString().Trim();
                        this.LblEmail.Text = dtDatos.Rows[0]["email_contacto"].ToString().Trim();
                        //this.LblNumEstablecimientos.Text = dtDatos.Rows[0]["numero_puntos"].ToString().Trim();
                        this.LblClasificacion.Text = dtDatos.Rows[0]["tipo_clasificacion"].ToString().Trim();
                        this.LblNumPlacaMunicipal.Text = dtDatos.Rows[0]["numero_placa_municipal"].ToString().Trim();
                        this.LblNumMatriculaIc.Text = dtDatos.Rows[0]["numero_matricula_ic"].ToString().Trim();
                        this.LblNumeroRit.Text = dtDatos.Rows[0]["numero_rit"].ToString().Trim();
                        this.LblAvisosTableros.Text = dtDatos.Rows[0]["avisos_tablero"].ToString().Trim().Equals("S") ? "SI" : "NO";
                        this.LblFechaInicioActividades.Text = dtDatos.Rows[0]["fecha_inicio_actividades"].ToString().Trim();

                        //--AQUI OBTENEMOS LA CANTIDAD DE ESTABLECIMIENTOS POR MUNICIPIO
                        ObjConsulta.TipoConsulta = 2;
                        ObjConsulta.IdMunicipio = _IdMunOficina;
                        ObjConsulta.IdEstado = 1;
                        int _NumeroPuntos = ObjConsulta.GetCantidadPuntosMunicipio();
                        this.LblNumEstablecimientos.Text = _NumeroPuntos.ToString();   //--dtDatos.Rows[0]["numero_puntos"].ToString().Trim();
                        #endregion

                        #region AQUI OBTENEMOS LA PERDIODICIDAD DEL IMPUESTO
                        //--
                        if (Int32.Parse(this.ViewState["TipoProceso"].ToString().Trim()) == 1)
                        {
                            #region AQUI OBTENEMOS LA PERIODICIDAD DE IMPUESTO AL MUNICIPIO
                            PeriodicidadPagos objPeriodicidad = new PeriodicidadPagos();
                            //--
                            objPeriodicidad.TipoConsulta = 1;
                            objPeriodicidad.IdMunicipio = _IdMunOficina;
                            objPeriodicidad.IdFormularioImpuesto = this.ViewState["IdFormImpuesto"].ToString().Trim();
                            objPeriodicidad.MostrarSeleccione = "NO";
                            objPeriodicidad.MotorBaseDatos = this.Session["MotorBaseDatos"].ToString().Trim();

                            DataTable dtPeriodicidad = new DataTable();
                            dtPeriodicidad = objPeriodicidad.GetPeriodicidadMunicipio();
                            if (dtPeriodicidad != null)
                            {
                                if (dtPeriodicidad.Rows.Count > 0)
                                {
                                    #region AQUI VALIDAMOS EL TIPO DE PERIODICIDAD CONFIGURADA AL MUNICIPIO
                                    foreach (DataRow rowItem in dtPeriodicidad.Rows)
                                    {
                                        #region OBTENER DATOS DEL DATATABLE
                                        int _IdPeriodicidad = Int32.Parse(rowItem["id_periodicidad"].ToString().Trim());
                                        this.ViewState["IdPeriodicidad"] = _IdPeriodicidad;
                                        string _PeriodicidadPago = rowItem["periodicidad_pago"].ToString().Trim();
                                        this.ViewState["Periodicidad"] = _PeriodicidadPago;
                                        this.LblPeriodicidad.Text = "PERIODICIDAD DE PAGO ( " + _PeriodicidadPago + " )";

                                        switch (_IdPeriodicidad)
                                        {
                                            case 1:
                                                this.RbPeriodoMensual.Visible = true;
                                                this.RbPeriodoBimestral.Visible = false;
                                                this.RbPeriodoTrimestral.Visible = false;
                                                this.RbPeriodoCuatrimestral.Visible = false;
                                                this.RbPeriodoSemestral.Visible = false;
                                                break;
                                            case 3:
                                                this.RbPeriodoMensual.Visible = false;
                                                this.RbPeriodoBimestral.Visible = true;
                                                this.RbPeriodoTrimestral.Visible = false;
                                                this.RbPeriodoCuatrimestral.Visible = false;
                                                this.RbPeriodoSemestral.Visible = false;
                                                break;
                                            case 5:
                                                this.RbPeriodoMensual.Visible = false;
                                                this.RbPeriodoBimestral.Visible = false;
                                                this.RbPeriodoTrimestral.Visible = true;
                                                this.RbPeriodoCuatrimestral.Visible = false;
                                                this.RbPeriodoSemestral.Visible = false;
                                                break;
                                            case 6:
                                                this.RbPeriodoMensual.Visible = false;
                                                this.RbPeriodoBimestral.Visible = false;
                                                this.RbPeriodoTrimestral.Visible = false;
                                                this.RbPeriodoCuatrimestral.Visible = true;
                                                this.RbPeriodoSemestral.Visible = false;
                                                break;
                                            case 7:
                                                this.RbPeriodoMensual.Visible = false;
                                                this.RbPeriodoBimestral.Visible = false;
                                                this.RbPeriodoTrimestral.Visible = false;
                                                this.RbPeriodoCuatrimestral.Visible = false;
                                                this.RbPeriodoSemestral.Visible = true;
                                                break;
                                            default:
                                                break;
                                        }
                                        #endregion
                                    }
                                    #endregion
                                }
                                else
                                {
                                    #region MOSTRAR MENSAJE DE USUARIO
                                    //Mostramos el mensaje porque se produjo un error con la Trx.
                                    this.RadWindowManager1.ReloadOnShow = true;
                                    this.RadWindowManager1.DestroyOnClose = true;
                                    this.RadWindowManager1.Windows.Clear();
                                    this.RadWindowManager1.Enabled = true;
                                    this.RadWindowManager1.EnableAjaxSkinRendering = true;
                                    this.RadWindowManager1.Visible = true;

                                    RadWindow Ventana = new RadWindow();
                                    Ventana.Modal = true;
                                    string _MsgMensaje = "1. Señor usuario, no se encontro la Periodicidad configurada del Impuesto. Por favor validar en PARAMETROS - DIVIPOLA - MUNICIPIOS - CONFIGURACIÓN DE IMPUESTOS !";
                                    Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgMensaje;
                                    Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                                    Ventana.VisibleOnPageLoad = true;
                                    Ventana.Visible = true;
                                    Ventana.Height = Unit.Pixel(300);
                                    Ventana.Width = Unit.Pixel(600);
                                    Ventana.KeepInScreenBounds = true;
                                    Ventana.Title = "Mensaje del Sistema";
                                    Ventana.VisibleStatusbar = false;
                                    Ventana.Behaviors = WindowBehaviors.Close;
                                    this.RadWindowManager1.Windows.Add(Ventana);
                                    this.RadWindowManager1 = null;
                                    Ventana = null;
                                    #endregion
                                }
                            }
                            else
                            {
                                #region MOSTRAR MENSAJE DE USUARIO
                                //Mostramos el mensaje porque se produjo un error con la Trx.
                                this.RadWindowManager1.ReloadOnShow = true;
                                this.RadWindowManager1.DestroyOnClose = true;
                                this.RadWindowManager1.Windows.Clear();
                                this.RadWindowManager1.Enabled = true;
                                this.RadWindowManager1.EnableAjaxSkinRendering = true;
                                this.RadWindowManager1.Visible = true;

                                RadWindow Ventana = new RadWindow();
                                Ventana.Modal = true;
                                string _MsgMensaje = "2. Señor usuario, error al obtener la Periodicidad de pago del Impuesto. Por favor validar en PARAMETROS - DIVIPOLA - MUNICIPIOS - CONFIGURACIÓN DE IMPUESTOS !";
                                Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgMensaje;
                                Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                                Ventana.VisibleOnPageLoad = true;
                                Ventana.Visible = true;
                                Ventana.Height = Unit.Pixel(300);
                                Ventana.Width = Unit.Pixel(600);
                                Ventana.KeepInScreenBounds = true;
                                Ventana.Title = "Mensaje del Sistema";
                                Ventana.VisibleStatusbar = false;
                                Ventana.Behaviors = WindowBehaviors.Close;
                                this.RadWindowManager1.Windows.Add(Ventana);
                                this.RadWindowManager1 = null;
                                Ventana = null;
                                #endregion
                            }
                            #endregion
                        }
                        #endregion
                    }
                    else
                    {
                        #region MOSTRAR MENSAJE DE USUARIO
                        //Mostramos el mensaje porque se produjo un error con la Trx.
                        this.RadWindowManager1.ReloadOnShow = true;
                        this.RadWindowManager1.DestroyOnClose = true;
                        this.RadWindowManager1.Windows.Clear();
                        this.RadWindowManager1.Enabled = true;
                        this.RadWindowManager1.EnableAjaxSkinRendering = true;
                        this.RadWindowManager1.Visible = true;

                        RadWindow Ventana = new RadWindow();
                        Ventana.Modal = true;
                        string _MsgMensaje = "No se encontro información con el codigo dane ingresado... !";
                        Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgMensaje;
                        Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                        Ventana.VisibleOnPageLoad = true;
                        Ventana.Visible = true;
                        Ventana.Height = Unit.Pixel(300);
                        Ventana.Width = Unit.Pixel(600);
                        Ventana.KeepInScreenBounds = true;
                        Ventana.Title = "Mensaje del Sistema";
                        Ventana.VisibleStatusbar = false;
                        Ventana.Behaviors = WindowBehaviors.Close;
                        this.RadWindowManager1.Windows.Add(Ventana);
                        this.RadWindowManager1 = null;
                        Ventana = null;
                        _log.Error(_MsgMensaje);
                        #endregion
                    }
                }
            }
            catch (Exception ex)
            {
                #region MOSTRAR MENSAJE DE USUARIO
                //Mostramos el mensaje porque se produjo un error con la Trx.
                this.RadWindowManager1.ReloadOnShow = true;
                this.RadWindowManager1.DestroyOnClose = true;
                this.RadWindowManager1.Windows.Clear();
                this.RadWindowManager1.Enabled = true;
                this.RadWindowManager1.EnableAjaxSkinRendering = true;
                this.RadWindowManager1.Visible = true;

                RadWindow Ventana = new RadWindow();
                Ventana.Modal = true;
                string _MsgMensaje = "Señor usuario. Ocurrio un Error al consultar los datos de la oficina. Motivo: " + ex.ToString();
                Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgMensaje;
                Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                Ventana.VisibleOnPageLoad = true;
                Ventana.Visible = true;
                Ventana.Height = Unit.Pixel(300);
                Ventana.Width = Unit.Pixel(600);
                Ventana.KeepInScreenBounds = true;
                Ventana.Title = "Mensaje del Sistema";
                Ventana.VisibleStatusbar = false;
                Ventana.Behaviors = WindowBehaviors.Close;
                this.RadWindowManager1.Windows.Add(Ventana);
                this.RadWindowManager1 = null;
                Ventana = null;
                _log.Error(_MsgMensaje);
                #endregion
            }
        }

        private void GetEstadoFinanciero()
        {
            try
            {
                #region OBTENEMOS LOS VALORES DE LA SESION (B. BASE GRAVABLE)
                //int _IdMunOficina = Int32.Parse(dtDatos.Rows[0]["idmun_oficina"].ToString().Trim());
                //this.ViewState["IdMunicipioOficina"] = _IdMunOficina;
                //this.LblNumEstablecimientos.Text = dtDatos.Rows[0]["numero_puntos"].ToString().Trim();
                //--
                ObjBaseGrav.TipoConsulta = 5;
                ObjBaseGrav.IdCliente = this.Session["IdCliente"] != null ? this.Session["IdCliente"].ToString().Trim() : null;
                ObjBaseGrav.IdClienteEstablecimiento = this.ViewState["IdClienteEstablecimiento"] != null ? this.ViewState["IdClienteEstablecimiento"].ToString().Trim() : null;
                ObjBaseGrav.IdFormImpuesto = "1";    //--this.ViewState["IdFormImpuesto"].ToString().Trim();
                ObjBaseGrav.IdFormConfiguracion = null;
                ObjBaseGrav.IdPuc = null;
                ObjBaseGrav.AnioGravable = this.TxtAnioGravable.Text.ToString().Trim();
                ObjBaseGrav.CodigoDane = this.TxtCodDane.Text.ToString().Trim();
                ObjBaseGrav.MesEf = this.ViewState["MesEFActual"].ToString().Trim();
                ObjBaseGrav.IdEstado = 1;
                ObjBaseGrav.TipoProceso = 2;
                ObjBaseGrav.MotorBaseDatos = this.Session["MotorBaseDatos"].ToString().Trim();

                DataTable dtBaseGravable = new DataTable();
                dtBaseGravable = ObjBaseGrav.GetBaseGravable();
                int _ContadorRow = 0;
                double _ValorRenglon8 = 0, _ValorRenglon9 = 0, _ValorRenglon10 = 0, _ValorRenglon11 = 0;
                double _ValorRenglon12 = 0, _ValorRenglon13 = 0, _ValorRenglon14 = 0, _ValorRenglon15 = 0;
                double _ValorRenglon16 = 0, _ValorRenglon26 = 0, _ValorRenglon27 = 0, _ValorRenglon28 = 0;
                double _ValorRenglon29 = 0, _ValorRenglon30 = 0, _ValorRenglon31 = 0, _ValorRenglon32 = 0;
                double _ValorRenglon33 = 0, _ValorRenglon34 = 0, _ValorRenglon35 = 0, _ValorRenglon36 = 0, _ValorRenglon37 = 0;

                if (dtBaseGravable != null)
                {
                    if (dtBaseGravable.Rows.Count > 0)
                    {
                        #region AQUI RECORREMOS LAS BASE GRAVABLE OBTENIDA AL MUNICIPIO
                        foreach (DataRow rowItem in dtBaseGravable.Rows)
                        {
                            #region VALORES OBTENIDOS DE LA BASE GRAVABLE
                            _ContadorRow++;
                            int _IdBaseGravable = Int32.Parse(rowItem["idbase_gravable"].ToString().Trim());
                            _ValorRenglon8 = Double.Parse(rowItem["valor_renglon8"].ToString().Trim());
                            _ValorRenglon9 = Double.Parse(rowItem["valor_renglon9"].ToString().Trim());
                            //_ValorRenglon10 = Double.Parse(rowItem["valor_renglon10"].ToString().Trim());
                            //_ValorRenglon11 = Double.Parse(rowItem["valor_renglon11"].ToString().Trim());
                            //_ValorRenglon12 = Double.Parse(rowItem["valor_renglon12"].ToString().Trim());
                            //_ValorRenglon13 = Double.Parse(rowItem["valor_renglon13"].ToString().Trim());
                            //_ValorRenglon14 = Double.Parse(rowItem["valor_renglon14"].ToString().Trim());
                            //_ValorRenglon15 = Double.Parse(rowItem["valor_renglon15"].ToString().Trim());
                            _ValorRenglon16 = Double.Parse(rowItem["valor_renglon16"].ToString().Trim());
                            _ValorRenglon26 = Double.Parse(rowItem["valor_renglon26"].ToString().Trim());
                            _ValorRenglon27 = Double.Parse(rowItem["valor_renglon27"].ToString().Trim());
                            _ValorRenglon28 = Double.Parse(rowItem["valor_renglon28"].ToString().Trim());
                            _ValorRenglon29 = Double.Parse(rowItem["valor_renglon29"].ToString().Trim());
                            //_ValorRenglon30 = Double.Parse(rowItem["valor_renglon30"].ToString().Trim());
                            _ValorRenglon31 = Double.Parse(rowItem["valor_renglon31"].ToString().Trim());
                            _ValorRenglon32 = Double.Parse(rowItem["valor_renglon32"].ToString().Trim());
                            _ValorRenglon33 = Double.Parse(rowItem["valor_renglon33"].ToString().Trim());
                            _ValorRenglon34 = Double.Parse(rowItem["valor_renglon34"].ToString().Trim());
                            _ValorRenglon35 = Double.Parse(rowItem["valor_renglon35"].ToString().Trim());
                            _ValorRenglon36 = Double.Parse(rowItem["valor_renglon36"].ToString().Trim());
                            _ValorRenglon37 = Double.Parse(rowItem["valor_renglon37"].ToString().Trim());

                            #region AQUI OBTENEMOS LA SUMATORIA DE LOS RENGLONES DEL 11 AL 15
                            //--AQUI OBTENEMOS LA SUMATORIA DE LOS RENGLONES DEL 11 AL 15
                            ObjBaseGrav.TipoConsulta = 6;
                            //--
                            DataTable dtSumBaseGravable = new DataTable();
                            dtSumBaseGravable = ObjBaseGrav.GetSumaBaseGravable();
                            if (dtSumBaseGravable != null)
                            {
                                if (dtSumBaseGravable.Rows.Count > 0)
                                {
                                    foreach (DataRow rowItem2 in dtSumBaseGravable.Rows)
                                    {
                                        _ValorRenglon10 = Double.Parse(rowItem2["valor_renglon10"].ToString().Trim());
                                        _ValorRenglon11 = Double.Parse(rowItem2["valor_renglon11"].ToString().Trim());
                                        _ValorRenglon12 = Double.Parse(rowItem2["valor_renglon12"].ToString().Trim());
                                        _ValorRenglon13 = Double.Parse(rowItem2["valor_renglon13"].ToString().Trim());
                                        _ValorRenglon14 = Double.Parse(rowItem2["valor_renglon14"].ToString().Trim());
                                        _ValorRenglon15 = Double.Parse(rowItem2["valor_renglon15"].ToString().Trim());
                                    }
                                }
                                else
                                {
                                    _ValorRenglon10 = Double.Parse(rowItem["valor_renglon10"].ToString().Trim());
                                    _ValorRenglon11 = Double.Parse(rowItem["valor_renglon11"].ToString().Trim());
                                    _ValorRenglon12 = Double.Parse(rowItem["valor_renglon12"].ToString().Trim());
                                    _ValorRenglon13 = Double.Parse(rowItem["valor_renglon13"].ToString().Trim());
                                    _ValorRenglon14 = Double.Parse(rowItem["valor_renglon14"].ToString().Trim());
                                    _ValorRenglon15 = Double.Parse(rowItem["valor_renglon15"].ToString().Trim());
                                }
                            }
                            else
                            {
                                _ValorRenglon10 = Double.Parse(rowItem["valor_renglon10"].ToString().Trim());
                                _ValorRenglon11 = Double.Parse(rowItem["valor_renglon11"].ToString().Trim());
                                _ValorRenglon12 = Double.Parse(rowItem["valor_renglon12"].ToString().Trim());
                                _ValorRenglon13 = Double.Parse(rowItem["valor_renglon13"].ToString().Trim());
                                _ValorRenglon14 = Double.Parse(rowItem["valor_renglon14"].ToString().Trim());
                                _ValorRenglon15 = Double.Parse(rowItem["valor_renglon15"].ToString().Trim());
                            }
                            #endregion

                            #region AQUI MOSTRAMOS LOS VALORES EN LOS LABEL DEL FORMULARIO
                            //--REALIZAMOS LA SUMA DE LA BASE GRAVABLE DEL MES ANTERIOR CON LA BASE GRAVABLE DEL MES ACTUAL
                            //double _ValorRenglon8Aux = (_ValorRenglon8 - FixedData.ValorRestarRenglon8);
                            double _TotalValorRenglon8 = (_ValorRenglon8 - Double.Parse(this.ViewState["ValorEFMesAntesR8"].ToString().Trim()));
                            this.LblValorRenglon8.Text = String.Format(String.Format("{0:###,###,###,##0}", round(Math.Abs(_TotalValorRenglon8))));
                            //double _TotalValorRenglon9 = (_ValorRenglon9 - Double.Parse(this.ViewState["ValorEFMesAntesR9"].ToString().Trim()));
                            double _TotalValorRenglon9 = (_TotalValorRenglon8 - _ValorRenglon10);
                            this.LblValorRenglon9.Text = String.Format(String.Format("{0:###,###,##0}", round(Math.Abs(_TotalValorRenglon9))));
                            //--
                            //double _TotalValorRenglon10 = (_TotalValorRenglon8 - _TotalValorRenglon9);
                            double _TotalValorRenglon10 = (round(Math.Abs(_TotalValorRenglon8)) - round(Math.Abs(_TotalValorRenglon9)));
                            this.LblValorRenglon10.Text = String.Format(String.Format("{0:###,###,##0}", round(Math.Abs(_TotalValorRenglon10))));
                            double _TotalValorRenglon11 = (_ValorRenglon11 - Double.Parse(this.ViewState["ValorEFMesAntesR11"].ToString().Trim()));
                            this.LblValorRenglon11.Text = String.Format(String.Format("{0:###,###,##0}", round(Math.Abs(_TotalValorRenglon11))));
                            double _TotalValorRenglon12 = (_ValorRenglon12 - Double.Parse(this.ViewState["ValorEFMesAntesR12"].ToString().Trim()));
                            this.LblValorRenglon12.Text = String.Format(String.Format("{0:###,###,##0}", round(Math.Abs(_TotalValorRenglon12))));
                            double _TotalValorRenglon13 = (_ValorRenglon13 - Double.Parse(this.ViewState["ValorEFMesAntesR13"].ToString().Trim()));
                            this.LblValorRenglon13.Text = String.Format(String.Format("{0:###,###,##0}", round(Math.Abs(_TotalValorRenglon13))));
                            double _TotalValorRenglon14 = (_ValorRenglon14 - Double.Parse(this.ViewState["ValorEFMesAntesR14"].ToString().Trim()));
                            this.LblValorRenglon14.Text = String.Format(String.Format("{0:###,###,##0}", round(Math.Abs(_TotalValorRenglon14))));
                            double _TotalValorRenglon15 = (_ValorRenglon15 - Double.Parse(this.ViewState["ValorEFMesAntesR15"].ToString().Trim()));
                            this.LblValorRenglon15.Text = String.Format(String.Format("{0:###,###,##0}", round(Math.Abs(_TotalValorRenglon15))));
                            //this.LblValorRenglon16.Text = String.Format(String.Format("{0:###,###,##0}", round(Math.Abs(_ValorRenglon9))));

                            double _TotalValorRenglon26 = (_ValorRenglon26 - Double.Parse(this.ViewState["ValorEFMesAntesR26"].ToString().Trim()));
                            this.LblValorRenglon26.Text = String.Format(String.Format("{0:###,###,##0}", round(Math.Abs(_TotalValorRenglon26))));
                            double _TotalValorRenglon27 = (_ValorRenglon27 - Double.Parse(this.ViewState["ValorEFMesAntesR27"].ToString().Trim()));
                            this.LblValorRenglon27.Text = String.Format(String.Format("{0:###,###,##0}", round(Math.Abs(_TotalValorRenglon27))));
                            double _TotalValorRenglon28 = (_ValorRenglon28 - Double.Parse(this.ViewState["ValorEFMesAntesR28"].ToString().Trim()));
                            this.LblValorRenglon28.Text = String.Format(String.Format("{0:###,###,##0}", round(Math.Abs(_TotalValorRenglon28))));
                            double _TotalValorRenglon29 = (_ValorRenglon29 - Double.Parse(this.ViewState["ValorEFMesAntesR29"].ToString().Trim()));
                            this.LblValorRenglon29.Text = String.Format(String.Format("{0:###,###,##0}", round(Math.Abs(_TotalValorRenglon29))));

                            double _TotalValorRenglon31 = (_ValorRenglon31 - Double.Parse(this.ViewState["ValorEFMesAntesR31"].ToString().Trim()));
                            this.LblValorRenglon31.Text = String.Format(String.Format("{0:###,###,##0}", round(Math.Abs(_TotalValorRenglon31))));
                            double _TotalValorRenglon32 = (_ValorRenglon32 - Double.Parse(this.ViewState["ValorEFMesAntesR32"].ToString().Trim()));
                            this.LblValorRenglon32.Text = String.Format(String.Format("{0:###,###,##0}", round(Math.Abs(_TotalValorRenglon32))));
                            double _TotalValorRenglon33 = (_ValorRenglon33 - Double.Parse(this.ViewState["ValorEFMesAntesR33"].ToString().Trim()));
                            this.LblValorRenglon33.Text = String.Format(String.Format("{0:###,###,##0}", round(Math.Abs(_TotalValorRenglon33))));
                            double _TotalValorRenglon34 = (_ValorRenglon34 - Double.Parse(this.ViewState["ValorEFMesAntesR34"].ToString().Trim()));
                            this.LblValorRenglon34.Text = String.Format(String.Format("{0:###,###,##0}", round(Math.Abs(_TotalValorRenglon34))));
                            double _TotalValorRenglon35 = (_ValorRenglon35 - Double.Parse(this.ViewState["ValorEFMesAntesR35"].ToString().Trim()));
                            this.LblValorRenglon35.Text = String.Format(String.Format("{0:###,###,##0}", round(Math.Abs(_TotalValorRenglon35))));
                            double _TotalValorRenglon36 = (_ValorRenglon36 - Double.Parse(this.ViewState["ValorEFMesAntesR36"].ToString().Trim()));
                            this.LblValorRenglon36.Text = String.Format(String.Format("{0:###,###,##0}", round(Math.Abs(_TotalValorRenglon36))));
                            double _TotalValorRenglon37 = (_ValorRenglon37 - Double.Parse(this.ViewState["ValorEFMesAntesR37"].ToString().Trim()));
                            this.LblValorRenglon37.Text = String.Format(String.Format("{0:###,###,##0}", round(Math.Abs(_TotalValorRenglon37))));

                            //--AQUI CALCULAMOS EL VALOR DEL RENGLON 16
                            _ValorRenglon10 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace(FixedData.SeparadorMilesAp, ""));
                            _ValorRenglon11 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace(FixedData.SeparadorMilesAp, ""));
                            _ValorRenglon12 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace(FixedData.SeparadorMilesAp, ""));
                            _ValorRenglon13 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace(FixedData.SeparadorMilesAp, ""));
                            _ValorRenglon14 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace(FixedData.SeparadorMilesAp, ""));
                            _ValorRenglon15 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace(FixedData.SeparadorMilesAp, ""));
                            //--
                            double _SumRenglones = (_ValorRenglon11 - _ValorRenglon12 - _ValorRenglon13 - _ValorRenglon14 - _ValorRenglon15);
                            //_ValorRenglon16 = (_ValorRenglon10 - Double.Parse(_SumRenglones.ToString().Replace("-", "")));
                            _ValorRenglon16 = (_ValorRenglon10 - Double.Parse(_SumRenglones.ToString().Replace("-", "")));
                            this.LblValorRenglon16.Text = String.Format(String.Format("{0:###,###,##0}", round(Math.Abs(_ValorRenglon16))));
                            #endregion
                            //--
                            break;
                            #endregion
                        }
                        #endregion
                    }
                    else
                    {
                        #region MOSTRAR MENSAJE DE USUARIO
                        //Mostramos el mensaje porque se produjo un error con la Trx.
                        this.RadWindowManager1.ReloadOnShow = true;
                        this.RadWindowManager1.DestroyOnClose = true;
                        this.RadWindowManager1.Windows.Clear();
                        this.RadWindowManager1.Enabled = true;
                        this.RadWindowManager1.EnableAjaxSkinRendering = true;
                        this.RadWindowManager1.Visible = true;

                        RadWindow Ventana = new RadWindow();
                        Ventana.Modal = true;
                        string _MsgMensaje = "2. No se encontro información de base gravable del municipio... !";
                        Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgMensaje;
                        Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                        Ventana.VisibleOnPageLoad = true;
                        Ventana.Visible = true;
                        Ventana.Height = Unit.Pixel(300);
                        Ventana.Width = Unit.Pixel(600);
                        Ventana.KeepInScreenBounds = true;
                        Ventana.Title = "Mensaje del Sistema";
                        Ventana.VisibleStatusbar = false;
                        Ventana.Behaviors = WindowBehaviors.Close;
                        this.RadWindowManager1.Windows.Add(Ventana);
                        this.RadWindowManager1 = null;
                        Ventana = null;
                        _log.Error(_MsgMensaje);
                        return;
                        #endregion
                    }
                }
                else
                {
                    #region MOSTRAR MENSAJE DE USUARIO
                    //Mostramos el mensaje porque se produjo un error con la Trx.
                    this.RadWindowManager1.ReloadOnShow = true;
                    this.RadWindowManager1.DestroyOnClose = true;
                    this.RadWindowManager1.Windows.Clear();
                    this.RadWindowManager1.Enabled = true;
                    this.RadWindowManager1.EnableAjaxSkinRendering = true;
                    this.RadWindowManager1.Visible = true;

                    RadWindow Ventana = new RadWindow();
                    Ventana.Modal = true;
                    string _MsgMensaje = "1. No se encontro información de base gravable del municipio... !";
                    Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgMensaje;
                    Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                    Ventana.VisibleOnPageLoad = true;
                    Ventana.Visible = true;
                    Ventana.Height = Unit.Pixel(300);
                    Ventana.Width = Unit.Pixel(600);
                    Ventana.KeepInScreenBounds = true;
                    Ventana.Title = "Mensaje del Sistema";
                    Ventana.VisibleStatusbar = false;
                    Ventana.Behaviors = WindowBehaviors.Close;
                    this.RadWindowManager1.Windows.Add(Ventana);
                    this.RadWindowManager1 = null;
                    Ventana = null;
                    _log.Error(_MsgMensaje);
                    return;
                    #endregion
                }
                #endregion

                #region OBTENEMOS LOS VALORES DE LA SESION (C. DISCRIMINACION DE ACTIVIDADES ECONOMICAS)
                ObjConsulta.TipoConsulta = 1;
                ObjConsulta.IdFormularioImpuesto = Int32.Parse(this.ViewState["IdFormImpuesto"].ToString().Trim());
                ObjConsulta.AnioGravable = this.TxtAnioGravable.Text.ToString().Trim();
                ObjConsulta.IdClienteEstablecimiento = this.ViewState["IdClienteEstablecimiento"].ToString().Trim();
                ObjConsulta.MotorBaseDatos = this.Session["MotorBaseDatos"].ToString().Trim();

                DataTable dtActEconomica = new DataTable();
                dtActEconomica = ObjConsulta.GetConsultarActEconomica();
                this.ViewState["dtActEconomica"] = dtActEconomica;
                double _TotalImpuesto = 0;

                if (dtActEconomica != null)
                {
                    if (dtActEconomica.Rows.Count > 0)
                    {
                        this.ViewState["ParamDesagregacion"] = "IdClienteEstablecimiento=" + this.ViewState["IdClienteEstablecimiento"].ToString().Trim() + "&IdFormImpuesto=" + this.ViewState["IdFormImpuesto"].ToString().Trim() + "&AnioGravable=" + ObjConsulta.AnioGravable;
                        _ContadorRow = 1;

                        //--AQUI RECORREMOS EL DATATABLE PARA MOSTRAR LAS ACTIVIDADES ECONOMICAS.
                        #region AQUI RECORREMOS EL DATATABLE
                        foreach (DataRow rowItem in dtActEconomica.Rows)
                        {
                            #region AQUI DEFINIMOS LOS VALORES DE CADA DE LAS 3 ACTIVIDADES DEL FORMULARIO
                            string _CodigoActividad = rowItem["codigo_actividad"].ToString().Trim();
                            int _IdCalcularTarifaPor = Int32.Parse(rowItem["idtipo_calculo"].ToString().Trim());
                            int _IdTipoTarifa = Int32.Parse(rowItem["idtipo_tarifa"].ToString().Trim());
                            double _TarifaLey = Double.Parse(rowItem["tarifa_ley"].ToString().Trim());
                            double _TarifaMunicipio = Double.Parse(rowItem["tarifa_municipio"].ToString().Trim());
                            string _SaldoFinal1 = rowItem["saldo_final"].ToString().Trim().Replace("-", "");
                            double _SaldoFinal = Double.Parse(_SaldoFinal1);
                            double _ValorActividad = 0;

                            switch (_ContadorRow)
                            {
                                case 1:
                                    #region AQUI CALCULAMOS EL VALOR DE LA ACTIVIDAD ECONOMICA 1
                                    //--AQUI OBTENEMOS LA CANTIDAD DE FILAS DEL DATATABLE
                                    int _CantidadFilas = dtActEconomica.Rows.Count;
                                    double _DefValorActividad = 0;
                                    if (_CantidadFilas > 1)
                                    {
                                        this.LblCodActividad1.Text = _CodigoActividad;
                                        _DefValorActividad = _SaldoFinal > 0 ? _SaldoFinal : _ValorRenglon16;
                                        this.LblIngresosActividad1.Text = String.Format(String.Format("{0:###,###,##0}", round(_DefValorActividad)));
                                    }
                                    else
                                    {
                                        this.LblCodActividad1.Text = _CodigoActividad;
                                        _DefValorActividad = _ValorRenglon16;
                                        this.LblIngresosActividad1.Text = String.Format(String.Format("{0:###,###,##0}", round(_DefValorActividad)));
                                    }

                                    //--AQUI DEFINIMOS EL TIPO DE TARIFA
                                    if (_IdTipoTarifa == 1)      //--1. PORCENTUAL
                                    {
                                        #region VALIDACION DE LA TARIFA PORCENTUAL
                                        this.LblTipoTarifaAct.Text = "TARIFA (porcentual)";

                                        //--AQUI HACEMOS EL CALCULO DE LA TARIFA
                                        if (_IdCalcularTarifaPor == 1)      //--1. TARIFA DE LEY
                                        {
                                            this.LblTarifaActividad1.Text = _TarifaLey + "%";
                                            _ValorActividad = ((_DefValorActividad * _TarifaLey) / 100);
                                        }
                                        else if (_IdCalcularTarifaPor == 2)      //--1. TARIFA DEL MUNICIPIO
                                        {
                                            this.LblTarifaActividad1.Text = _TarifaMunicipio + "%";
                                            _ValorActividad = ((_DefValorActividad * _TarifaMunicipio) / 100);
                                        }

                                        this.LblValorRenglon17.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorActividad)));
                                        #endregion
                                    }
                                    else if (_IdTipoTarifa == 2)    //--2. POR MIL
                                    {
                                        #region VALIDACION DE LA TARIFA POR MIL
                                        this.LblTipoTarifaAct.Text = "TARIFA (por mil)";

                                        //--AQUI HACEMOS EL CALCULO DE LA TARIFA
                                        if (_IdCalcularTarifaPor == 1)      //--1. TARIFA DE LEY
                                        {
                                            this.LblTarifaActividad1.Text = _TarifaLey.ToString();
                                            _ValorActividad = ((_DefValorActividad * _TarifaLey) / 1000);
                                        }
                                        else if (_IdCalcularTarifaPor == 2)      //--1. TARIFA DEL MUNICIPIO
                                        {
                                            this.LblTarifaActividad1.Text = _TarifaMunicipio.ToString();
                                            //_ValorActividad = (_DefValorActividad * _TarifaMunicipio);
                                            _ValorActividad = ((_DefValorActividad * _TarifaMunicipio) / 1000);
                                        }

                                        this.LblValorRenglon17.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorActividad)));
                                        #endregion
                                    }
                                    else if (_IdTipoTarifa == 8)    //--8. POR UNIDAD
                                    {
                                        #region VALIDACION DE LA TARIFA POR UNIDAD
                                        this.LblTipoTarifaAct.Text = "TARIFA (por unidad)";

                                        //--AQUI HACEMOS EL CALCULO DE LA TARIFA
                                        if (_IdCalcularTarifaPor == 1)      //--1. TARIFA DE LEY
                                        {
                                            this.LblTarifaActividad1.Text = _TarifaLey.ToString();
                                            _ValorActividad = (_DefValorActividad * _TarifaLey);
                                        }
                                        else if (_IdCalcularTarifaPor == 2)      //--1. TARIFA DEL MUNICIPIO
                                        {
                                            this.LblTarifaActividad1.Text = _TarifaMunicipio.ToString();
                                            _ValorActividad = (_DefValorActividad * _TarifaMunicipio);
                                        }

                                        this.LblValorRenglon17.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorActividad)));
                                        #endregion
                                    }
                                    break;
                                #endregion

                                case 2:
                                    #region AQUI CALCULAMOS EL VALOR DE LA ACTIVIDAD ECONOMICA 2
                                    this.LblCodActividad2.Text = _CodigoActividad;
                                    this.LblIngresosActividad2.Text = String.Format(String.Format("{0:###,###,##0}", round(_SaldoFinal)));

                                    //--AQUI DEFINIMOS EL TIPO DE TARIFA
                                    if (_IdTipoTarifa == 1)      //--1. PORCENTUAL
                                    {
                                        #region VALIDACION DE LA TARIFA PORCENTUAL
                                        this.LblTipoTarifaAct.Text = "TARIFA (porcentual)";

                                        //--AQUI HACEMOS EL CALCULO DE LA TARIFA
                                        if (_IdCalcularTarifaPor == 1)      //--1. TARIFA DE LEY
                                        {
                                            this.LblTarifaActividad2.Text = _TarifaLey + "%";
                                            _ValorActividad = ((_SaldoFinal * _TarifaLey) / 100);
                                        }
                                        else if (_IdCalcularTarifaPor == 2)      //--1. TARIFA DEL MUNICIPIO
                                        {
                                            this.LblTarifaActividad2.Text = _TarifaMunicipio + "%";
                                            _ValorActividad = ((_SaldoFinal * _TarifaMunicipio) / 100);
                                        }

                                        this.LblValorRenglon18.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorActividad)));
                                        #endregion
                                    }
                                    else if (_IdTipoTarifa == 2)    //--2. POR MIL
                                    {
                                        #region VALIDACION DE LA TARIFA POR MIL
                                        this.LblTipoTarifaAct.Text = "TARIFA (por mil)";

                                        //--AQUI HACEMOS EL CALCULO DE LA TARIFA
                                        if (_IdCalcularTarifaPor == 1)      //--1. TARIFA DE LEY
                                        {
                                            this.LblTarifaActividad2.Text = _TarifaLey.ToString();
                                            _ValorActividad = ((_SaldoFinal * _TarifaLey) / 1000);
                                        }
                                        else if (_IdCalcularTarifaPor == 2)      //--1. TARIFA DEL MUNICIPIO
                                        {
                                            this.LblTarifaActividad2.Text = _TarifaMunicipio.ToString();
                                            _ValorActividad = (_SaldoFinal * _TarifaMunicipio);
                                            //_ValorActividad = ((_SaldoFinal * _TarifaMunicipio) / 1000);
                                        }

                                        this.LblValorRenglon18.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorActividad)));
                                        #endregion
                                    }
                                    else if (_IdTipoTarifa == 8)    //--8. POR UNIDAD
                                    {
                                        #region VALIDACION DE LA TARIFA POR UNIDAD
                                        this.LblTipoTarifaAct.Text = "TARIFA (por unidad)";

                                        //--AQUI HACEMOS EL CALCULO DE LA TARIFA
                                        if (_IdCalcularTarifaPor == 1)      //--1. TARIFA DE LEY
                                        {
                                            this.LblTarifaActividad2.Text = _TarifaLey.ToString();
                                            _ValorActividad = (_SaldoFinal * _TarifaLey);
                                        }
                                        else if (_IdCalcularTarifaPor == 2)      //--1. TARIFA DEL MUNICIPIO
                                        {
                                            this.LblTarifaActividad2.Text = _TarifaMunicipio.ToString();
                                            _ValorActividad = (_SaldoFinal * _TarifaMunicipio);
                                        }

                                        this.LblValorRenglon18.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorActividad)));
                                        #endregion
                                    }
                                    break;
                                #endregion

                                case 3:
                                    #region AQUI CALCULAMOS EL VALOR DE LA ACTIVIDAD ECONOMICA 3
                                    this.LblCodActividad3.Text = _CodigoActividad;
                                    this.LblIngresosActividad3.Text = String.Format(String.Format("{0:###,###,##0}", round(_SaldoFinal)));

                                    //--AQUI DEFINIMOS EL TIPO DE TARIFA
                                    if (_IdTipoTarifa == 1)      //--1. PORCENTUAL
                                    {
                                        #region VALIDACION DE LA TARIFA PORCENTUAL
                                        this.LblTipoTarifaAct.Text = "TARIFA (porcentual)";

                                        //--AQUI HACEMOS EL CALCULO DE LA TARIFA
                                        if (_IdTipoTarifa == 1)      //--1. TARIFA DE LEY
                                        {
                                            this.LblTarifaActividad3.Text = _TarifaLey + "%";
                                            _ValorActividad = ((_SaldoFinal * _TarifaLey) / 100);
                                        }
                                        else if (_IdTipoTarifa == 2)      //--1. TARIFA DEL MUNICIPIO
                                        {
                                            this.LblTarifaActividad3.Text = _TarifaMunicipio + "%";
                                            _ValorActividad = ((_SaldoFinal * _TarifaMunicipio) / 100);
                                        }

                                        this.LblValorRenglon19.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorActividad)));
                                        #endregion
                                    }
                                    else if (_IdTipoTarifa == 2)    //--2. POR MIL
                                    {
                                        #region VALIDACION DE LA TARIFA POR MIL
                                        this.LblTipoTarifaAct.Text = "TARIFA (por mil)";

                                        //--AQUI HACEMOS EL CALCULO DE LA TARIFA
                                        if (_IdTipoTarifa == 1)      //--1. TARIFA DE LEY
                                        {
                                            this.LblTarifaActividad3.Text = _TarifaLey.ToString();
                                            _ValorActividad = ((_SaldoFinal * _TarifaLey) / 1000);
                                        }
                                        else if (_IdTipoTarifa == 2)      //--1. TARIFA DEL MUNICIPIO
                                        {
                                            this.LblTarifaActividad3.Text = _TarifaMunicipio.ToString();
                                            _ValorActividad = (_SaldoFinal * _TarifaMunicipio);
                                            //_ValorActividad = ((_SaldoFinal * _TarifaMunicipio) / 1000);
                                        }

                                        this.LblValorRenglon19.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorActividad)));
                                        #endregion
                                    }
                                    else if (_IdTipoTarifa == 8)    //--8. POR UNIDAD
                                    {
                                        #region VALIDACION DE LA TARIFA POR UNIDAD
                                        this.LblTipoTarifaAct.Text = "TARIFA (por unidad)";

                                        //--AQUI HACEMOS EL CALCULO DE LA TARIFA
                                        if (_IdTipoTarifa == 1)      //--1. TARIFA DE LEY
                                        {
                                            this.LblTarifaActividad3.Text = _TarifaLey.ToString();
                                            _ValorActividad = (_SaldoFinal * _TarifaLey);
                                        }
                                        else if (_IdTipoTarifa == 2)      //--1. TARIFA DEL MUNICIPIO
                                        {
                                            this.LblTarifaActividad3.Text = _TarifaMunicipio.ToString();
                                            _ValorActividad = (_SaldoFinal * _TarifaMunicipio);
                                        }

                                        this.LblValorRenglon19.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorActividad)));
                                        #endregion
                                    }
                                    break;
                                #endregion

                                default:
                                    //this.LblIngresosActividad4.Text = String.Format(String.Format("{0:###,###,##0}", _ValorRenglon16));
                                    this.LblIngresosActividad4.Text = "0";
                                    this.LblTarifaActividad4.Text = "";
                                    break;
                            }
                            _ContadorRow++;

                            #region AQUI CALCULAMOS LOS INGRESOS NO GRAVADOS Y TOTAL DEL IMPUESTO
                            //--AQUI CALCULAMOS LOS INGRESOS NO GRAVADOS
                            double _ValorIngAct1 = Double.Parse(this.LblIngresosActividad1.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                            double _ValorIngAct2 = Double.Parse(this.LblIngresosActividad2.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                            double _ValorIngAct3 = Double.Parse(this.LblIngresosActividad3.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));

                            double _TotalIngresosGravados = (_ValorIngAct1 + _ValorIngAct2 + _ValorIngAct3);
                            this.LblTotalIngresosGravados.Text = String.Format(String.Format("{0:###,###,##0}", _TotalIngresosGravados));

                            //--AQUI CALCULAMOS EL TOTAL DEL IMPUESTO
                            double _ValorRenglon17 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                            double _ValorRenglon18 = Double.Parse(this.LblValorRenglon18.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                            double _ValorRenglon19 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                            double _ValorDesagregacion = Double.Parse(this.LblValorDesagregacion.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));

                            _TotalImpuesto = (_ValorRenglon17 + _ValorRenglon18 + _ValorRenglon19 + _ValorDesagregacion);
                            this.LblTotalImpuesto.Text = String.Format(String.Format("{0:###,###,##0}", _TotalImpuesto));
                            #endregion
                            //--
                            #endregion
                        }
                        #endregion
                    }
                }
                else
                {
                    #region MOSTRAR MENSAJE DE USUARIO
                    //Mostramos el mensaje porque se produjo un error con la Trx.
                    this.RadWindowManager1.ReloadOnShow = true;
                    this.RadWindowManager1.DestroyOnClose = true;
                    this.RadWindowManager1.Windows.Clear();
                    this.RadWindowManager1.Enabled = true;
                    this.RadWindowManager1.EnableAjaxSkinRendering = true;
                    this.RadWindowManager1.Visible = true;

                    RadWindow Ventana = new RadWindow();
                    Ventana.Modal = true;
                    string _MsgMensaje = "1. No se encontro información de actividades economicas del municipio... !";
                    Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgMensaje;
                    Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                    Ventana.VisibleOnPageLoad = true;
                    Ventana.Visible = true;
                    Ventana.Height = Unit.Pixel(300);
                    Ventana.Width = Unit.Pixel(600);
                    Ventana.KeepInScreenBounds = true;
                    Ventana.Title = "Mensaje del Sistema";
                    Ventana.VisibleStatusbar = false;
                    Ventana.Behaviors = WindowBehaviors.Close;
                    this.RadWindowManager1.Windows.Add(Ventana);
                    this.RadWindowManager1 = null;
                    Ventana = null;
                    _log.Error(_MsgMensaje);
                    #endregion
                }
                #endregion

                #region AQUI CALCULAMOS LOS VALORES DE LA SESION (D. AUTORETENCIONES)
                _ValorRenglon16 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                _TotalImpuesto = Double.Parse(this.LblTotalImpuesto.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                double _TotalImpuestosLey = Double.Parse(this.LblTotalImpuestosLey.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                double _ValorRenglon20 = (_TotalImpuesto + _TotalImpuestosLey);
                this.LblValorRenglon20.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorRenglon20)));

                ObjConsulta.AnioGravable = this.TxtAnioGravable.Text.ToString().Trim();
                ObjConsulta.IdMunicipio = Int32.Parse(this.ViewState["IdMunicipioOficina"].ToString().Trim());
                ObjConsulta.IdFormularioImpuesto = this.ViewState["IdFormImpuesto"].ToString().Trim();
                ObjConsulta.MotorBaseDatos = this.Session["MotorBaseDatos"].ToString().Trim();

                DataTable dtImpMunicipio = new DataTable();
                dtImpMunicipio = ObjConsulta.GetImpuestosMunicipio();
                double _ValorLiquidacion = 0;

                if (dtImpMunicipio != null)
                {
                    if (dtImpMunicipio.Rows.Count > 0)
                    {
                        //--AQUI RECORREMOS EL DATATABLE PARA MOSTRAR LAS ACTIVIDADES ECONOMICAS.
                        #region AQUI RECORREMOS EL DATATABLE
                        foreach (DataRow rowItem in dtImpMunicipio.Rows)
                        {
                            #region AQUI RECORREMOS EL DATATABLE
                            int _NumRenglon = Int32.Parse(rowItem["numero_renglon"].ToString().Trim());
                            string _DescripcionRenglon = rowItem["descripcion_renglon"].ToString().Trim();
                            int _IdTipoTarifa = Int32.Parse(rowItem["idtipo_tarifa"].ToString().Trim());
                            double _ValorTarifa = Double.Parse(rowItem["valor_tarifa"].ToString().Trim());
                            string _CalcularRenglon = rowItem["calcular_renglon"].ToString().Trim();
                            string _NumeroRenglon1 = rowItem["numero_renglon1"].ToString().Trim();
                            string _IdTipoOperacion1 = rowItem["idtipo_operacion1"].ToString().Trim();
                            string _NumeroRenglon2 = rowItem["numero_renglon2"].ToString().Trim();
                            string _IdTipoOperacion2 = rowItem["idtipo_operacion2"].ToString().Trim();
                            string _NumeroRenglon3 = rowItem["numero_renglon3"].ToString().Trim();
                            string _IdTipoOperacion3 = rowItem["idtipo_operacion3"].ToString().Trim();
                            string _NumeroRenglon4 = rowItem["numero_renglon4"].ToString().Trim();
                            string _IdTipoOperacion4 = rowItem["idtipo_operacion4"].ToString().Trim();
                            string _NumeroRenglon5 = rowItem["numero_renglon5"].ToString().Trim();
                            string _IdTipoOperacion5 = rowItem["idtipo_operacion5"].ToString().Trim();
                            string _NumeroRenglon6 = rowItem["numero_renglon6"].ToString().Trim();
                            //--
                            this.ViewState["BaseSobretasaBomberil"] = _ValorRenglon20;
                            this.ViewState["BaseSobretasaSeguridad"] = _ValorRenglon20;
                            double _OperacionRenglon = 0, _ValorNumRenglon1 = 0, _ValorNumRenglon2 = 0, _ValorNumRenglon3 = 0, _ValorNumRenglon4 = 0, _ValorNumRenglon5 = 0, _ValorNumRenglon6 = 0;

                            #region AQUI DEFINIMOS EL VALOR MEDIANTE EL SWITCH
                            switch (_NumRenglon)
                            {
                                #region LOGICA COMENTARIADA POR ERROR EN E SISTEMA DE MUCHAS LINEAS DE CODIGO
                                case 21:
                                    #region VALIDAMOS SI ES CALCULADO Y LA OPERACION
                                    if (_CalcularRenglon.Equals("S"))
                                    {
                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 1
                                        //--
                                        int _NumeroRenglonCalc = _NumeroRenglon1.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon1.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon1 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon1 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon1 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon1 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 2
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon2.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon2.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon2 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon2 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon2 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon2 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 3
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon3.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon3.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon3 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon3 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon3 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon3 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 4
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon4.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon4.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon4 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon4 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon4 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon4 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon5.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon5.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon5 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon5 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon5 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon5 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon6.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon6.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon6 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon6 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon6 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon6 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI REALIZAMOS EL TIPO DE OPERACION CONFIGURADO
                                        int _TipoOperacion1 = _IdTipoOperacion1.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion1.Trim()) : 0;
                                        int _TipoOperacion2 = _IdTipoOperacion2.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion2.Trim()) : 0;
                                        int _TipoOperacion3 = _IdTipoOperacion3.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion3.Trim()) : 0;
                                        int _TipoOperacion4 = _IdTipoOperacion4.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion4.Trim()) : 0;
                                        int _TipoOperacion5 = _IdTipoOperacion5.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion5.Trim()) : 0;
                                        //--1. SUMA, 2. RESTA, 3. MULTIPLICACION, 4. DIVISION
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 1
                                        switch (_TipoOperacion1)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_ValorNumRenglon1 + _ValorNumRenglon2);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_ValorNumRenglon1 - _ValorNumRenglon2);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_ValorNumRenglon1 * _ValorNumRenglon2);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_ValorNumRenglon1 / _ValorNumRenglon2);
                                                break;
                                            default:
                                                _OperacionRenglon = _ValorNumRenglon1;
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 2
                                        switch (_TipoOperacion2)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon3);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon3);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon3);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon3);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 3
                                        switch (_TipoOperacion3)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon4);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon4);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon4);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon4);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 4
                                        switch (_TipoOperacion4)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon5);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon5);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon5);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon5);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 5
                                        switch (_TipoOperacion5)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon6);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon6);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon6);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon6);
                                                break;
                                        }
                                        #endregion

                                        //--AQUI VALIDAMOS EL TIPO DE TARIFA
                                        if (_IdTipoTarifa == 1)     //--TARIFA PORCENTUAL
                                        {
                                            if (_ValorTarifa > 0)
                                            {
                                                _ValorLiquidacion = ((_OperacionRenglon * _ValorTarifa) / 100);
                                            }
                                            else
                                            {
                                                _ValorLiquidacion = _OperacionRenglon;
                                            }
                                        }
                                        else if (_IdTipoTarifa == 2)    //--TARIFA POR MIL
                                        {
                                            if (_ValorTarifa > 0)
                                            {
                                                _ValorLiquidacion = ((_OperacionRenglon * _ValorTarifa) / 1000);
                                            }
                                            else
                                            {
                                                _ValorLiquidacion = _OperacionRenglon;
                                            }
                                        }
                                        else
                                        {
                                            _ValorLiquidacion = _OperacionRenglon;
                                        }
                                        #endregion

                                        this.LblDescRenglon21.Text = _DescripcionRenglon;
                                        this.LblValorRenglon21.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorLiquidacion)));
                                    }
                                    break;
                                #endregion

                                case 23:
                                    #region VALIDAMOS SI ES CALCULADO Y LA OPERACION
                                    if (_CalcularRenglon.Equals("S"))
                                    {
                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 1
                                        //--
                                        int _NumeroRenglonCalc = _NumeroRenglon1.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon1.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon1 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon1 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon1 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon1 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 2
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon2.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon2.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon2 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon2 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon2 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon2 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 3
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon3.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon3.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon3 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon3 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon3 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon3 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 4
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon4.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon4.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon4 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon4 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon4 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon4 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon5.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon5.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon5 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon5 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon5 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon5 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon6.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon6.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon6 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon6 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon6 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon6 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI REALIZAMOS EL TIPO DE OPERACION CONFIGURADO
                                        int _TipoOperacion1 = _IdTipoOperacion1.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion1.Trim()) : 0;
                                        int _TipoOperacion2 = _IdTipoOperacion2.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion2.Trim()) : 0;
                                        int _TipoOperacion3 = _IdTipoOperacion3.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion3.Trim()) : 0;
                                        int _TipoOperacion4 = _IdTipoOperacion4.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion4.Trim()) : 0;
                                        int _TipoOperacion5 = _IdTipoOperacion5.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion5.Trim()) : 0;
                                        //--1. SUMA, 2. RESTA, 3. MULTIPLICACION, 4. DIVISION
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 1
                                        switch (_TipoOperacion1)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_ValorNumRenglon1 + _ValorNumRenglon2);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_ValorNumRenglon1 - _ValorNumRenglon2);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_ValorNumRenglon1 * _ValorNumRenglon2);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_ValorNumRenglon1 / _ValorNumRenglon2);
                                                break;
                                            default:
                                                _OperacionRenglon = _ValorNumRenglon1;
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 2
                                        switch (_TipoOperacion2)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon3);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon3);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon3);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon3);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 3
                                        switch (_TipoOperacion3)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon4);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon4);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon4);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon4);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 4
                                        switch (_TipoOperacion4)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon5);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon5);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon5);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon5);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 5
                                        switch (_TipoOperacion5)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon6);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon6);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon6);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon6);
                                                break;
                                        }
                                        #endregion

                                        //--AQUI VALIDAMOS EL TIPO DE TARIFA
                                        if (_IdTipoTarifa == 1)     //--TARIFA PORCENTUAL
                                        {
                                            if (_ValorTarifa > 0)
                                            {
                                                _ValorLiquidacion = ((_OperacionRenglon * _ValorTarifa) / 100);
                                            }
                                            else
                                            {
                                                _ValorLiquidacion = _OperacionRenglon;
                                            }
                                        }
                                        else if (_IdTipoTarifa == 2)    //--TARIFA POR MIL
                                        {
                                            if (_ValorTarifa > 0)
                                            {
                                                _ValorLiquidacion = ((_OperacionRenglon * _ValorTarifa) / 1000);
                                            }
                                            else
                                            {
                                                _ValorLiquidacion = _OperacionRenglon;
                                            }
                                        }
                                        else
                                        {
                                            _ValorLiquidacion = _OperacionRenglon;
                                        }
                                        #endregion

                                        this.LblDescRenglon23.Text = _DescripcionRenglon;
                                        this.LblValorRenglon23.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorLiquidacion)));
                                    }
                                    break;
                                #endregion

                                case 24:
                                    #region VALIDAMOS SI ES CALCULADO Y LA OPERACION
                                    if (_CalcularRenglon.Equals("S"))
                                    {
                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 1
                                        //--
                                        int _NumeroRenglonCalc = _NumeroRenglon1.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon1.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon1 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon1 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon1 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon1 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 2
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon2.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon2.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon2 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon2 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon2 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon2 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 3
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon3.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon3.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon3 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon3 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon3 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon3 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 4
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon4.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon4.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon4 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon4 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon4 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon4 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon5.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon5.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon5 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon5 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon5 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon5 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon6.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon6.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon6 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon6 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon6 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon6 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI REALIZAMOS EL TIPO DE OPERACION CONFIGURADO
                                        int _TipoOperacion1 = _IdTipoOperacion1.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion1.Trim()) : 0;
                                        int _TipoOperacion2 = _IdTipoOperacion2.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion2.Trim()) : 0;
                                        int _TipoOperacion3 = _IdTipoOperacion3.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion3.Trim()) : 0;
                                        int _TipoOperacion4 = _IdTipoOperacion4.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion4.Trim()) : 0;
                                        int _TipoOperacion5 = _IdTipoOperacion5.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion5.Trim()) : 0;
                                        //--1. SUMA, 2. RESTA, 3. MULTIPLICACION, 4. DIVISION
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 1
                                        switch (_TipoOperacion1)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_ValorNumRenglon1 + _ValorNumRenglon2);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_ValorNumRenglon1 - _ValorNumRenglon2);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_ValorNumRenglon1 * _ValorNumRenglon2);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_ValorNumRenglon1 / _ValorNumRenglon2);
                                                break;
                                            default:
                                                _OperacionRenglon = _ValorNumRenglon1;
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 2
                                        switch (_TipoOperacion2)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon3);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon3);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon3);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon3);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 3
                                        switch (_TipoOperacion3)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon4);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon4);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon4);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon4);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 4
                                        switch (_TipoOperacion4)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon5);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon5);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon5);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon5);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 5
                                        switch (_TipoOperacion5)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon6);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon6);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon6);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon6);
                                                break;
                                        }
                                        #endregion

                                        //--AQUI VALIDAMOS EL TIPO DE TARIFA
                                        if (_IdTipoTarifa == 1)     //--TARIFA PORCENTUAL
                                        {
                                            if (_ValorTarifa > 0)
                                            {
                                                _ValorLiquidacion = ((_OperacionRenglon * _ValorTarifa) / 100);
                                            }
                                            else
                                            {
                                                _ValorLiquidacion = _OperacionRenglon;
                                            }
                                        }
                                        else if (_IdTipoTarifa == 2)    //--TARIFA POR MIL
                                        {
                                            if (_ValorTarifa > 0)
                                            {
                                                _ValorLiquidacion = ((_OperacionRenglon * _ValorTarifa) / 1000);
                                            }
                                            else
                                            {
                                                _ValorLiquidacion = _OperacionRenglon;
                                            }
                                        }
                                        else
                                        {
                                            _ValorLiquidacion = _OperacionRenglon;
                                        }
                                        #endregion

                                        this.LblDescRenglon24.Text = _DescripcionRenglon;
                                        this.LblValorRenglon24.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorLiquidacion)));
                                    }
                                    break;
                                #endregion

                                default:
                                    break;
                                    #endregion
                            }
                            #endregion
                            //--
                            #endregion
                        }
                        #endregion
                    }
                    else
                    {
                        #region MOSTRAR MENSAJE DE USUARIO
                        //Mostramos el mensaje porque se produjo un error con la Trx.
                        this.RadWindowManager1.ReloadOnShow = true;
                        this.RadWindowManager1.DestroyOnClose = true;
                        this.RadWindowManager1.Windows.Clear();
                        this.RadWindowManager1.Enabled = true;
                        this.RadWindowManager1.EnableAjaxSkinRendering = true;
                        this.RadWindowManager1.Visible = true;

                        RadWindow Ventana = new RadWindow();
                        Ventana.Modal = true;
                        string _MsgMensaje = "2. No se encontro información configurada de impuestos del municipio... !";
                        Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgMensaje;
                        Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                        Ventana.VisibleOnPageLoad = true;
                        Ventana.Visible = true;
                        Ventana.Height = Unit.Pixel(300);
                        Ventana.Width = Unit.Pixel(600);
                        Ventana.KeepInScreenBounds = true;
                        Ventana.Title = "Mensaje del Sistema";
                        Ventana.VisibleStatusbar = false;
                        Ventana.Behaviors = WindowBehaviors.Close;
                        this.RadWindowManager1.Windows.Add(Ventana);
                        this.RadWindowManager1 = null;
                        Ventana = null;
                        #endregion
                    }
                }
                else
                {
                    #region MOSTRAR MENSAJE DE USUARIO
                    //Mostramos el mensaje porque se produjo un error con la Trx.
                    this.RadWindowManager1.ReloadOnShow = true;
                    this.RadWindowManager1.DestroyOnClose = true;
                    this.RadWindowManager1.Windows.Clear();
                    this.RadWindowManager1.Enabled = true;
                    this.RadWindowManager1.EnableAjaxSkinRendering = true;
                    this.RadWindowManager1.Visible = true;

                    RadWindow Ventana = new RadWindow();
                    Ventana.Modal = true;
                    string _MsgMensaje = "1. No se encontro información configurada de impuestos del municipio... !";
                    Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgMensaje;
                    Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                    Ventana.VisibleOnPageLoad = true;
                    Ventana.Visible = true;
                    Ventana.Height = Unit.Pixel(300);
                    Ventana.Width = Unit.Pixel(600);
                    Ventana.KeepInScreenBounds = true;
                    Ventana.Title = "Mensaje del Sistema";
                    Ventana.VisibleStatusbar = false;
                    Ventana.Behaviors = WindowBehaviors.Close;
                    this.RadWindowManager1.Windows.Add(Ventana);
                    this.RadWindowManager1 = null;
                    Ventana = null;
                    #endregion
                }
                #endregion

                #region OBTENEMOS LOS VALORES DE OTRAS CONFIGURACIONES DE RENGLONES
                //--AQUI OBTENEMOS LA FECHA MAS RECIENTE CONFIGURADA EN EL CALENDARIO TRIBUTARIO
                #region OBTENER Y VALIDAR FECHA CALENDARIO TRIBUTARIO
                ObjConsulta.IdFormularioImpuesto = Int32.Parse(this.ViewState["IdFormImpuesto"].ToString().Trim());
                ObjConsulta.IdMunCalendarioTrib = null;
                ObjConsulta.IdMunicipio = this.ViewState["IdMunicipioOficina"].ToString().Trim();
                ObjConsulta.IdPeriodicidad = this.ViewState["IdPeriodicidad"].ToString().Trim();
                //ObjConsulta.PeriodicidadImpuesto = this.ViewState["IdPeriodicidad"].ToString().Trim();
                ObjConsulta.CodigoImpuesto = this.ViewState["PeriodicidadImpuesto"].ToString().Trim();
                ObjConsulta.MotorBaseDatos = this.Session["MotorBaseDatos"].ToString().Trim();
                //--AQUI OBTENEMOS LA FECHA DEL CALENDARIO TRIBUTARIO PARA APLICAR EL DESCUENTO
                ObjConsulta.FechaInicial = DateTime.Now.ToString("yyyy-MM-dd");
                string _DataTarifa = ObjConsulta.GetTarifaCalendario();
                string[] _ArrayTarifa = _DataTarifa.ToString().Trim().Split('|');
                DateTime _FechaActual = DateTime.Now;
                DateTime _FechaLimite = _ArrayTarifa.Length > 1 ? DateTime.Parse(_ArrayTarifa[0].ToString().Trim()) : _FechaActual;
                this.CmbFecha1.SelectedValue = _FechaLimite.ToString("dd");
                this.CmbFecha2.SelectedValue = _FechaLimite.ToString("MM");
                this.CmbFecha3.SelectedValue = _FechaLimite.ToString("yyyy");
                double _ValorTarifaCalendario = _ArrayTarifa.Length > 1 ? Double.Parse(_ArrayTarifa[1].ToString().Trim()) : 0;
                int _DiasObtenido = 0;
                //--AQUI VALIDAMOS LA FECHA OBTENIDA DEL CALENDARIO TRIBUTARIO
                if (_FechaLimite < _FechaActual)
                {
                    #region OBTENER DIAS TRANSCURRIDO DE LA FECHA CALENDARIO
                    TimeSpan ts = _FechaActual - _FechaLimite;
                    // Difference in days.
                    _DiasObtenido = ts.Days;
                    if (_DiasObtenido > 0)
                    {
                        //--AQUI DEFINIMOS EL VALOR DE LA TARIFA DEL CALENDARIO A CERO YA QUE SE PASO EL TIEMPO 
                        _ValorTarifaCalendario = 0;
                        #region MOSTRAR MENSAJE DE USUARIO
                        //Mostramos el mensaje porque se produjo un error con la Trx.
                        this.RadWindowManager1.ReloadOnShow = true;
                        this.RadWindowManager1.DestroyOnClose = true;
                        this.RadWindowManager1.Windows.Clear();
                        this.RadWindowManager1.Enabled = true;
                        this.RadWindowManager1.EnableAjaxSkinRendering = true;
                        this.RadWindowManager1.Visible = true;

                        RadWindow Ventana = new RadWindow();
                        Ventana.Modal = true;
                        string _MsgMensaje = "Señor usuario, tenga en cuenta que la declaración del municipio de [" + this.LblNombreMunicipio.Text.ToString().Trim() + "] ya se encuentra con [ " + _DiasObtenido + " días ] de vencida ...!";
                        Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgMensaje;
                        Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                        Ventana.VisibleOnPageLoad = true;
                        Ventana.Visible = true;
                        Ventana.Height = Unit.Pixel(300);
                        Ventana.Width = Unit.Pixel(600);
                        Ventana.KeepInScreenBounds = true;
                        Ventana.Title = "Mensaje del Sistema";
                        Ventana.VisibleStatusbar = false;
                        Ventana.Behaviors = WindowBehaviors.Close;
                        this.RadWindowManager1.Windows.Add(Ventana);
                        this.RadWindowManager1 = null;
                        Ventana = null;
                        #endregion
                    }
                    #endregion
                }
                #endregion
                //--
                DataTable dtOtrasConf = new DataTable();
                dtOtrasConf = ObjConsulta.GetOtrasConfMunicipio();
                //--
                if (dtOtrasConf != null)
                {
                    if (dtOtrasConf.Rows.Count > 0)
                    {
                        //--AQUI RECORREMOS EL DATATABLE PARA MOSTRAR LAS ACTIVIDADES ECONOMICAS.
                        #region AQUI RECORREMOS EL DATATABLE
                        foreach (DataRow rowItem in dtOtrasConf.Rows)
                        {
                            #region AQUI OBNTENEMOS LOS VALORES DE LA PARAMETRIZACION DE OTRAS CONFIGURACIONES
                            string _NumeroRenglon = rowItem["numero_renglon"].ToString().Trim();
                            string _CalcularRenglon = rowItem["calcular_renglon"].ToString().Trim();
                            string _NumeroRenglon1 = rowItem["numero_renglon1"].ToString().Trim();
                            string _IdTipoOperacion1 = rowItem["idtipo_operacion1"].ToString().Trim();
                            string _NumeroRenglon2 = rowItem["numero_renglon2"].ToString().Trim();
                            string _IdTipoOperacion2 = rowItem["idtipo_operacion2"].ToString().Trim();
                            string _NumeroRenglon3 = rowItem["numero_renglon3"].ToString().Trim();
                            string _IdTipoOperacion3 = rowItem["idtipo_operacion3"].ToString().Trim();
                            string _NumeroRenglon4 = rowItem["numero_renglon4"].ToString().Trim();
                            string _IdTipoOperacion4 = rowItem["idtipo_operacion4"].ToString().Trim();
                            string _NumeroRenglon5 = rowItem["numero_renglon5"].ToString().Trim();
                            string _IdTipoOperacion5 = rowItem["idtipo_operacion5"].ToString().Trim();
                            string _NumeroRenglon6 = rowItem["numero_renglon6"].ToString().Trim();

                            int _IdUnidadMedida = Int32.Parse(rowItem["idunidad_medida"].ToString().Trim());
                            int _IdTipoTarifa = Int32.Parse(rowItem["idtipo_tarifa"].ToString().Trim());
                            double _ValorUnidad = Double.Parse(rowItem["valor_unidad"].ToString().Trim());
                            double _ValorUnidadMedida = Double.Parse(rowItem["valor_unid_medida"].ToString().Trim());
                            double _CantidadMedida = Double.Parse(rowItem["cantidad_medida"].ToString().Trim());
                            double _CantidadPeriodos = Double.Parse(rowItem["cantidad_periodos"].ToString().Trim());
                            //--VALIDAR EL VALOR DE LA UNIDAD
                            double _TotalUnidad = 0;
                            if (_ValorUnidadMedida > 0)
                            {
                                _TotalUnidad = ((_ValorUnidadMedida * _CantidadMedida) * _CantidadPeriodos);
                            }
                            else
                            {
                                _TotalUnidad = ((_ValorUnidad * _CantidadMedida) * _CantidadPeriodos);
                            }
                            #endregion

                            #region AQUI DEFINIMOS EL VALOR MEDIANTE EL SWITCH
                            double _ValorTarifaMinima = 0, _OperacionRenglon = 0, _ValorTotalNumRenglon = 0, _ValorNumRenglon1 = 0, _ValorNumRenglon2 = 0, _ValorNumRenglon3 = 0, _ValorNumRenglon4 = 0, _ValorNumRenglon5 = 0, _ValorNumRenglon6 = 0;
                            //--
                            #region OBTENER EL VALOR A CALCULAR DEL RENGLON 1
                            switch (Int32.Parse(_NumeroRenglon))
                            {
                                ///--LOS RENGLONES 8, 9 Y 10 NO LO TENEMOS EN CUENTA PORQUE SON LOS INGRESOS PAIS Y DE LA OFICINA
                                case 1:
                                    #region VALIDAMOS SI ES CALCULADO Y LA OPERACION
                                    if (_CalcularRenglon.Equals("S"))
                                    {
                                        #region AQUI OBTENEMOS EL VALOR DEL RENGLON CALCULADO
                                        //--
                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 1
                                        //--
                                        int _NumeroRenglonCalc = _NumeroRenglon1.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon1.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon1 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon1 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon1 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon1 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 2
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon2.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon2.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon2 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon2 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon2 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon2 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 3
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon3.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon3.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon3 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon3 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon3 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon3 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 4
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon4.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon4.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon4 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon4 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon4 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon4 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon5.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon5.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon5 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon5 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon5 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon5 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 6
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon6.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon6.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon6 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon6 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon6 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon6 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI REALIZAMOS EL TIPO DE OPERACION CONFIGURADO
                                        int _TipoOperacion1 = _IdTipoOperacion1.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion1.Trim()) : 0;
                                        int _TipoOperacion2 = _IdTipoOperacion2.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion2.Trim()) : 0;
                                        int _TipoOperacion3 = _IdTipoOperacion3.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion3.Trim()) : 0;
                                        int _TipoOperacion4 = _IdTipoOperacion4.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion4.Trim()) : 0;
                                        int _TipoOperacion5 = _IdTipoOperacion5.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion5.Trim()) : 0;
                                        //--1. SUMA, 2. RESTA, 3. MULTIPLICACION, 4. DIVISION
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 1
                                        switch (_TipoOperacion1)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_ValorNumRenglon1 + _ValorNumRenglon2);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_ValorNumRenglon1 - _ValorNumRenglon2);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_ValorNumRenglon1 * _ValorNumRenglon2);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_ValorNumRenglon1 / _ValorNumRenglon2);
                                                break;
                                            default:
                                                _OperacionRenglon = _ValorNumRenglon1;
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 2
                                        switch (_TipoOperacion2)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon3);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon3);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon3);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon3);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 3
                                        switch (_TipoOperacion3)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon4);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon4);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon4);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon4);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 4
                                        switch (_TipoOperacion4)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon5);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon5);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon5);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon5);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 5
                                        switch (_TipoOperacion5)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon6);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon6);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon6);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon6);
                                                break;
                                        }
                                        #endregion

                                        //--AQUI VALIDAMOS EL TIPO DE UNIDAD 5. INDICA QUE NO APLICA
                                        //if (_IdUnidadMedida != 5)
                                        //{
                                        //--AQUI VALIDAMOS EL TIPO DE TARIFA
                                        if (_IdTipoTarifa == 1)         //--PORCENTUAL
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = ((_OperacionRenglon * _CantidadMedida) / 100);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        else if (_IdTipoTarifa == 8)    //--POR UNIDAD
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = (_OperacionRenglon * _CantidadMedida);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        //}
                                        //else
                                        //{
                                        //    _ValorTotalNumRenglon = _OperacionRenglon;
                                        //}
                                        #endregion

                                        this.LblValorRenglon11.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorTotalNumRenglon)));
                                        #endregion
                                    }
                                    else
                                    {
                                        //--AQUI OBTENEMOS EL VALOR DEL RENGLON 16 PARA COMPROBARLO CON EL CONFIGURADO 
                                        //--LA PRESENCION MINIMA DE INGRESO
                                        _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                        if (_ValorNumRenglon1 < _TotalUnidad)
                                        {
                                            #region AQUI CALCULAMOS EL VALOR DE LA ACTIVIDAD 1
                                            this.LblIngresosActividad1.Text = String.Format(String.Format("{0:###,###,##0}", round(_TotalUnidad)));
                                            //--
                                            int _IdCalcularTarifaPor = Int32.Parse(this.ViewState["IdCalcularTarifaPor"].ToString().Trim());
                                            _IdTipoTarifa = Int32.Parse(this.ViewState["IdTipoTarifa"].ToString().Trim());
                                            double _TarifaLey = Double.Parse(this.ViewState["TarifaLey"].ToString().Trim());
                                            double _TarifaMunicipio = Double.Parse(this.ViewState["TarifaMunicipio"].ToString().Trim());
                                            double _ValorActividad = 0;
                                            //--AQUI DEFINIMOS EL TIPO DE TARIFA
                                            if (_IdTipoTarifa == 1)      //--1. PORCENTUAL
                                            {
                                                #region VALIDACION DE LA TARIFA PORCENTUAL
                                                this.LblTipoTarifaAct.Text = "TARIFA (porcentual)";

                                                //--AQUI HACEMOS EL CALCULO DE LA TARIFA
                                                if (_IdCalcularTarifaPor == 1)      //--1. TARIFA DE LEY
                                                {
                                                    this.LblTarifaActividad1.Text = _TarifaLey + "%";
                                                    _ValorActividad = ((_TotalUnidad * _TarifaLey) / 100);
                                                }
                                                else if (_IdCalcularTarifaPor == 2)      //--1. TARIFA DEL MUNICIPIO
                                                {
                                                    this.LblTarifaActividad1.Text = _TarifaMunicipio + "%";
                                                    _ValorActividad = ((_TotalUnidad * _TarifaMunicipio) / 100);
                                                }

                                                this.LblValorRenglon17.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorActividad)));
                                                #endregion
                                            }
                                            else if (_IdTipoTarifa == 2)    //--2. POR MIL
                                            {
                                                #region VALIDACION DE LA TARIFA POR MIL
                                                this.LblTipoTarifaAct.Text = "TARIFA (por mil)";

                                                //--AQUI HACEMOS EL CALCULO DE LA TARIFA
                                                if (_IdCalcularTarifaPor == 1)      //--1. TARIFA DE LEY
                                                {
                                                    this.LblTarifaActividad1.Text = _TarifaLey.ToString();
                                                    _ValorActividad = ((_TotalUnidad * _TarifaLey) / 1000);
                                                }
                                                else if (_IdCalcularTarifaPor == 2)      //--1. TARIFA DEL MUNICIPIO
                                                {
                                                    this.LblTarifaActividad1.Text = _TarifaMunicipio.ToString();
                                                    //_ValorActividad = (_DefValorActividad * _TarifaMunicipio);
                                                    _ValorActividad = ((_TotalUnidad * _TarifaMunicipio) / 1000);
                                                }

                                                this.LblValorRenglon17.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorActividad)));
                                                #endregion
                                            }
                                            else if (_IdTipoTarifa == 8)    //--8. POR UNIDAD
                                            {
                                                #region VALIDACION DE LA TARIFA POR UNIDAD
                                                this.LblTipoTarifaAct.Text = "TARIFA (por unidad)";

                                                //--AQUI HACEMOS EL CALCULO DE LA TARIFA
                                                if (_IdCalcularTarifaPor == 1)      //--1. TARIFA DE LEY
                                                {
                                                    this.LblTarifaActividad1.Text = _TarifaLey.ToString();
                                                    _ValorActividad = (_TotalUnidad * _TarifaLey);
                                                }
                                                else if (_IdCalcularTarifaPor == 2)      //--1. TARIFA DEL MUNICIPIO
                                                {
                                                    this.LblTarifaActividad1.Text = _TarifaMunicipio.ToString();
                                                    _ValorActividad = (_TotalUnidad * _TarifaMunicipio);
                                                }

                                                this.LblValorRenglon17.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorActividad)));
                                                #endregion
                                            }
                                            #endregion

                                            #region AQUI CALCULAMOS LOS INGRESOS NO GRAVADOS Y TOTAL DEL IMPUESTO
                                            //--AQUI CALCULAMOS LOS INGRESOS NO GRAVADOS
                                            double _ValorIngAct1 = Double.Parse(this.LblIngresosActividad1.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                            double _ValorIngAct2 = Double.Parse(this.LblIngresosActividad2.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                            double _ValorIngAct3 = Double.Parse(this.LblIngresosActividad3.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));

                                            double _TotalIngresosGravados = (_ValorIngAct1 + _ValorIngAct2 + _ValorIngAct3);
                                            this.LblTotalIngresosGravados.Text = String.Format(String.Format("{0:###,###,##0}", _TotalIngresosGravados));
                                            this.ViewState["IngresosGravadoIca"] = _TotalIngresosGravados;
                                            #endregion
                                        }
                                    }
                                    #endregion
                                    break;

                                case 11:
                                    #region VALIDAMOS SI ES CALCULADO Y LA OPERACION
                                    if (_CalcularRenglon.Equals("S"))
                                    {
                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 1
                                        //--
                                        int _NumeroRenglonCalc = _NumeroRenglon1.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon1.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon1 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon1 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon1 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon1 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 2
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon2.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon2.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon2 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon2 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon2 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon2 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 3
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon3.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon3.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon3 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon3 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon3 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon3 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 4
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon4.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon4.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon4 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon4 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon4 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon4 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon5.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon5.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon5 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon5 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon5 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon5 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon6.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon6.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon6 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon6 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon6 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon6 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI REALIZAMOS EL TIPO DE OPERACION CONFIGURADO
                                        int _TipoOperacion1 = _IdTipoOperacion1.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion1.Trim()) : 0;
                                        int _TipoOperacion2 = _IdTipoOperacion2.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion2.Trim()) : 0;
                                        int _TipoOperacion3 = _IdTipoOperacion3.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion3.Trim()) : 0;
                                        int _TipoOperacion4 = _IdTipoOperacion4.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion4.Trim()) : 0;
                                        int _TipoOperacion5 = _IdTipoOperacion5.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion5.Trim()) : 0;
                                        //--1. SUMA, 2. RESTA, 3. MULTIPLICACION, 4. DIVISION
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 1
                                        switch (_TipoOperacion1)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_ValorNumRenglon1 + _ValorNumRenglon2);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_ValorNumRenglon1 - _ValorNumRenglon2);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_ValorNumRenglon1 * _ValorNumRenglon2);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_ValorNumRenglon1 / _ValorNumRenglon2);
                                                break;
                                            default:
                                                _OperacionRenglon = _ValorNumRenglon1;
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 2
                                        switch (_TipoOperacion2)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon3);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon3);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon3);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon3);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 3
                                        switch (_TipoOperacion3)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon4);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon4);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon4);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon4);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 4
                                        switch (_TipoOperacion4)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon5);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon5);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon5);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon5);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 5
                                        switch (_TipoOperacion5)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon6);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon6);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon6);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon6);
                                                break;
                                        }
                                        #endregion

                                        //--AQUI VALIDAMOS EL TIPO DE UNIDAD 5. INDICA QUE NO APLICA
                                        //if (_IdUnidadMedida != 5)
                                        //{
                                        //--AQUI VALIDAMOS EL TIPO DE TARIFA
                                        if (_IdTipoTarifa == 1)         //--PORCENTUAL
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = ((_OperacionRenglon * _CantidadMedida) / 100);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        else if (_IdTipoTarifa == 8)    //--POR UNIDAD
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = (_OperacionRenglon * _CantidadMedida);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        //}
                                        //else
                                        //{
                                        //    _ValorTotalNumRenglon = _OperacionRenglon;
                                        //}
                                        #endregion

                                        this.LblValorRenglon11.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorTotalNumRenglon)));
                                    }
                                    #endregion
                                    break;

                                case 12:
                                    #region VALIDAMOS SI ES CALCULADO Y LA OPERACION
                                    if (_CalcularRenglon.Equals("S"))
                                    {
                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 1
                                        //--
                                        int _NumeroRenglonCalc = _NumeroRenglon1.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon1.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon1 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon1 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon1 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon1 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 2
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon2.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon2.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon2 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon2 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon2 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon2 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 3
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon3.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon3.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon3 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon3 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon3 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon3 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 4
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon4.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon4.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon4 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon4 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon4 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon4 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon5.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon5.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon5 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon5 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon5 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon5 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon6.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon6.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon6 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon6 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon6 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon6 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI REALIZAMOS EL TIPO DE OPERACION CONFIGURADO
                                        int _TipoOperacion1 = _IdTipoOperacion1.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion1.Trim()) : 0;
                                        int _TipoOperacion2 = _IdTipoOperacion2.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion2.Trim()) : 0;
                                        int _TipoOperacion3 = _IdTipoOperacion3.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion3.Trim()) : 0;
                                        int _TipoOperacion4 = _IdTipoOperacion4.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion4.Trim()) : 0;
                                        int _TipoOperacion5 = _IdTipoOperacion5.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion5.Trim()) : 0;
                                        //--1. SUMA, 2. RESTA, 3. MULTIPLICACION, 4. DIVISION
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 1
                                        switch (_TipoOperacion1)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_ValorNumRenglon1 + _ValorNumRenglon2);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_ValorNumRenglon1 - _ValorNumRenglon2);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_ValorNumRenglon1 * _ValorNumRenglon2);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_ValorNumRenglon1 / _ValorNumRenglon2);
                                                break;
                                            default:
                                                _OperacionRenglon = _ValorNumRenglon1;
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 2
                                        switch (_TipoOperacion2)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon3);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon3);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon3);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon3);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 3
                                        switch (_TipoOperacion3)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon4);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon4);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon4);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon4);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 4
                                        switch (_TipoOperacion4)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon5);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon5);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon5);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon5);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 5
                                        switch (_TipoOperacion5)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon6);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon6);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon6);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon6);
                                                break;
                                        }
                                        #endregion

                                        //--AQUI VALIDAMOS EL TIPO DE UNIDAD 5. INDICA QUE NO APLICA
                                        //if (_IdUnidadMedida != 5)
                                        //{
                                        //--AQUI VALIDAMOS EL TIPO DE TARIFA
                                        if (_IdTipoTarifa == 1)         //--PORCENTUAL
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = ((_OperacionRenglon * _CantidadMedida) / 100);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        else if (_IdTipoTarifa == 8)    //--POR UNIDAD
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = (_OperacionRenglon * _CantidadMedida);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        //}
                                        //else
                                        //{
                                        //    _ValorTotalNumRenglon = _OperacionRenglon;
                                        //}
                                        #endregion

                                        this.LblValorRenglon12.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorTotalNumRenglon)));
                                    }
                                    break;
                                #endregion

                                case 13:
                                    #region VALIDAMOS SI ES CALCULADO Y LA OPERACION
                                    if (_CalcularRenglon.Equals("S"))
                                    {
                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 1
                                        //--
                                        int _NumeroRenglonCalc = _NumeroRenglon1.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon1.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon1 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon1 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon1 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon1 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 2
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon2.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon2.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon2 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon2 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon2 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon2 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 3
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon3.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon3.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon3 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon3 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon3 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon3 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 4
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon4.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon4.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon4 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon4 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon4 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon4 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon5.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon5.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon5 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon5 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon5 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon5 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon6.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon6.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon6 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon6 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon6 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon6 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI REALIZAMOS EL TIPO DE OPERACION CONFIGURADO
                                        int _TipoOperacion1 = _IdTipoOperacion1.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion1.Trim()) : 0;
                                        int _TipoOperacion2 = _IdTipoOperacion2.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion2.Trim()) : 0;
                                        int _TipoOperacion3 = _IdTipoOperacion3.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion3.Trim()) : 0;
                                        int _TipoOperacion4 = _IdTipoOperacion4.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion4.Trim()) : 0;
                                        int _TipoOperacion5 = _IdTipoOperacion5.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion5.Trim()) : 0;
                                        //--1. SUMA, 2. RESTA, 3. MULTIPLICACION, 4. DIVISION
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 1
                                        switch (_TipoOperacion1)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_ValorNumRenglon1 + _ValorNumRenglon2);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_ValorNumRenglon1 - _ValorNumRenglon2);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_ValorNumRenglon1 * _ValorNumRenglon2);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_ValorNumRenglon1 / _ValorNumRenglon2);
                                                break;
                                            default:
                                                _OperacionRenglon = _ValorNumRenglon1;
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 2
                                        switch (_TipoOperacion2)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon3);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon3);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon3);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon3);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 3
                                        switch (_TipoOperacion3)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon4);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon4);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon4);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon4);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 4
                                        switch (_TipoOperacion4)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon5);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon5);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon5);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon5);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 5
                                        switch (_TipoOperacion5)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon6);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon6);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon6);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon6);
                                                break;
                                        }
                                        #endregion

                                        //--AQUI VALIDAMOS EL TIPO DE UNIDAD 5. INDICA QUE NO APLICA
                                        //if (_IdUnidadMedida != 5)
                                        //{
                                        //--AQUI VALIDAMOS EL TIPO DE TARIFA
                                        if (_IdTipoTarifa == 1)         //--PORCENTUAL
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = ((_OperacionRenglon * _CantidadMedida) / 100);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        else if (_IdTipoTarifa == 8)    //--POR UNIDAD
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = (_OperacionRenglon * _CantidadMedida);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        //}
                                        //else
                                        //{
                                        //    _ValorTotalNumRenglon = _OperacionRenglon;
                                        //}
                                        #endregion

                                        this.LblValorRenglon13.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorTotalNumRenglon)));
                                    }
                                    break;
                                #endregion

                                case 14:
                                    #region VALIDAMOS SI ES CALCULADO Y LA OPERACION
                                    if (_CalcularRenglon.Equals("S"))
                                    {
                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 1
                                        //--
                                        int _NumeroRenglonCalc = _NumeroRenglon1.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon1.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon1 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon1 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon1 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon1 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 2
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon2.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon2.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon2 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon2 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon2 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon2 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 3
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon3.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon3.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon3 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon3 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon3 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon3 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 4
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon4.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon4.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon4 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon4 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon4 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon4 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon5.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon5.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon5 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon5 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon5 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon5 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon6.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon6.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon6 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon6 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon6 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon6 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI REALIZAMOS EL TIPO DE OPERACION CONFIGURADO
                                        int _TipoOperacion1 = _IdTipoOperacion1.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion1.Trim()) : 0;
                                        int _TipoOperacion2 = _IdTipoOperacion2.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion2.Trim()) : 0;
                                        int _TipoOperacion3 = _IdTipoOperacion3.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion3.Trim()) : 0;
                                        int _TipoOperacion4 = _IdTipoOperacion4.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion4.Trim()) : 0;
                                        int _TipoOperacion5 = _IdTipoOperacion5.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion5.Trim()) : 0;
                                        //--1. SUMA, 2. RESTA, 3. MULTIPLICACION, 4. DIVISION
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 1
                                        switch (_TipoOperacion1)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_ValorNumRenglon1 + _ValorNumRenglon2);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_ValorNumRenglon1 - _ValorNumRenglon2);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_ValorNumRenglon1 * _ValorNumRenglon2);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_ValorNumRenglon1 / _ValorNumRenglon2);
                                                break;
                                            default:
                                                _OperacionRenglon = _ValorNumRenglon1;
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 2
                                        switch (_TipoOperacion2)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon3);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon3);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon3);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon3);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 3
                                        switch (_TipoOperacion3)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon4);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon4);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon4);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon4);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 4
                                        switch (_TipoOperacion4)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon5);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon5);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon5);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon5);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 5
                                        switch (_TipoOperacion5)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon6);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon6);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon6);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon6);
                                                break;
                                        }
                                        #endregion

                                        //--AQUI VALIDAMOS EL TIPO DE UNIDAD 5. INDICA QUE NO APLICA
                                        //if (_IdUnidadMedida != 5)
                                        //{
                                        //--AQUI VALIDAMOS EL TIPO DE TARIFA
                                        if (_IdTipoTarifa == 1)         //--PORCENTUAL
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = ((_OperacionRenglon * _CantidadMedida) / 100);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        else if (_IdTipoTarifa == 8)    //--POR UNIDAD
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = (_OperacionRenglon * _CantidadMedida);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        //}
                                        //else
                                        //{
                                        //    _ValorTotalNumRenglon = _OperacionRenglon;
                                        //}
                                        #endregion

                                        this.LblValorRenglon14.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorTotalNumRenglon)));
                                    }
                                    break;
                                #endregion

                                case 15:
                                    #region VALIDAMOS SI ES CALCULADO Y LA OPERACION
                                    if (_CalcularRenglon.Equals("S"))
                                    {
                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 1
                                        //--
                                        int _NumeroRenglonCalc = _NumeroRenglon1.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon1.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon1 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon1 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon1 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon1 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 2
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon2.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon2.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon2 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon2 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon2 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon2 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 3
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon3.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon3.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon3 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon3 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon3 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon3 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 4
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon4.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon4.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon4 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon4 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon4 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon4 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon5.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon5.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon5 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon5 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon5 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon5 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon6.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon6.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon6 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon6 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon6 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon6 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI REALIZAMOS EL TIPO DE OPERACION CONFIGURADO
                                        int _TipoOperacion1 = _IdTipoOperacion1.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion1.Trim()) : 0;
                                        int _TipoOperacion2 = _IdTipoOperacion2.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion2.Trim()) : 0;
                                        int _TipoOperacion3 = _IdTipoOperacion3.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion3.Trim()) : 0;
                                        int _TipoOperacion4 = _IdTipoOperacion4.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion4.Trim()) : 0;
                                        int _TipoOperacion5 = _IdTipoOperacion5.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion5.Trim()) : 0;
                                        //--1. SUMA, 2. RESTA, 3. MULTIPLICACION, 4. DIVISION
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 1
                                        switch (_TipoOperacion1)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_ValorNumRenglon1 + _ValorNumRenglon2);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_ValorNumRenglon1 - _ValorNumRenglon2);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_ValorNumRenglon1 * _ValorNumRenglon2);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_ValorNumRenglon1 / _ValorNumRenglon2);
                                                break;
                                            default:
                                                _OperacionRenglon = _ValorNumRenglon1;
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 2
                                        switch (_TipoOperacion2)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon3);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon3);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon3);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon3);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 3
                                        switch (_TipoOperacion3)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon4);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon4);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon4);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon4);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 4
                                        switch (_TipoOperacion4)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon5);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon5);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon5);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon5);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 5
                                        switch (_TipoOperacion5)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon6);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon6);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon6);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon6);
                                                break;
                                        }
                                        #endregion

                                        //--AQUI VALIDAMOS EL TIPO DE UNIDAD 5. INDICA QUE NO APLICA
                                        //if (_IdUnidadMedida != 5)
                                        //{
                                        //--AQUI VALIDAMOS EL TIPO DE TARIFA
                                        if (_IdTipoTarifa == 1)         //--PORCENTUAL
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = ((_OperacionRenglon * _CantidadMedida) / 100);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        else if (_IdTipoTarifa == 8)    //--POR UNIDAD
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = (_OperacionRenglon * _CantidadMedida);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        //}
                                        //else
                                        //{
                                        //    _ValorTotalNumRenglon = _OperacionRenglon;
                                        //}
                                        #endregion

                                        this.LblValorRenglon15.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorTotalNumRenglon)));
                                    }
                                    break;
                                #endregion

                                case 20:
                                    #region VALIDAMOS SI ES CALCULADO Y LA OPERACION
                                    if (_CalcularRenglon.Equals("S"))
                                    {
                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 1
                                        //--
                                        int _NumeroRenglonCalc = _NumeroRenglon1.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon1.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon1 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon1 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon1 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon1 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 2
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon2.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon2.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon2 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon2 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon2 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon2 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 3
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon3.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon3.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon3 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon3 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon3 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon3 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 4
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon4.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon4.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon4 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon4 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon4 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon4 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon5.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon5.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon5 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon5 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon5 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon5 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon6.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon6.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon6 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon6 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon6 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon6 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI REALIZAMOS EL TIPO DE OPERACION CONFIGURADO
                                        int _TipoOperacion1 = _IdTipoOperacion1.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion1.Trim()) : 0;
                                        int _TipoOperacion2 = _IdTipoOperacion2.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion2.Trim()) : 0;
                                        int _TipoOperacion3 = _IdTipoOperacion3.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion3.Trim()) : 0;
                                        int _TipoOperacion4 = _IdTipoOperacion4.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion4.Trim()) : 0;
                                        int _TipoOperacion5 = _IdTipoOperacion5.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion5.Trim()) : 0;
                                        //--1. SUMA, 2. RESTA, 3. MULTIPLICACION, 4. DIVISION
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 1
                                        switch (_TipoOperacion1)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_ValorNumRenglon1 + _ValorNumRenglon2);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_ValorNumRenglon1 - _ValorNumRenglon2);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_ValorNumRenglon1 * _ValorNumRenglon2);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_ValorNumRenglon1 / _ValorNumRenglon2);
                                                break;
                                            default:
                                                _OperacionRenglon = _ValorNumRenglon1;
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 2
                                        switch (_TipoOperacion2)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon3);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon3);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon3);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon3);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 3
                                        switch (_TipoOperacion3)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon4);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon4);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon4);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon4);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 4
                                        switch (_TipoOperacion4)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon5);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon5);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon5);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon5);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 5
                                        switch (_TipoOperacion5)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon6);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon6);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon6);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon6);
                                                break;
                                        }
                                        #endregion

                                        //--AQUI VALIDAMOS EL TIPO DE UNIDAD 5. INDICA QUE NO APLICA
                                        //if (_IdUnidadMedida != 5)
                                        //{
                                        //--AQUI VALIDAMOS EL TIPO DE TARIFA
                                        if (_IdTipoTarifa == 1)         //--PORCENTUAL
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = ((_OperacionRenglon * _CantidadMedida) / 100);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        else if (_IdTipoTarifa == 8)    //--POR UNIDAD
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = (_OperacionRenglon * _CantidadMedida);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        //}
                                        //else
                                        //{
                                        //    _ValorTotalNumRenglon = _OperacionRenglon;
                                        //}
                                        #endregion

                                        this.LblValorRenglon20.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorTotalNumRenglon)));
                                    }
                                    else
                                    {
                                        #region AQUI VALIDAMOS EL VALOR CONFIGURAMOS EN OTRAS CONFIGURACIONES
                                        //--AQUI OBTENEMOS EL VALOR DEL RENGLON 17
                                        double _ValorRenglon17 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));

                                        if (_ValorRenglon17 < _TotalUnidad)         //--PORCENTUAL
                                        {
                                            this.LblValorRenglon20.Text = String.Format(String.Format("{0:###,###,##0}", round(_TotalUnidad)));
                                        }
                                        #endregion
                                    }
                                    break;
                                #endregion

                                case 21:
                                    #region VALIDAMOS SI ES CALCULADO Y LA OPERACION
                                    if (_CalcularRenglon.Equals("S"))
                                    {
                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 1
                                        //--
                                        int _NumeroRenglonCalc = _NumeroRenglon1.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon1.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon1 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon1 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon1 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon1 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 2
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon2.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon2.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon2 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon2 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon2 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon2 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 3
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon3.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon3.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon3 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon3 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon3 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon3 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 4
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon4.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon4.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon4 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon4 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon4 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon4 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon5.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon5.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon5 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon5 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon5 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon5 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon6.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon6.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon6 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon6 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon6 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon6 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI REALIZAMOS EL TIPO DE OPERACION CONFIGURADO
                                        int _TipoOperacion1 = _IdTipoOperacion1.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion1.Trim()) : 0;
                                        int _TipoOperacion2 = _IdTipoOperacion2.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion2.Trim()) : 0;
                                        int _TipoOperacion3 = _IdTipoOperacion3.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion3.Trim()) : 0;
                                        int _TipoOperacion4 = _IdTipoOperacion4.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion4.Trim()) : 0;
                                        int _TipoOperacion5 = _IdTipoOperacion5.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion5.Trim()) : 0;
                                        //--1. SUMA, 2. RESTA, 3. MULTIPLICACION, 4. DIVISION
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 1
                                        switch (_TipoOperacion1)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_ValorNumRenglon1 + _ValorNumRenglon2);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_ValorNumRenglon1 - _ValorNumRenglon2);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_ValorNumRenglon1 * _ValorNumRenglon2);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_ValorNumRenglon1 / _ValorNumRenglon2);
                                                break;
                                            default:
                                                _OperacionRenglon = _ValorNumRenglon1;
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 2
                                        switch (_TipoOperacion2)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon3);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon3);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon3);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon3);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 3
                                        switch (_TipoOperacion3)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon4);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon4);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon4);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon4);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 4
                                        switch (_TipoOperacion4)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon5);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon5);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon5);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon5);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 5
                                        switch (_TipoOperacion5)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon6);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon6);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon6);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon6);
                                                break;
                                        }
                                        #endregion

                                        //--AQUI VALIDAMOS EL TIPO DE UNIDAD 5. INDICA QUE NO APLICA
                                        //if (_IdUnidadMedida != 5)
                                        //{
                                        //--AQUI VALIDAMOS EL TIPO DE TARIFA
                                        if (_IdTipoTarifa == 1)         //--PORCENTUAL
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = ((_OperacionRenglon * _CantidadMedida) / 100);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        else if (_IdTipoTarifa == 8)    //--POR UNIDAD
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = (_OperacionRenglon * _CantidadMedida);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        //}
                                        //else
                                        //{
                                        //    _ValorTotalNumRenglon = _OperacionRenglon;
                                        //}
                                        #endregion

                                        this.LblValorRenglon21.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorTotalNumRenglon)));
                                    }
                                    break;
                                #endregion

                                case 22:
                                    #region VALIDAMOS SI ES CALCULADO Y LA OPERACION
                                    if (_CalcularRenglon.Equals("S"))
                                    {
                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 1
                                        //--
                                        int _NumeroRenglonCalc = _NumeroRenglon1.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon1.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon1 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon1 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon1 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon1 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 2
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon2.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon2.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon2 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon2 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon2 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon2 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 3
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon3.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon3.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon3 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon3 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon3 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon3 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 4
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon4.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon4.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon4 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon4 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon4 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon4 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon5.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon5.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon5 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon5 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon5 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon5 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon6.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon6.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon6 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon6 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon6 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon6 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI REALIZAMOS EL TIPO DE OPERACION CONFIGURADO
                                        int _TipoOperacion1 = _IdTipoOperacion1.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion1.Trim()) : 0;
                                        int _TipoOperacion2 = _IdTipoOperacion2.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion2.Trim()) : 0;
                                        int _TipoOperacion3 = _IdTipoOperacion3.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion3.Trim()) : 0;
                                        int _TipoOperacion4 = _IdTipoOperacion4.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion4.Trim()) : 0;
                                        int _TipoOperacion5 = _IdTipoOperacion5.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion5.Trim()) : 0;
                                        //--1. SUMA, 2. RESTA, 3. MULTIPLICACION, 4. DIVISION
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 1
                                        switch (_TipoOperacion1)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_ValorNumRenglon1 + _ValorNumRenglon2);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_ValorNumRenglon1 - _ValorNumRenglon2);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_ValorNumRenglon1 * _ValorNumRenglon2);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_ValorNumRenglon1 / _ValorNumRenglon2);
                                                break;
                                            default:
                                                _OperacionRenglon = _ValorNumRenglon1;
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 2
                                        switch (_TipoOperacion2)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon3);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon3);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon3);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon3);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 3
                                        switch (_TipoOperacion3)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon4);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon4);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon4);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon4);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 4
                                        switch (_TipoOperacion4)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon5);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon5);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon5);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon5);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 5
                                        switch (_TipoOperacion5)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon6);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon6);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon6);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon6);
                                                break;
                                        }
                                        #endregion

                                        //--AQUI VALIDAMOS EL TIPO DE UNIDAD 5. INDICA QUE NO APLICA
                                        //if (_IdUnidadMedida != 5)
                                        //{
                                        //--AQUI VALIDAMOS EL TIPO DE TARIFA
                                        if (_IdTipoTarifa == 1)         //--PORCENTUAL
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = ((_OperacionRenglon * _CantidadMedida) / 100);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        else if (_IdTipoTarifa == 8)    //--POR UNIDAD
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = (_OperacionRenglon * _CantidadMedida);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        //}
                                        //else
                                        //{
                                        //    _ValorTotalNumRenglon = _OperacionRenglon;
                                        //}
                                        #endregion

                                        this.LblValorRenglon12.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorTotalNumRenglon)));
                                        break;
                                    }
                                    else
                                    {
                                        int _NumeroPuntos = Int32.Parse(this.LblNumEstablecimientos.Text.ToString().Trim());
                                        //--
                                        if (_NumeroPuntos > 1)
                                        {
                                            int _NumEstablecimiento = _NumeroPuntos > 1 ? (Int32.Parse(this.LblNumEstablecimientos.Text.ToString().Trim()) - 1) : _NumeroPuntos;
                                            double _ValorUnidMedida = _ValorUnidadMedida > 0 ? _ValorUnidadMedida : _ValorUnidad;
                                            int _CantPeriodoImpuesto = Int32.Parse(this.ViewState["PeriodoImpuesto"].ToString().Trim());
                                            _ValorTotalNumRenglon = ((((_ValorUnidMedida * _CantidadMedida) * _CantidadPeriodos) * _NumEstablecimiento) / _CantPeriodoImpuesto);
                                        }
                                        else
                                        {
                                            _ValorTotalNumRenglon = 0;
                                        }
                                        this.LblValorRenglon22.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorTotalNumRenglon)));
                                        break;
                                    }
                                #endregion

                                case 23:
                                    #region VALIDAMOS SI ES CALCULADO Y LA OPERACION
                                    if (_CalcularRenglon.Equals("S"))
                                    {
                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 1
                                        //--
                                        int _NumeroRenglonCalc = _NumeroRenglon1.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon1.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon1 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon1 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon1 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon1 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 2
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon2.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon2.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon2 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon2 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon2 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon2 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 3
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon3.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon3.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon3 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon3 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon3 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon3 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 4
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon4.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon4.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon4 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon4 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon4 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon4 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon5.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon5.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon5 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon5 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon5 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon5 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon6.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon6.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon6 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon6 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon6 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon6 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI REALIZAMOS EL TIPO DE OPERACION CONFIGURADO
                                        int _TipoOperacion1 = _IdTipoOperacion1.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion1.Trim()) : 0;
                                        int _TipoOperacion2 = _IdTipoOperacion2.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion2.Trim()) : 0;
                                        int _TipoOperacion3 = _IdTipoOperacion3.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion3.Trim()) : 0;
                                        int _TipoOperacion4 = _IdTipoOperacion4.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion4.Trim()) : 0;
                                        int _TipoOperacion5 = _IdTipoOperacion5.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion5.Trim()) : 0;
                                        //--1. SUMA, 2. RESTA, 3. MULTIPLICACION, 4. DIVISION
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 1
                                        switch (_TipoOperacion1)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_ValorNumRenglon1 + _ValorNumRenglon2);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_ValorNumRenglon1 - _ValorNumRenglon2);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_ValorNumRenglon1 * _ValorNumRenglon2);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_ValorNumRenglon1 / _ValorNumRenglon2);
                                                break;
                                            default:
                                                _OperacionRenglon = _ValorNumRenglon1;
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 2
                                        switch (_TipoOperacion2)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon3);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon3);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon3);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon3);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 3
                                        switch (_TipoOperacion3)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon4);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon4);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon4);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon4);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 4
                                        switch (_TipoOperacion4)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon5);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon5);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon5);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon5);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 5
                                        switch (_TipoOperacion5)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon6);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon6);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon6);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon6);
                                                break;
                                        }
                                        #endregion

                                        //--AQUI VALIDAMOS EL TIPO DE UNIDAD 5. INDICA QUE NO APLICA
                                        //if (_IdUnidadMedida != 5)
                                        //{
                                        //--AQUI VALIDAMOS EL TIPO DE TARIFA
                                        if (_IdTipoTarifa == 1)         //--PORCENTUAL
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = ((_OperacionRenglon * _CantidadMedida) / 100);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        else if (_IdTipoTarifa == 8)    //--POR UNIDAD
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = (_OperacionRenglon * _CantidadMedida);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        //}
                                        //else
                                        //{
                                        //    _ValorTotalNumRenglon = _OperacionRenglon;
                                        //}
                                        #endregion

                                        this.LblValorRenglon23.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorTotalNumRenglon)));
                                    }
                                    else
                                    {
                                        this.LblValorRenglon23.Text = String.Format(String.Format("{0:###,###,##0}", round(_TotalUnidad)));
                                        break;
                                    }
                                    break;
                                #endregion

                                case 24:
                                    #region VALIDAMOS SI ES CALCULADO Y LA OPERACION
                                    if (_CalcularRenglon.Equals("S"))
                                    {
                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 1
                                        //--
                                        int _NumeroRenglonCalc = _NumeroRenglon1.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon1.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon1 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon1 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon1 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon1 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 2
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon2.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon2.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon2 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon2 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon2 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon2 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 3
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon3.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon3.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon3 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon3 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon3 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon3 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 4
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon4.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon4.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon4 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon4 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon4 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon4 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon5.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon5.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon5 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon5 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon5 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon5 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon6.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon6.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon6 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon6 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon6 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon6 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI REALIZAMOS EL TIPO DE OPERACION CONFIGURADO
                                        int _TipoOperacion1 = _IdTipoOperacion1.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion1.Trim()) : 0;
                                        int _TipoOperacion2 = _IdTipoOperacion2.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion2.Trim()) : 0;
                                        int _TipoOperacion3 = _IdTipoOperacion3.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion3.Trim()) : 0;
                                        int _TipoOperacion4 = _IdTipoOperacion4.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion4.Trim()) : 0;
                                        int _TipoOperacion5 = _IdTipoOperacion5.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion5.Trim()) : 0;
                                        //--1. SUMA, 2. RESTA, 3. MULTIPLICACION, 4. DIVISION
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 1
                                        switch (_TipoOperacion1)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_ValorNumRenglon1 + _ValorNumRenglon2);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_ValorNumRenglon1 - _ValorNumRenglon2);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_ValorNumRenglon1 * _ValorNumRenglon2);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_ValorNumRenglon1 / _ValorNumRenglon2);
                                                break;
                                            default:
                                                _OperacionRenglon = _ValorNumRenglon1;
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 2
                                        switch (_TipoOperacion2)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon3);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon3);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon3);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon3);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 3
                                        switch (_TipoOperacion3)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon4);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon4);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon4);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon4);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 4
                                        switch (_TipoOperacion4)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon5);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon5);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon5);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon5);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 5
                                        switch (_TipoOperacion5)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon6);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon6);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon6);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon6);
                                                break;
                                        }
                                        #endregion

                                        //--AQUI VALIDAMOS EL TIPO DE UNIDAD 5. INDICA QUE NO APLICA
                                        //if (_IdUnidadMedida != 5)
                                        //{
                                        //--AQUI VALIDAMOS EL TIPO DE TARIFA
                                        if (_IdTipoTarifa == 1)         //--PORCENTUAL
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = ((_OperacionRenglon * _CantidadMedida) / 100);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        else if (_IdTipoTarifa == 8)    //--POR UNIDAD
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = (_OperacionRenglon * _CantidadMedida);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        //}
                                        //else
                                        //{
                                        //    _ValorTotalNumRenglon = _OperacionRenglon;
                                        //}
                                        #endregion

                                        this.LblValorRenglon24.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorTotalNumRenglon)));
                                    }
                                    break;
                                #endregion

                                case 25:
                                    #region VALIDAMOS SI ES CALCULADO Y LA OPERACION
                                    if (_CalcularRenglon.Equals("S"))
                                    {
                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 1
                                        //--
                                        int _NumeroRenglonCalc = _NumeroRenglon1.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon1.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon1 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon1 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon1 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon1 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 2
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon2.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon2.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon2 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon2 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon2 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon2 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 3
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon3.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon3.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon3 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon3 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon3 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon3 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 4
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon4.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon4.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon4 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon4 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon4 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon4 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon5.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon5.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon5 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon5 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon5 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon5 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon6.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon6.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon6 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon6 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon6 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon6 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI REALIZAMOS EL TIPO DE OPERACION CONFIGURADO
                                        int _TipoOperacion1 = _IdTipoOperacion1.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion1.Trim()) : 0;
                                        int _TipoOperacion2 = _IdTipoOperacion2.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion2.Trim()) : 0;
                                        int _TipoOperacion3 = _IdTipoOperacion3.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion3.Trim()) : 0;
                                        int _TipoOperacion4 = _IdTipoOperacion4.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion4.Trim()) : 0;
                                        int _TipoOperacion5 = _IdTipoOperacion5.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion5.Trim()) : 0;
                                        //--1. SUMA, 2. RESTA, 3. MULTIPLICACION, 4. DIVISION
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 1
                                        switch (_TipoOperacion1)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_ValorNumRenglon1 + _ValorNumRenglon2);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_ValorNumRenglon1 - _ValorNumRenglon2);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_ValorNumRenglon1 * _ValorNumRenglon2);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_ValorNumRenglon1 / _ValorNumRenglon2);
                                                break;
                                            default:
                                                _OperacionRenglon = _ValorNumRenglon1;
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 2
                                        switch (_TipoOperacion2)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon3);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon3);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon3);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon3);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 3
                                        switch (_TipoOperacion3)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon4);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon4);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon4);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon4);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 4
                                        switch (_TipoOperacion4)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon5);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon5);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon5);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon5);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 5
                                        switch (_TipoOperacion5)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon6);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon6);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon6);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon6);
                                                break;
                                        }
                                        #endregion

                                        //--AQUI VALIDAMOS EL TIPO DE UNIDAD 5. INDICA QUE NO APLICA
                                        //if (_IdUnidadMedida != 5)
                                        //{
                                        //--AQUI VALIDAMOS EL TIPO DE TARIFA
                                        if (_IdTipoTarifa == 1)         //--PORCENTUAL
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = ((_OperacionRenglon * _CantidadMedida) / 100);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        else if (_IdTipoTarifa == 8)    //--POR UNIDAD
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = (_OperacionRenglon * _CantidadMedida);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        //}
                                        //else
                                        //{
                                        //    _ValorTotalNumRenglon = _OperacionRenglon;
                                        //}
                                        #endregion

                                        this.LblValorRenglon25.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorTotalNumRenglon)));
                                    }
                                    break;
                                #endregion

                                case 26:
                                    #region VALIDAMOS SI ES CALCULADO Y LA OPERACION
                                    if (_CalcularRenglon.Equals("S"))
                                    {
                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 1
                                        //--
                                        int _NumeroRenglonCalc = _NumeroRenglon1.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon1.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon1 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon1 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon1 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon1 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 2
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon2.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon2.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon2 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon2 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon2 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon2 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 3
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon3.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon3.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon3 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon3 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon3 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon3 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 4
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon4.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon4.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon4 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon4 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon4 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon4 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon5.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon5.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon5 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon5 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon5 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon5 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon6.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon6.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon6 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon6 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon6 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon6 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI REALIZAMOS EL TIPO DE OPERACION CONFIGURADO
                                        int _TipoOperacion1 = _IdTipoOperacion1.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion1.Trim()) : 0;
                                        int _TipoOperacion2 = _IdTipoOperacion2.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion2.Trim()) : 0;
                                        int _TipoOperacion3 = _IdTipoOperacion3.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion3.Trim()) : 0;
                                        int _TipoOperacion4 = _IdTipoOperacion4.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion4.Trim()) : 0;
                                        int _TipoOperacion5 = _IdTipoOperacion5.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion5.Trim()) : 0;
                                        //--1. SUMA, 2. RESTA, 3. MULTIPLICACION, 4. DIVISION
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 1
                                        switch (_TipoOperacion1)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_ValorNumRenglon1 + _ValorNumRenglon2);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_ValorNumRenglon1 - _ValorNumRenglon2);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_ValorNumRenglon1 * _ValorNumRenglon2);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_ValorNumRenglon1 / _ValorNumRenglon2);
                                                break;
                                            default:
                                                _OperacionRenglon = _ValorNumRenglon1;
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 2
                                        switch (_TipoOperacion2)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon3);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon3);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon3);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon3);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 3
                                        switch (_TipoOperacion3)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon4);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon4);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon4);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon4);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 4
                                        switch (_TipoOperacion4)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon5);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon5);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon5);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon5);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 5
                                        switch (_TipoOperacion5)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon6);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon6);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon6);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon6);
                                                break;
                                        }
                                        #endregion

                                        //--AQUI VALIDAMOS EL TIPO DE UNIDAD 5. INDICA QUE NO APLICA
                                        //if (_IdUnidadMedida != 5)
                                        //{
                                        //--AQUI VALIDAMOS EL TIPO DE TARIFA
                                        if (_IdTipoTarifa == 1)         //--PORCENTUAL
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = ((_OperacionRenglon * _CantidadMedida) / 100);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        else if (_IdTipoTarifa == 8)    //--POR UNIDAD
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = (_OperacionRenglon * _CantidadMedida);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        //}
                                        //else
                                        //{
                                        //    _ValorTotalNumRenglon = _OperacionRenglon;
                                        //}
                                        #endregion

                                        this.LblValorRenglon26.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorTotalNumRenglon)));
                                    }
                                    break;
                                #endregion

                                case 27:
                                    #region VALIDAMOS SI ES CALCULADO Y LA OPERACION
                                    if (_CalcularRenglon.Equals("S"))
                                    {
                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 1
                                        //--
                                        int _NumeroRenglonCalc = _NumeroRenglon1.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon1.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon1 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon1 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon1 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon1 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 2
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon2.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon2.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon2 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon2 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon2 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon2 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 3
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon3.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon3.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon3 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon3 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon3 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon3 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 4
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon4.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon4.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon4 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon4 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon4 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon4 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon5.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon5.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon5 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon5 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon5 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon5 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon6.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon6.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon6 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon6 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon6 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon6 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI REALIZAMOS EL TIPO DE OPERACION CONFIGURADO
                                        int _TipoOperacion1 = _IdTipoOperacion1.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion1.Trim()) : 0;
                                        int _TipoOperacion2 = _IdTipoOperacion2.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion2.Trim()) : 0;
                                        int _TipoOperacion3 = _IdTipoOperacion3.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion3.Trim()) : 0;
                                        int _TipoOperacion4 = _IdTipoOperacion4.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion4.Trim()) : 0;
                                        int _TipoOperacion5 = _IdTipoOperacion5.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion5.Trim()) : 0;
                                        //--1. SUMA, 2. RESTA, 3. MULTIPLICACION, 4. DIVISION
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 1
                                        switch (_TipoOperacion1)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_ValorNumRenglon1 + _ValorNumRenglon2);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_ValorNumRenglon1 - _ValorNumRenglon2);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_ValorNumRenglon1 * _ValorNumRenglon2);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_ValorNumRenglon1 / _ValorNumRenglon2);
                                                break;
                                            default:
                                                _OperacionRenglon = _ValorNumRenglon1;
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 2
                                        switch (_TipoOperacion2)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon3);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon3);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon3);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon3);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 3
                                        switch (_TipoOperacion3)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon4);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon4);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon4);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon4);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 4
                                        switch (_TipoOperacion4)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon5);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon5);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon5);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon5);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 5
                                        switch (_TipoOperacion5)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon6);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon6);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon6);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon6);
                                                break;
                                        }
                                        #endregion

                                        //--AQUI VALIDAMOS EL TIPO DE UNIDAD 5. INDICA QUE NO APLICA
                                        //if (_IdUnidadMedida != 5)
                                        //{
                                        //--AQUI VALIDAMOS EL TIPO DE TARIFA
                                        if (_IdTipoTarifa == 1)         //--PORCENTUAL
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = ((_OperacionRenglon * _CantidadMedida) / 100);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        else if (_IdTipoTarifa == 8)    //--POR UNIDAD
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = (_OperacionRenglon * _CantidadMedida);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        //}
                                        //else
                                        //{
                                        //    _ValorTotalNumRenglon = _OperacionRenglon;
                                        //}
                                        #endregion

                                        this.LblValorRenglon27.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorTotalNumRenglon)));
                                    }
                                    break;
                                #endregion

                                case 28:
                                    #region VALIDAMOS SI ES CALCULADO Y LA OPERACION
                                    if (_CalcularRenglon.Equals("S"))
                                    {
                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 1
                                        //--
                                        int _NumeroRenglonCalc = _NumeroRenglon1.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon1.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon1 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon1 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon1 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon1 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 2
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon2.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon2.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon2 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon2 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon2 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon2 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 3
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon3.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon3.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon3 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon3 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon3 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon3 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 4
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon4.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon4.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon4 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon4 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon4 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon4 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon5.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon5.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon5 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon5 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon5 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon5 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon6.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon6.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon6 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon6 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon6 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon6 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI REALIZAMOS EL TIPO DE OPERACION CONFIGURADO
                                        int _TipoOperacion1 = _IdTipoOperacion1.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion1.Trim()) : 0;
                                        int _TipoOperacion2 = _IdTipoOperacion2.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion2.Trim()) : 0;
                                        int _TipoOperacion3 = _IdTipoOperacion3.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion3.Trim()) : 0;
                                        int _TipoOperacion4 = _IdTipoOperacion4.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion4.Trim()) : 0;
                                        int _TipoOperacion5 = _IdTipoOperacion5.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion5.Trim()) : 0;
                                        //--1. SUMA, 2. RESTA, 3. MULTIPLICACION, 4. DIVISION
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 1
                                        switch (_TipoOperacion1)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_ValorNumRenglon1 + _ValorNumRenglon2);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_ValorNumRenglon1 - _ValorNumRenglon2);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_ValorNumRenglon1 * _ValorNumRenglon2);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_ValorNumRenglon1 / _ValorNumRenglon2);
                                                break;
                                            default:
                                                _OperacionRenglon = _ValorNumRenglon1;
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 2
                                        switch (_TipoOperacion2)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon3);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon3);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon3);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon3);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 3
                                        switch (_TipoOperacion3)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon4);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon4);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon4);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon4);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 4
                                        switch (_TipoOperacion4)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon5);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon5);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon5);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon5);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 5
                                        switch (_TipoOperacion5)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon6);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon6);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon6);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon6);
                                                break;
                                        }
                                        #endregion

                                        //--AQUI VALIDAMOS EL TIPO DE UNIDAD 5. INDICA QUE NO APLICA
                                        //if (_IdUnidadMedida != 5)
                                        //{
                                        //--AQUI VALIDAMOS EL TIPO DE TARIFA
                                        if (_IdTipoTarifa == 1)         //--PORCENTUAL
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = ((_OperacionRenglon * _CantidadMedida) / 100);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        else if (_IdTipoTarifa == 8)    //--POR UNIDAD
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = (_OperacionRenglon * _CantidadMedida);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        //}
                                        //else
                                        //{
                                        //    _ValorTotalNumRenglon = _OperacionRenglon;
                                        //}
                                        #endregion

                                        this.LblValorRenglon28.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorTotalNumRenglon)));
                                    }
                                    break;
                                #endregion

                                case 29:
                                    #region VALIDAMOS SI ES CALCULADO Y LA OPERACION
                                    if (_CalcularRenglon.Equals("S"))
                                    {
                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 1
                                        //--
                                        int _NumeroRenglonCalc = _NumeroRenglon1.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon1.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon1 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon1 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon1 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon1 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 2
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon2.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon2.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon2 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon2 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon2 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon2 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 3
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon3.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon3.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon3 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon3 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon3 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon3 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 4
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon4.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon4.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon4 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon4 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon4 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon4 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon5.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon5.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon5 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon5 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon5 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon5 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon6.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon6.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon6 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon6 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon6 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon6 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI REALIZAMOS EL TIPO DE OPERACION CONFIGURADO
                                        int _TipoOperacion1 = _IdTipoOperacion1.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion1.Trim()) : 0;
                                        int _TipoOperacion2 = _IdTipoOperacion2.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion2.Trim()) : 0;
                                        int _TipoOperacion3 = _IdTipoOperacion3.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion3.Trim()) : 0;
                                        int _TipoOperacion4 = _IdTipoOperacion4.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion4.Trim()) : 0;
                                        int _TipoOperacion5 = _IdTipoOperacion5.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion5.Trim()) : 0;
                                        //--1. SUMA, 2. RESTA, 3. MULTIPLICACION, 4. DIVISION
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 1
                                        switch (_TipoOperacion1)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_ValorNumRenglon1 + _ValorNumRenglon2);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_ValorNumRenglon1 - _ValorNumRenglon2);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_ValorNumRenglon1 * _ValorNumRenglon2);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_ValorNumRenglon1 / _ValorNumRenglon2);
                                                break;
                                            default:
                                                _OperacionRenglon = _ValorNumRenglon1;
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 2
                                        switch (_TipoOperacion2)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon3);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon3);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon3);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon3);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 3
                                        switch (_TipoOperacion3)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon4);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon4);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon4);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon4);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 4
                                        switch (_TipoOperacion4)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon5);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon5);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon5);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon5);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 5
                                        switch (_TipoOperacion5)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon6);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon6);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon6);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon6);
                                                break;
                                        }
                                        #endregion

                                        //--AQUI VALIDAMOS EL TIPO DE UNIDAD 5. INDICA QUE NO APLICA
                                        //if (_IdUnidadMedida != 5)
                                        //{
                                        //--AQUI VALIDAMOS EL TIPO DE TARIFA
                                        if (_IdTipoTarifa == 1)         //--PORCENTUAL
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = ((_OperacionRenglon * _CantidadMedida) / 100);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        else if (_IdTipoTarifa == 8)    //--POR UNIDAD
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = (_OperacionRenglon * _CantidadMedida);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        //}
                                        //else
                                        //{
                                        //    _ValorTotalNumRenglon = _OperacionRenglon;
                                        //}
                                        #endregion

                                        this.LblValorRenglon29.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorTotalNumRenglon)));
                                    }
                                    break;
                                #endregion

                                case 30:
                                    #region VALIDAMOS SI ES CALCULADO Y LA OPERACION
                                    if (_CalcularRenglon.Equals("S"))
                                    {
                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 1
                                        //--
                                        int _NumeroRenglonCalc = _NumeroRenglon1.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon1.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon1 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon1 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon1 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon1 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 2
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon2.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon2.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon2 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon2 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon2 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon2 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 3
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon3.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon3.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon3 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon3 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon3 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon3 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 4
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon4.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon4.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon4 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon4 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon4 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon4 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon5.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon5.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon5 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon5 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon5 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon5 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 6
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon6.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon6.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon6 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon6 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon6 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon6 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI REALIZAMOS EL TIPO DE OPERACION CONFIGURADO
                                        int _TipoOperacion1 = _IdTipoOperacion1.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion1.Trim()) : 0;
                                        int _TipoOperacion2 = _IdTipoOperacion2.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion2.Trim()) : 0;
                                        int _TipoOperacion3 = _IdTipoOperacion3.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion3.Trim()) : 0;
                                        int _TipoOperacion4 = _IdTipoOperacion4.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion4.Trim()) : 0;
                                        int _TipoOperacion5 = _IdTipoOperacion5.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion5.Trim()) : 0;
                                        //--1. SUMA, 2. RESTA, 3. MULTIPLICACION, 4. DIVISION
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 1
                                        switch (_TipoOperacion1)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_ValorNumRenglon1 + _ValorNumRenglon2);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_ValorNumRenglon1 - _ValorNumRenglon2);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_ValorNumRenglon1 * _ValorNumRenglon2);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_ValorNumRenglon1 / _ValorNumRenglon2);
                                                break;
                                            default:
                                                _OperacionRenglon = _ValorNumRenglon1;
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 2
                                        switch (_TipoOperacion2)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon3);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon3);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon3);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon3);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 3
                                        switch (_TipoOperacion3)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon4);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon4);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon4);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon4);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 4
                                        switch (_TipoOperacion4)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon5);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon5);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon5);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon5);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 5
                                        switch (_TipoOperacion5)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon6);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon6);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon6);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon6);
                                                break;
                                        }
                                        #endregion

                                        //--AQUI VALIDAMOS EL TIPO DE UNIDAD 5. INDICA QUE NO APLICA
                                        //if (_IdUnidadMedida != 5)
                                        //{
                                        //--AQUI VALIDAMOS EL TIPO DE TARIFA
                                        if (_IdTipoTarifa == 1)         //--PORCENTUAL
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = ((_OperacionRenglon * _CantidadMedida) / 100);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        else if (_IdTipoTarifa == 8)    //--POR UNIDAD
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = (_OperacionRenglon * _CantidadMedida);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        //}
                                        //else
                                        //{
                                        //    _ValorTotalNumRenglon = _OperacionRenglon;
                                        //}
                                        #endregion

                                        this.LblValorRenglon30.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorTotalNumRenglon)));
                                    }
                                    else
                                    {
                                        int _NumEstablecimiento = Int32.Parse(this.LblNumEstablecimientos.Text.ToString().Trim().Replace(".", ""));
                                        //--
                                        double _SumatoriaRenglon22 = 0;
                                        if (_NumEstablecimiento <= 1)
                                        {
                                            _SumatoriaRenglon22 = (_ValorTarifaMinima * _NumEstablecimiento);
                                        }
                                        else
                                        {
                                            _SumatoriaRenglon22 = (_ValorTarifaMinima * (_NumEstablecimiento - 1));  //--LE RESTAMOS UN ESTABLECIMIENTO
                                        }
                                        this.LblValorRenglon22.Text = String.Format(String.Format("{0:###,###,##0}", _SumatoriaRenglon22));
                                    }
                                    #endregion
                                    break;

                                case 31:
                                    #region VALIDAMOS SI ES CALCULADO Y LA OPERACION
                                    if (_CalcularRenglon.Equals("S"))
                                    {
                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 1
                                        //--
                                        int _NumeroRenglonCalc = _NumeroRenglon1.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon1.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon1 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon1 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon1 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon1 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 2
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon2.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon2.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon2 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon2 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon2 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon2 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 3
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon3.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon3.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon3 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon3 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon3 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon3 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 4
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon4.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon4.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon4 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon4 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon4 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon4 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon5.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon5.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon5 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon5 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon5 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon5 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon6.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon6.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon6 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon6 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon6 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon6 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI REALIZAMOS EL TIPO DE OPERACION CONFIGURADO
                                        int _TipoOperacion1 = _IdTipoOperacion1.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion1.Trim()) : 0;
                                        int _TipoOperacion2 = _IdTipoOperacion2.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion2.Trim()) : 0;
                                        int _TipoOperacion3 = _IdTipoOperacion3.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion3.Trim()) : 0;
                                        int _TipoOperacion4 = _IdTipoOperacion4.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion4.Trim()) : 0;
                                        int _TipoOperacion5 = _IdTipoOperacion5.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion5.Trim()) : 0;
                                        //--1. SUMA, 2. RESTA, 3. MULTIPLICACION, 4. DIVISION
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 1
                                        switch (_TipoOperacion1)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_ValorNumRenglon1 + _ValorNumRenglon2);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_ValorNumRenglon1 - _ValorNumRenglon2);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_ValorNumRenglon1 * _ValorNumRenglon2);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_ValorNumRenglon1 / _ValorNumRenglon2);
                                                break;
                                            default:
                                                _OperacionRenglon = _ValorNumRenglon1;
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 2
                                        switch (_TipoOperacion2)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon3);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon3);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon3);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon3);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 3
                                        switch (_TipoOperacion3)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon4);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon4);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon4);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon4);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 4
                                        switch (_TipoOperacion4)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon5);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon5);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon5);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon5);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 5
                                        switch (_TipoOperacion5)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon6);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon6);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon6);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon6);
                                                break;
                                        }
                                        #endregion

                                        //--AQUI VALIDAMOS EL TIPO DE UNIDAD 5. INDICA QUE NO APLICA
                                        //if (_IdUnidadMedida != 5)
                                        //{
                                        //--AQUI VALIDAMOS EL TIPO DE TARIFA
                                        if (_IdTipoTarifa == 1)         //--PORCENTUAL
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = ((_OperacionRenglon * _CantidadMedida) / 100);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        else if (_IdTipoTarifa == 8)    //--POR UNIDAD
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = (_OperacionRenglon * _CantidadMedida);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        //}
                                        //else
                                        //{
                                        //    _ValorTotalNumRenglon = _OperacionRenglon;
                                        //}
                                        #endregion

                                        this.TxtValorRenglon39.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorTotalNumRenglon)));
                                    }
                                    break;
                                #endregion

                                case 32:
                                    #region VALIDAMOS SI ES CALCULADO Y LA OPERACION
                                    if (_CalcularRenglon.Equals("S"))
                                    {
                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 1
                                        //--
                                        int _NumeroRenglonCalc = _NumeroRenglon1.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon1.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon1 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon1 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon1 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon1 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 2
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon2.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon2.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon2 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon2 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon2 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon2 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 3
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon3.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon3.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon3 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon3 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon3 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon3 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 4
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon4.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon4.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon4 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon4 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon4 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon4 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon5.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon5.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon5 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon5 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon5 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon5 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon6.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon6.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon6 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon6 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon6 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon6 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI REALIZAMOS EL TIPO DE OPERACION CONFIGURADO
                                        int _TipoOperacion1 = _IdTipoOperacion1.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion1.Trim()) : 0;
                                        int _TipoOperacion2 = _IdTipoOperacion2.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion2.Trim()) : 0;
                                        int _TipoOperacion3 = _IdTipoOperacion3.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion3.Trim()) : 0;
                                        int _TipoOperacion4 = _IdTipoOperacion4.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion4.Trim()) : 0;
                                        int _TipoOperacion5 = _IdTipoOperacion5.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion5.Trim()) : 0;
                                        //--1. SUMA, 2. RESTA, 3. MULTIPLICACION, 4. DIVISION
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 1
                                        switch (_TipoOperacion1)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_ValorNumRenglon1 + _ValorNumRenglon2);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_ValorNumRenglon1 - _ValorNumRenglon2);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_ValorNumRenglon1 * _ValorNumRenglon2);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_ValorNumRenglon1 / _ValorNumRenglon2);
                                                break;
                                            default:
                                                _OperacionRenglon = _ValorNumRenglon1;
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 2
                                        switch (_TipoOperacion2)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon3);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon3);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon3);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon3);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 3
                                        switch (_TipoOperacion3)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon4);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon4);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon4);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon4);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 4
                                        switch (_TipoOperacion4)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon5);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon5);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon5);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon5);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 5
                                        switch (_TipoOperacion5)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon6);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon6);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon6);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon6);
                                                break;
                                        }
                                        #endregion

                                        //--AQUI VALIDAMOS EL TIPO DE UNIDAD 5. INDICA QUE NO APLICA
                                        //if (_IdUnidadMedida != 5)
                                        //{
                                        //--AQUI VALIDAMOS EL TIPO DE TARIFA
                                        if (_IdTipoTarifa == 1)         //--PORCENTUAL
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = ((_OperacionRenglon * _CantidadMedida) / 100);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        else if (_IdTipoTarifa == 8)    //--POR UNIDAD
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = (_OperacionRenglon * _CantidadMedida);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        //}
                                        //else
                                        //{
                                        //    _ValorTotalNumRenglon = _OperacionRenglon;
                                        //}
                                        #endregion

                                        this.LblValorRenglon32.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorTotalNumRenglon)));
                                    }
                                    break;
                                #endregion

                                case 36:
                                    #region VALIDAMOS SI ES CALCULADO Y LA OPERACION
                                    ////--AQUI OBTENEMOS LA FECHA DEL CALENDARIO TRIBUTARIO PARA APLICAR EL DESCUENTO
                                    //ObjConsulta.FechaInicial = DateTime.Now.ToString("yyyy-MM-dd");
                                    //string _DataTarifa = ObjConsulta.GetTarifaCalendario();
                                    //string[] _ArrayTarifa = _DataTarifa.ToString().Trim().Split('|');
                                    //DateTime _FechaLimite = _ArrayTarifa.Length > 1 ? DateTime.Parse(_ArrayTarifa[0].ToString().Trim()) : DateTime.Now;
                                    //this.CmbFecha1.SelectedValue = _FechaLimite.ToString("dd");
                                    //this.CmbFecha2.SelectedValue = _FechaLimite.ToString("MM");
                                    //this.CmbFecha3.SelectedValue = _FechaLimite.ToString("yyyy");
                                    //double _ValorTarifa = _ArrayTarifa.Length > 1 ? Double.Parse(_ArrayTarifa[1].ToString().Trim()) : 0;

                                    if (_CalcularRenglon.Equals("S"))
                                    {
                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 1
                                        //--
                                        int _NumeroRenglonCalc = _NumeroRenglon1.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon1.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon1 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon1 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon1 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon1 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 2
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon2.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon2.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon2 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon2 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon2 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon2 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 3
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon3.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon3.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon3 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon3 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon3 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon3 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 4
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon4.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon4.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon4 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon4 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon4 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon4 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon5.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon5.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon5 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon5 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon5 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon5 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon6.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon6.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon6 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon6 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon6 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon6 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI REALIZAMOS EL TIPO DE OPERACION CONFIGURADO
                                        int _TipoOperacion1 = _IdTipoOperacion1.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion1.Trim()) : 0;
                                        int _TipoOperacion2 = _IdTipoOperacion2.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion2.Trim()) : 0;
                                        int _TipoOperacion3 = _IdTipoOperacion3.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion3.Trim()) : 0;
                                        int _TipoOperacion4 = _IdTipoOperacion4.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion4.Trim()) : 0;
                                        int _TipoOperacion5 = _IdTipoOperacion5.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion5.Trim()) : 0;
                                        //--1. SUMA, 2. RESTA, 3. MULTIPLICACION, 4. DIVISION
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 1
                                        switch (_TipoOperacion1)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_ValorNumRenglon1 + _ValorNumRenglon2);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_ValorNumRenglon1 - _ValorNumRenglon2);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_ValorNumRenglon1 * _ValorNumRenglon2);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_ValorNumRenglon1 / _ValorNumRenglon2);
                                                break;
                                            default:
                                                _OperacionRenglon = _ValorNumRenglon1;
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 2
                                        switch (_TipoOperacion2)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon3);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon3);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon3);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon3);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 3
                                        switch (_TipoOperacion3)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon4);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon4);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon4);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon4);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 4
                                        switch (_TipoOperacion4)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon5);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon5);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon5);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon5);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 5
                                        switch (_TipoOperacion5)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon6);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon6);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon6);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon6);
                                                break;
                                        }
                                        #endregion

                                        //--AQUI VALIDAMOS EL TIPO DE UNIDAD 5. INDICA QUE NO APLICA
                                        //if (_IdUnidadMedida != 5)
                                        //{
                                        //--AQUI VALIDAMOS EL TIPO DE TARIFA
                                        //if (_IdTipoTarifa == 1)         //--PORCENTUAL
                                        //{
                                        //    if (_CantidadMedida > 0)
                                        //    {
                                        //        _OperacionRenglon36 = ((_OperacionRenglon * _CantidadMedida) / 100);
                                        //    }
                                        //    else
                                        //    {
                                        //        _OperacionRenglon36 = _OperacionRenglon;
                                        //    }
                                        //}
                                        //else if (_IdTipoTarifa == 8)    //--POR UNIDAD
                                        //{
                                        //    if (_CantidadMedida > 0)
                                        //    {
                                        //        _OperacionRenglon36 = (_OperacionRenglon * _CantidadMedida);
                                        //    }
                                        //    else
                                        //    {
                                        //        _OperacionRenglon36 = _OperacionRenglon;
                                        //    }
                                        //}
                                        //}
                                        //else
                                        //{
                                        //    _OperacionRenglon36 = _OperacionRenglon;
                                        //}
                                        #endregion

                                        double _TotalDescuento = ((_OperacionRenglon * _ValorTarifaCalendario) / 100);
                                        this.LblValorRenglon36.Text = String.Format(String.Format("{0:###,###,##0}", round(_TotalDescuento)));
                                    }
                                    break;
                                #endregion

                                case 40:
                                    #region VALIDAMOS SI ES CALCULADO Y LA OPERACION
                                    if (_CalcularRenglon.Equals("S"))
                                    {
                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 1
                                        //--
                                        int _NumeroRenglonCalc = _NumeroRenglon1.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon1.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon1 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon1 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon1 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon1 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon1 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 2
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon2.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon2.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon2 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon2 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon2 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon2 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon2 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 3
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon3.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon3.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon3 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon3 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon3 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon3 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon3 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 4
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon4.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon4.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon4 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon4 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon4 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon4 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon4 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon5.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon5.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon5 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon5 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon5 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon5 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon5 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI VALIDAMOS EL VALOR QUE VA A TENER EL VALOR 5
                                        //--
                                        _NumeroRenglonCalc = _NumeroRenglon6.Trim().Length > 0 ? Int32.Parse(_NumeroRenglon6.Trim()) : 0;
                                        switch (_NumeroRenglonCalc)
                                        {
                                            case 8:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 9:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 10:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 11:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 12:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 13:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 14:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 15:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 16:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 17:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 19:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 20:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 21:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 22:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 23:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 24:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 25:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 26:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 27:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 28:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 29:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 30:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 31:
                                                _ValorNumRenglon6 = this.LblValorRenglon31.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 32:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 33:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 34:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 35:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 36:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 37:
                                                _ValorNumRenglon6 = this.LblValorRenglon37.Text.ToString().Trim().Length > 0 ? Double.Parse(this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            case 38:
                                                _ValorNumRenglon6 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                                                break;
                                            case 39:
                                                _ValorNumRenglon6 = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", "")) : 0;
                                                break;
                                            default:
                                                _ValorNumRenglon6 = 0;
                                                break;
                                        }
                                        #endregion

                                        #region AQUI REALIZAMOS EL TIPO DE OPERACION CONFIGURADO
                                        int _TipoOperacion1 = _IdTipoOperacion1.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion1.Trim()) : 0;
                                        int _TipoOperacion2 = _IdTipoOperacion2.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion2.Trim()) : 0;
                                        int _TipoOperacion3 = _IdTipoOperacion3.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion3.Trim()) : 0;
                                        int _TipoOperacion4 = _IdTipoOperacion4.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion4.Trim()) : 0;
                                        int _TipoOperacion5 = _IdTipoOperacion5.Trim().Length > 0 ? Int32.Parse(_IdTipoOperacion5.Trim()) : 0;
                                        //--1. SUMA, 2. RESTA, 3. MULTIPLICACION, 4. DIVISION
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 1
                                        switch (_TipoOperacion1)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_ValorNumRenglon1 + _ValorNumRenglon2);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_ValorNumRenglon1 - _ValorNumRenglon2);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_ValorNumRenglon1 * _ValorNumRenglon2);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_ValorNumRenglon1 / _ValorNumRenglon2);
                                                break;
                                            default:
                                                _OperacionRenglon = _ValorNumRenglon1;
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 2
                                        switch (_TipoOperacion2)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon3);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon3);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon3);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon3);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 3
                                        switch (_TipoOperacion3)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon4);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon4);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon4);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon4);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 4
                                        switch (_TipoOperacion4)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon5);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon5);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon5);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon5);
                                                break;
                                        }
                                        #endregion
                                        //--
                                        #region AQUI VALIDAMOS EL TIPO DE OPERACION 5
                                        switch (_TipoOperacion5)
                                        {
                                            case 1:
                                                _OperacionRenglon = (_OperacionRenglon + _ValorNumRenglon6);
                                                break;
                                            case 2:
                                                _OperacionRenglon = (_OperacionRenglon - _ValorNumRenglon6);
                                                break;
                                            case 3:
                                                _OperacionRenglon = (_OperacionRenglon * _ValorNumRenglon6);
                                                break;
                                            case 4:
                                                _OperacionRenglon = (_OperacionRenglon / _ValorNumRenglon6);
                                                break;
                                        }
                                        #endregion

                                        //--AQUI VALIDAMOS EL TIPO DE UNIDAD 5. INDICA QUE NO APLICA
                                        //if (_IdUnidadMedida != 5)
                                        //{
                                        //--AQUI VALIDAMOS EL TIPO DE TARIFA
                                        if (_IdTipoTarifa == 1)         //--PORCENTUAL
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = ((_OperacionRenglon * _CantidadMedida) / 100);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        else if (_IdTipoTarifa == 8)    //--POR UNIDAD
                                        {
                                            if (_CantidadMedida > 0)
                                            {
                                                _ValorTotalNumRenglon = (_OperacionRenglon * _CantidadMedida);
                                            }
                                            else
                                            {
                                                _ValorTotalNumRenglon = _OperacionRenglon;
                                            }
                                        }
                                        //}
                                        //else
                                        //{
                                        //    _ValorTotalNumRenglon = _OperacionRenglon;
                                        //}
                                        #endregion

                                        this.LblValorRenglon40.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorTotalNumRenglon)));
                                    }
                                    break;
                                #endregion

                                default:
                                    break;
                            }
                            #endregion
                            //--
                            #endregion
                        }
                        //--
                        #endregion
                    }
                }
                else
                {
                    #region MOSTRAR MENSAJE DE USUARIO
                    //Mostramos el mensaje porque se produjo un error con la Trx.
                    this.RadWindowManager1.ReloadOnShow = true;
                    this.RadWindowManager1.DestroyOnClose = true;
                    this.RadWindowManager1.Windows.Clear();
                    this.RadWindowManager1.Enabled = true;
                    this.RadWindowManager1.EnableAjaxSkinRendering = true;
                    this.RadWindowManager1.Visible = true;

                    RadWindow Ventana = new RadWindow();
                    Ventana.Modal = true;
                    string _MsgMensaje = "1. No se encontro información de tarifas mínimas del municipio... !";
                    Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgMensaje;
                    Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                    Ventana.VisibleOnPageLoad = true;
                    Ventana.Visible = true;
                    Ventana.Height = Unit.Pixel(300);
                    Ventana.Width = Unit.Pixel(600);
                    Ventana.KeepInScreenBounds = true;
                    Ventana.Title = "Mensaje del Sistema";
                    Ventana.VisibleStatusbar = false;
                    Ventana.Behaviors = WindowBehaviors.Close;
                    this.RadWindowManager1.Windows.Add(Ventana);
                    this.RadWindowManager1 = null;
                    Ventana = null;
                    #endregion
                }
                #endregion

                #region AQUI OBTENEMOS LOS DATOS DE LOS RENGLONES (31, 32, 33, 34, 35, 36, 37)
                //--AQUI VALIDAMOS SI PERMITE HACER LIQUIDACION MIXTA
                if (this.ViewState["LiquidacionMixta"].ToString().Trim().Equals("S"))
                {
                    ObjBaseGrav.AnioGravable = this.TxtAnioGravable.Text.ToString().Trim();
                    ObjBaseGrav.IdPeriodicidad = this.ViewState["PeriodicidadImpuesto"].ToString().Trim();
                    ObjBaseGrav.CodigoDane = this.TxtCodDane.Text.ToString().Trim();
                    ObjBaseGrav.MotorBaseDatos = this.Session["MotorBaseDatos"].ToString().Trim();

                    DataTable dtBaseReteIca = new DataTable();
                    dtBaseReteIca = ObjBaseGrav.GetBaseReteIca();
                    if (dtBaseReteIca != null)
                    {
                        if (dtBaseReteIca.Rows.Count > 0)
                        {
                            //--DEFINIMOS LAS VARIABLES DE SUMATORIA
                            double _SumatoriaRenglon31 = 0, _SumatoriaRenglon32 = 0, _SumatoriaRenglon33 = 0;
                            double _SumatoriaRenglon34 = 0, _SumatoriaRenglon35 = 0, _SumatoriaRenglon36 = 0, _SumatoriaRenglon37 = 0;
                            string[] _ArrayRenglones = FixedData.IDRENGLONES_CONFIGURACION.ToString().Trim().Split(',');
                            //--
                            foreach (string ItemRenglon in _ArrayRenglones)
                            {
                                #region AQUI REALIZAMOS EL PROCESO DE OBTENER VALORES DEL RENGLON
                                int _IdFormConfiguracion = Int32.Parse(ItemRenglon.ToString().Trim());
                                ObjBaseGrav.TipoConsulta = 1;
                                ObjBaseGrav.IdFormConfiguracion = _IdFormConfiguracion;
                                ObjBaseGrav.IdEstado = 1;
                                ObjBaseGrav.MotorBaseDatos = this.Session["MotorBaseDatos"].ToString().Trim();
                                //--
                                DataTable dtCuentasRenglon = new DataTable();
                                dtCuentasRenglon = ObjBaseGrav.GetCuentasRenglon();
                                if (dtCuentasRenglon != null)
                                {
                                    if (dtCuentasRenglon.Rows.Count > 0)
                                    {
                                        foreach (DataRow rowItem in dtCuentasRenglon.Rows)
                                        {
                                            #region AQUI OBTENEMOS LAS CUENTAS CONFIGURADAS AL RENGLON
                                            string _CodigoCuenta = rowItem["codigo_cuenta"].ToString().Trim();
                                            string _SaldoInicial = rowItem["saldo_inicial"].ToString().Trim();
                                            string _MovDebito = rowItem["mov_debito"].ToString().Trim();
                                            string _MovCredito = rowItem["mov_credito"].ToString().Trim();
                                            string _SaldoFinal = rowItem["saldo_final"].ToString().Trim();
                                            //--FILTRAMOS EL LA CUENTA 
                                            DataRow[] dataRowCuenta = dtBaseReteIca.Select("codigo_cuenta = '" + _CodigoCuenta.Trim() + "'");
                                            if (dataRowCuenta.Length > 0)
                                            {
                                                double _ValorDebito = Double.Parse(dataRowCuenta[0]["valor_debito"].ToString().Trim().Replace("-", ""));
                                                double _ValorCredito = Double.Parse(dataRowCuenta[0]["valor_credito"].ToString().Trim().Replace("-", ""));
                                                //--
                                                switch (_IdFormConfiguracion)
                                                {
                                                    #region AQUI OBTENEMOS LOS VALORES DEL RETE ICA
                                                    case 52:
                                                        if (_MovDebito.Equals("S"))
                                                        {
                                                            _SumatoriaRenglon31 = _SumatoriaRenglon31 + _ValorDebito;
                                                        }
                                                        else if (_MovCredito.Equals("S"))
                                                        {
                                                            _SumatoriaRenglon31 = _SumatoriaRenglon31 + _ValorCredito;
                                                        }
                                                        break;
                                                    case 53:
                                                        if (_MovDebito.Equals("S"))
                                                        {
                                                            _SumatoriaRenglon32 = _SumatoriaRenglon32 + _ValorDebito;
                                                        }
                                                        else if (_MovCredito.Equals("S"))
                                                        {
                                                            _SumatoriaRenglon32 = _SumatoriaRenglon32 + _ValorCredito;
                                                        }
                                                        break;
                                                    case 54:
                                                        if (_MovDebito.Equals("S"))
                                                        {
                                                            _SumatoriaRenglon33 = _SumatoriaRenglon33 + _ValorDebito;
                                                        }
                                                        else if (_MovCredito.Equals("S"))
                                                        {
                                                            _SumatoriaRenglon33 = _SumatoriaRenglon33 + _ValorCredito;
                                                        }
                                                        break;
                                                    case 55:
                                                        if (_MovDebito.Equals("S"))
                                                        {
                                                            _SumatoriaRenglon34 = _SumatoriaRenglon34 + _ValorDebito;
                                                        }
                                                        else if (_MovCredito.Equals("S"))
                                                        {
                                                            _SumatoriaRenglon34 = _SumatoriaRenglon34 + _ValorCredito;
                                                        }
                                                        break;
                                                    case 56:
                                                        if (_MovDebito.Equals("S"))
                                                        {
                                                            _SumatoriaRenglon35 = _SumatoriaRenglon35 + _ValorDebito;
                                                        }
                                                        else if (_MovCredito.Equals("S"))
                                                        {
                                                            _SumatoriaRenglon35 = _SumatoriaRenglon35 + _ValorCredito;
                                                        }
                                                        break;
                                                    case 57:
                                                        if (_MovDebito.Equals("S"))
                                                        {
                                                            _SumatoriaRenglon36 = _SumatoriaRenglon36 + _ValorDebito;
                                                        }
                                                        else if (_MovCredito.Equals("S"))
                                                        {
                                                            _SumatoriaRenglon36 = _SumatoriaRenglon36 + _ValorCredito;
                                                        }
                                                        break;
                                                    case 58:
                                                        if (_MovDebito.Equals("S"))
                                                        {
                                                            _SumatoriaRenglon37 = _SumatoriaRenglon37 + _ValorDebito;
                                                        }
                                                        else if (_MovCredito.Equals("S"))
                                                        {
                                                            _SumatoriaRenglon37 = _SumatoriaRenglon37 + _ValorCredito;
                                                        }
                                                        break;
                                                    default:
                                                        break;
                                                        #endregion
                                                }
                                            }
                                            #endregion
                                        }
                                    }
                                }
                                #endregion
                            }

                            //--MOSTRAMOS LOS VALORES DE LOS RENGLONES 31, 32, 33, 34, 35, 36
                            this.LblValorRenglon31.Text = String.Format(String.Format("{0:###,###,##0}", round(_SumatoriaRenglon31)));
                            this.LblValorRenglon32.Text = String.Format(String.Format("{0:###,###,##0}", round(_SumatoriaRenglon32)));
                            this.LblValorRenglon33.Text = String.Format(String.Format("{0:###,###,##0}", round(_SumatoriaRenglon33)));
                            this.LblValorRenglon34.Text = String.Format(String.Format("{0:###,###,##0}", round(_SumatoriaRenglon34)));
                            this.LblValorRenglon35.Text = String.Format(String.Format("{0:###,###,##0}", round(_SumatoriaRenglon35)));
                            this.LblValorRenglon36.Text = String.Format(String.Format("{0:###,###,##0}", round(_SumatoriaRenglon36)));
                            this.LblValorRenglon37.Text = String.Format(String.Format("{0:###,###,##0}", round(_SumatoriaRenglon37)));
                            //--SUMATORIA RENGLON 38
                            double _TotalRenglon38 = ((_SumatoriaRenglon31 + _SumatoriaRenglon32 + _SumatoriaRenglon33 +
                                _SumatoriaRenglon34 + _SumatoriaRenglon35 + _SumatoriaRenglon36) - _SumatoriaRenglon37);
                            this.LblValorRenglon38.Text = String.Format(String.Format("{0:###,###,##0}", round(_TotalRenglon38)));
                        }
                    }
                }
                #endregion

                ///---------------
                #region AQUI CALCULAMOS EL VALOR DEL RENGLON 25 (TOTAL DE IMPUESTO A CARGO) Y EL VALOR DEL RENGLON DEL 30 AL 38
                _ValorRenglon20 = Double.Parse(this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                double _ValorRenglon21 = Double.Parse(this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                double _ValorRenglon22 = Double.Parse(this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                double _ValorRenglon23 = Double.Parse(this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                double _ValorRenglon24 = Double.Parse(this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                double _ValorRenglon25 = (_ValorRenglon20 + _ValorRenglon21 + _ValorRenglon22 + _ValorRenglon23 + _ValorRenglon24);
                this.LblValorRenglon25.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorRenglon25)));

                double _RestaRenglones = (_ValorRenglon26 - _ValorRenglon27 - _ValorRenglon28 - _ValorRenglon29);
                _ValorRenglon30 = (_ValorRenglon25 - Double.Parse(_RestaRenglones.ToString().Replace("-", "")));
                this.LblValorRenglon30.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorRenglon30)));
                //double _ValorRenglon38 = (_ValorRenglon31 + _ValorRenglon32 + _ValorRenglon33 + _ValorRenglon34 + _ValorRenglon35 + _ValorRenglon36 + _ValorRenglon37);
                //this.LblValorRenglon38.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorRenglon38)));
                #endregion

                #region CALCULAR RENGLONES DEL 39 AL 44
                double _ValorRenglon39 = Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                this.LblValorRenglon40.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorRenglon30)));
                double _ValorRenglon38 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                this.LblValorRenglon41.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorRenglon38)));
                double _ValorRenglon40 = Double.Parse(this.LblValorRenglon40.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                double _ValorRenglon41 = Double.Parse(this.LblValorRenglon41.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                double _ValorPagar = (_ValorRenglon39 + _ValorRenglon40 + _ValorRenglon41);
                this.LblValorRenglon42.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorPagar)));
                double _ValorRenglon42 = Double.Parse(this.LblValorRenglon42.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                double _ValorRenglon43 = Double.Parse(this.TxtValorRenglon43.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                double _TotalPagar = (_ValorRenglon42 + _ValorRenglon43);
                this.LblValorRenglon44.Text = String.Format(String.Format("{0:###,###,##0}", round(_TotalPagar)));
                #endregion
            }
            catch (Exception ex)
            {
                #region MOSTRAR MENSAJE DE USUARIO
                //Mostramos el mensaje porque se produjo un error con la Trx.
                this.RadWindowManager1.ReloadOnShow = true;
                this.RadWindowManager1.DestroyOnClose = true;
                this.RadWindowManager1.Windows.Clear();
                this.RadWindowManager1.Enabled = true;
                this.RadWindowManager1.EnableAjaxSkinRendering = true;
                this.RadWindowManager1.Visible = true;

                RadWindow Ventana = new RadWindow();
                Ventana.Modal = true;
                string _MsgMensaje = "Señor usuario. Ocurrio un Error al consultar los datos de la oficina. Motivo: " + ex.ToString();
                Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgMensaje;
                Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                Ventana.VisibleOnPageLoad = true;
                Ventana.Visible = true;
                Ventana.Height = Unit.Pixel(300);
                Ventana.Width = Unit.Pixel(600);
                Ventana.KeepInScreenBounds = true;
                Ventana.Title = "Mensaje del Sistema";
                Ventana.VisibleStatusbar = false;
                Ventana.Behaviors = WindowBehaviors.Close;
                this.RadWindowManager1.Windows.Add(Ventana);
                this.RadWindowManager1 = null;
                Ventana = null;
                _log.Error(_MsgMensaje);
                #endregion
            }
        }

        private bool GetBaseGravable()
        {
            bool _Result = false;
            try
            {
                #region OBTENEMOS LOS VALORES DE LA SESION (B. BASE GRAVABLE)
                ObjBaseGrav.TipoConsulta = 5;
                ObjBaseGrav.IdCliente = this.Session["IdCliente"] != null ? this.Session["IdCliente"].ToString().Trim() : null;
                ObjBaseGrav.IdClienteEstablecimiento = this.ViewState["IdClienteEstablecimiento"] != null ? this.ViewState["IdClienteEstablecimiento"].ToString().Trim() : null;
                ObjBaseGrav.IdFormImpuesto = this.ViewState["IdFormImpuesto"].ToString().Trim();
                ObjBaseGrav.IdFormConfiguracion = null;
                ObjBaseGrav.IdPuc = null;
                ObjBaseGrav.AnioGravable = this.TxtAnioGravable.Text.ToString().Trim();
                ObjBaseGrav.MesEf = this.ViewState["MesEFAntes"].ToString().Trim();
                ObjBaseGrav.IdEstado = 1;
                ObjBaseGrav.MotorBaseDatos = this.Session["MotorBaseDatos"].ToString().Trim();

                DataTable dtBaseGravable = new DataTable();
                dtBaseGravable = ObjBaseGrav.GetBaseGravable();
                int _ContadorRow = 0;
                if (dtBaseGravable != null)
                {
                    if (dtBaseGravable.Rows.Count > 0)
                    {
                        //--AQUI RECORREMOS EL DATATABLE PARA MOSTRAR LAS ACTIVIDADES ECONOMICAS.
                        foreach (DataRow rowItem in dtBaseGravable.Rows)
                        {
                            _ContadorRow++;
                            int _IdBaseGravable = Int32.Parse(rowItem["idbase_gravable"].ToString().Trim());
                            this.ViewState["ValorEFMesAntesR8"] = Double.Parse(rowItem["valor_renglon8"].ToString().Trim());
                            this.ViewState["ValorEFMesAntesR9"] = Double.Parse(rowItem["valor_renglon9"].ToString().Trim());
                            this.ViewState["ValorEFMesAntesR11"] = Double.Parse(rowItem["valor_renglon11"].ToString().Trim());
                            this.ViewState["ValorEFMesAntesR12"] = Double.Parse(rowItem["valor_renglon12"].ToString().Trim());
                            this.ViewState["ValorEFMesAntesR13"] = Double.Parse(rowItem["valor_renglon13"].ToString().Trim());
                            this.ViewState["ValorEFMesAntesR14"] = Double.Parse(rowItem["valor_renglon14"].ToString().Trim());
                            this.ViewState["ValorEFMesAntesR15"] = Double.Parse(rowItem["valor_renglon15"].ToString().Trim());
                            this.ViewState["ValorEFMesAntesR26"] = Double.Parse(rowItem["valor_renglon26"].ToString().Trim());
                            this.ViewState["ValorEFMesAntesR27"] = Double.Parse(rowItem["valor_renglon27"].ToString().Trim());
                            this.ViewState["ValorEFMesAntesR28"] = Double.Parse(rowItem["valor_renglon28"].ToString().Trim());
                            this.ViewState["ValorEFMesAntesR29"] = Double.Parse(rowItem["valor_renglon29"].ToString().Trim());
                            this.ViewState["ValorEFMesAntesR31"] = Double.Parse(rowItem["valor_renglon31"].ToString().Trim());
                            this.ViewState["ValorEFMesAntesR32"] = Double.Parse(rowItem["valor_renglon32"].ToString().Trim());
                            this.ViewState["ValorEFMesAntesR33"] = Double.Parse(rowItem["valor_renglon33"].ToString().Trim());
                            this.ViewState["ValorEFMesAntesR34"] = Double.Parse(rowItem["valor_renglon34"].ToString().Trim());
                            this.ViewState["ValorEFMesAntesR35"] = Double.Parse(rowItem["valor_renglon35"].ToString().Trim());
                            this.ViewState["ValorEFMesAntesR36"] = Double.Parse(rowItem["valor_renglon36"].ToString().Trim());
                            this.ViewState["ValorEFMesAntesR37"] = Double.Parse(rowItem["valor_renglon37"].ToString().Trim());
                            _Result = true;
                            break;
                        }
                    }
                    else
                    {
                        #region MOSTRAR MENSAJE DE USUARIO
                        _Result = false;
                        //Mostramos el mensaje porque se produjo un error con la Trx.
                        this.RadWindowManager1.ReloadOnShow = true;
                        this.RadWindowManager1.DestroyOnClose = true;
                        this.RadWindowManager1.Windows.Clear();
                        this.RadWindowManager1.Enabled = true;
                        this.RadWindowManager1.EnableAjaxSkinRendering = true;
                        this.RadWindowManager1.Visible = true;

                        RadWindow Ventana = new RadWindow();
                        Ventana.Modal = true;
                        string _MsgMensaje = "2. No se encontro información de base gravable del municipio... !";
                        Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgMensaje;
                        Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                        Ventana.VisibleOnPageLoad = true;
                        Ventana.Visible = true;
                        Ventana.Height = Unit.Pixel(300);
                        Ventana.Width = Unit.Pixel(600);
                        Ventana.KeepInScreenBounds = true;
                        Ventana.Title = "Mensaje del Sistema";
                        Ventana.VisibleStatusbar = false;
                        Ventana.Behaviors = WindowBehaviors.Close;
                        this.RadWindowManager1.Windows.Add(Ventana);
                        this.RadWindowManager1 = null;
                        Ventana = null;
                        #endregion
                    }
                }
                else
                {
                    #region MOSTRAR MENSAJE DE USUARIO
                    _Result = false;
                    //Mostramos el mensaje porque se produjo un error con la Trx.
                    this.RadWindowManager1.ReloadOnShow = true;
                    this.RadWindowManager1.DestroyOnClose = true;
                    this.RadWindowManager1.Windows.Clear();
                    this.RadWindowManager1.Enabled = true;
                    this.RadWindowManager1.EnableAjaxSkinRendering = true;
                    this.RadWindowManager1.Visible = true;

                    RadWindow Ventana = new RadWindow();
                    Ventana.Modal = true;
                    string _MsgMensaje = "1. No se encontro información de base gravable del municipio... !";
                    Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgMensaje;
                    Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                    Ventana.VisibleOnPageLoad = true;
                    Ventana.Visible = true;
                    Ventana.Height = Unit.Pixel(300);
                    Ventana.Width = Unit.Pixel(600);
                    Ventana.KeepInScreenBounds = true;
                    Ventana.Title = "Mensaje del Sistema";
                    Ventana.VisibleStatusbar = false;
                    Ventana.Behaviors = WindowBehaviors.Close;
                    this.RadWindowManager1.Windows.Add(Ventana);
                    this.RadWindowManager1 = null;
                    Ventana = null;
                    #endregion
                }
                #endregion
            }
            catch (Exception ex)
            {
                #region MOSTRAR MENSAJE DE USUARIO
                _Result = false;
                //Mostramos el mensaje porque se produjo un error con la Trx.
                this.RadWindowManager1.ReloadOnShow = true;
                this.RadWindowManager1.DestroyOnClose = true;
                this.RadWindowManager1.Windows.Clear();
                this.RadWindowManager1.Enabled = true;
                this.RadWindowManager1.EnableAjaxSkinRendering = true;
                this.RadWindowManager1.Visible = true;

                RadWindow Ventana = new RadWindow();
                Ventana.Modal = true;
                string _MsgMensaje = "Señor usuario, ocurrio un error al obtener la Base Gravable. Motivo: " + ex.ToString();
                Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgMensaje;
                Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                Ventana.VisibleOnPageLoad = true;
                Ventana.Visible = true;
                Ventana.Height = Unit.Pixel(300);
                Ventana.Width = Unit.Pixel(600);
                Ventana.KeepInScreenBounds = true;
                Ventana.Title = "Mensaje del Sistema";
                Ventana.VisibleStatusbar = false;
                Ventana.Behaviors = WindowBehaviors.Close;
                this.RadWindowManager1.Windows.Add(Ventana);
                this.RadWindowManager1 = null;
                Ventana = null;
                #endregion
            }

            return _Result;
        }

        public static double round(double input, int TipoAproximacion)
        {
            double _Result = 0;
            //--AQUI VALIDAMOS EL TIPO DE APROXIMACION
            if (TipoAproximacion == 1)   //--1. HACIA ARRIBA
            {
                _Result = (double)(1000 * Math.Ceiling(input / 1000));
            }
            else if (TipoAproximacion == 2)   //--1. HACIA ABAJO
            {
                _Result = (double)(1000 * Math.Round(input / 1000));
            }

            return _Result;
        }

        public static double round(double input)
        {
            double ValorRenglo = Math.Abs(input);
            double _Result = 0;
            double rem = ValorRenglo % 1000;
            //return rem >= 5 ? (num - rem + 10) : (num - rem);
            if (rem >= 500)
            {
                _Result = (double)(1000 * Math.Ceiling(ValorRenglo / 1000));
            }
            else
            {
                _Result = (double)(1000 * Math.Round(ValorRenglo / 1000));
            }

            return _Result;
        }

        public static decimal round2(decimal input)
        {
            decimal _Result = 0;
            decimal rem = input % 1000;
            //return rem >= 5 ? (num - rem + 10) : (num - rem);
            if (rem >= 500)
            {
                _Result = (decimal)(1000 * Math.Ceiling(input / 1000));
            }
            else
            {
                _Result = (decimal)(1000 * Math.Round(input / 1000));
            }

            return _Result;
        }

        #region LISTA DE COMBOX PARA LA FECHA MAX DE PAGO
        protected void LstFechaMaxPago()
        {
            try
            {
                this.CmbFecha1.DataSource = ObjCombox.GetDias();
                this.CmbFecha1.DataValueField = "id_dia";
                this.CmbFecha1.DataTextField = "numero_dia";
                this.CmbFecha1.DataBind();

                this.CmbFecha2.DataSource = ObjCombox.GetMeses();
                this.CmbFecha2.DataValueField = "id_mes";
                this.CmbFecha2.DataTextField = "numero_mes";
                this.CmbFecha2.DataBind();

                this.CmbFecha3.DataSource = ObjCombox.GetAnios();
                this.CmbFecha3.DataValueField = "id_anio";
                this.CmbFecha3.DataTextField = "numero_anio";
                this.CmbFecha3.DataBind();
            }
            catch (Exception ex)
            {
                _log.Error("Error al cargar los horarios. Motivo: " + ex.Message);
            }
        }

        #endregion

        protected void Page_Load(object sender, EventArgs e)
        {
            if (!(this.Page.IsPostBack))
            {
                #region DEFINIR VARIABLES DEL MODULO
                //--AQUI OBTENEMOS LOS PARAMETROS
                this.ViewState["TipoProceso"] = Int32.Parse(Request.QueryString["TipoProceso"].ToString().Trim());
                this.ViewState["PeriodoImpuesto"] = "0";    //--VARIABLE PARA ALMACENAR LA CANTIDAD DE MESES DE LA PERIODICIDAD
                this.ViewState["PeriodicidadImpuesto"] = "";    //--POR DEFECTO DEL RENGLON DE SANCIONES
                this.ViewState["Sancion"] = "";    //--POR DEFECTO DEL RENGLON DE SANCIONES
                this.ViewState["IdMunicipioOficina"] = 0;
                this.ViewState["IdPeriodicidad"] = 0;
                this.ViewState["Periodicidad"] = "";
                this.ViewState["MesEFAntes"] = "";
                this.ViewState["ValorEFMesAntesR8"] = 0;
                this.ViewState["ValorEFMesAntesR9"] = 0;
                this.ViewState["ValorEFMesAntesR11"] = 0;
                this.ViewState["ValorEFMesAntesR12"] = 0;
                this.ViewState["ValorEFMesAntesR13"] = 0;
                this.ViewState["ValorEFMesAntesR14"] = 0;
                this.ViewState["ValorEFMesAntesR15"] = 0;
                this.ViewState["ValorEFMesAntesR26"] = 0;
                this.ViewState["ValorEFMesAntesR27"] = 0;
                this.ViewState["ValorEFMesAntesR28"] = 0;
                this.ViewState["ValorEFMesAntesR29"] = 0;
                this.ViewState["ValorEFMesAntesR31"] = 0;
                this.ViewState["ValorEFMesAntesR32"] = 0;
                this.ViewState["ValorEFMesAntesR33"] = 0;
                this.ViewState["ValorEFMesAntesR34"] = 0;
                this.ViewState["ValorEFMesAntesR35"] = 0;
                this.ViewState["ValorEFMesAntesR36"] = 0;
                this.ViewState["ValorEFMesAntesR37"] = 0;
                this.ViewState["MesEFActual"] = "";
                this.ViewState["IdLiquidImpuesto"] = null;
                this.ViewState["LiquidacionMixta"] = "N";
                //--DATOS DE LOS FIRMANTES
                this.ViewState["IdFirmante1"] = "0";
                this.ViewState["IdFirmante2"] = "0";
                this.ViewState["IdRolFirmante1"] = "";
                this.ViewState["IdRolFirmante2"] = "";
                this.ViewState["ImagenFirma1"] = null;
                this.ViewState["ImagenFirma2"] = null;
                #endregion

                if (Int32.Parse(this.ViewState["TipoProceso"].ToString().Trim()) == 1)
                {
                    #region LIQUIDAR EL FORM AUTORETENCION ICA EN BORRADOR
                    this.ViewState["IdFormImpuesto"] = Request.QueryString["IdFormImpuesto"].ToString().Trim();
                    this.ViewState["IdClienteEstablecimiento"] = null;
                    this.ViewState["ParamDesagregacion"] = "";
                    this.ViewState["IdLiquidImpuesto"] = null;
                    this.ViewState["TipoProceso"] = "1";
                    this.ViewState["OpcionUso"] = "2";
                    this.ViewState["IdRegistro"] = "";

                    //--DEFINIR VALORES POR DEFECTO DEL FORMULARIO
                    this.TxtAnioGravable.Text = DateTime.Now.ToString("yyyy");
                    this.LblFechaActual.Text = DateTime.Now.ToString("dd MM yyyy");
                    this.LstFechaMaxPago();
                    this.CmbFecha1.SelectedValue = DateTime.Now.ToString("dd");
                    this.CmbFecha2.SelectedValue = DateTime.Now.ToString("MM");
                    this.CmbFecha3.SelectedValue = DateTime.Now.ToString("yyyy");

                    #region AQUI OBTENEMOS LOS DATOS DEL FIRMANTE
                    //--AQUI OBTENEMOS LOS DATOS DEL FIRMANTE COMO REPRESENTANTE LEGAL
                    #region OBTENER DATOS DEL FIRMANTE 1
                    //--FIRMANTE UNO
                    DataTable dtDatosFirm1 = new DataTable();
                    ObjFirmante.TipoConsulta = 4;   //--CON ESTE TIPO DE CONSULTA SOLO OBTENEMOS DATOS DEL REP. LEGAL
                    ObjFirmante.IdCliente = this.Session["IdCliente"] != null ? this.Session["IdCliente"].ToString().Trim() : null;
                    ObjFirmante.IdFirmante = null;
                    ObjFirmante.IdRol = 4;  //--ID ROL
                    ObjFirmante.IdEstado = 1;
                    ObjFirmante.MostrarSeleccione = "SI";
                    ObjFirmante.MotorBaseDatos = this.Session["MotorBaseDatos"].ToString().Trim();
                    //--
                    dtDatosFirm1 = ObjFirmante.GetImagenFirma();

                    if (dtDatosFirm1 != null)
                    {
                        if (dtDatosFirm1.Rows.Count > 0)
                        {
                            #region OBTENER DATOS DEL FIRMANTE 1
                            this.ViewState["DtFirmante1"] = dtDatosFirm1;

                            if (dtDatosFirm1.Rows.Count > 1)
                            {
                                this.Validator5.Enabled = true;
                                this.CmbFirmante1.Enabled = true;
                                this.CmbFirmante1.SelectedValue = "0";
                            }
                            else
                            {
                                this.Validator5.Enabled = false;
                                this.CmbFirmante1.Enabled = false;
                            }
                            //--AQUI HABILITAMOS EL COMBO DE LOS 2do FIRMANTES
                            this.CmbFirmante1.DataSource = dtDatosFirm1;
                            this.CmbFirmante1.DataValueField = "id_firmante";
                            this.CmbFirmante1.DataTextField = "nombre_firmante";
                            this.CmbFirmante1.DataBind();
                            #endregion
                        }
                    }
                    #endregion

                    //--AQUI OBTENEMOS LOS DATOS DEL FIRMANTE COMO REVISOR FISCAL
                    #region OBTENER DATOS DEL FIRMANTE 2
                    //--FIRMANTE UNO
                    DataTable dtDatosFirm2 = new DataTable();
                    ObjFirmante.TipoConsulta = 4;   //--CON ESTE TIPO DE CONSULTA SOLO OBTENEMOS DATOS DEL REP. LEGAL
                    ObjFirmante.IdCliente = this.Session["IdCliente"].ToString().Trim();
                    ObjFirmante.IdFirmante = null;
                    ObjFirmante.IdRol = 5;  //--ID ROL REVISOR FISCAL
                    ObjFirmante.IdEstado = 1;
                    ObjFirmante.MostrarSeleccione = "SI";
                    ObjFirmante.MotorBaseDatos = this.Session["MotorBaseDatos"].ToString().Trim();
                    //--
                    dtDatosFirm2 = ObjFirmante.GetImagenFirma();

                    if (dtDatosFirm2 != null)
                    {
                        if (dtDatosFirm2.Rows.Count > 0)
                        {
                            #region OBTENER DATOS DEL FIRMANTE 2
                            this.ViewState["DtFirmante2"] = dtDatosFirm2;

                            if (dtDatosFirm2.Rows.Count > 1)
                            {
                                //this.Validator6.Enabled = true;
                                this.CmbFirmante2.Enabled = true;
                                this.CmbFirmante2.SelectedValue = "0";
                            }
                            else
                            {
                                //this.Validator6.Enabled = false;
                                this.CmbFirmante2.Enabled = false;
                            }

                            //--AQUI HABILITAMOS EL COMBO DE LOS 2do FIRMANTES
                            this.CmbFirmante2.DataSource = dtDatosFirm2;
                            this.CmbFirmante2.DataValueField = "id_firmante";
                            this.CmbFirmante2.DataTextField = "nombre_firmante";
                            this.CmbFirmante2.DataBind();
                            #endregion
                        }
                    }
                    #endregion
                    //--
                    #endregion

                    this.BtnNuevaLiquidacion.Visible = true;
                    this.TxtCodDane.Text = "";
                    this.TxtCodDane.Focus();
                    #endregion
                }
                else
                {
                    #region MOSTRAR INFO DEL FORM AUTORETENCION ICA EN BORRADOR
                    //--INICIO
                    this.LblFechaActual.Text = DateTime.Now.ToString("dd-MM-yyyy");
                    this.LstFechaMaxPago();
                    this.ViewState["IdPeriodicidad"] = Request.QueryString["PeriodoImpuesto"].ToString().Trim();
                    this.ViewState["PeriodicidadImpuesto"] = Request.QueryString["IdPeriodicidadImpuesto"].ToString().Trim();
                    this.ViewState["MesEFActual"] = Request.QueryString["IdPeriodicidadImpuesto"].ToString().Trim().PadLeft(2, '0');
                    this.ViewState["IdFormImpuesto"] = Request.QueryString["IdFormImpuesto"].ToString().Trim();
                    this.ViewState["IdMunicipioOficina"] = Request.QueryString["IdMunicipio"].ToString().Trim();
                    this.ViewState["IdCliente"] = Request.QueryString["IdCliente"].ToString().Trim();
                    this.ViewState["CodigoDane"] = Request.QueryString["CodigoDane"].ToString().Trim();
                    this.TxtCodDane.Text = this.ViewState["CodigoDane"].ToString().Trim();
                    this.TxtAnioGravable.Text = Request.QueryString["AnioGravable"].ToString().Trim();
                    this.BtnNuevaLiquidacion.Visible = false;
                    //--
                    this.GetConsultarLiquidacion();
                    #endregion
                }
            }
        }

        #region EVENTOS DE CONTROLES DEL FORM
        protected void TxtCodDane_TextChanged(object sender, EventArgs e)
        {
            //Aqui deshabilitamos el control RadWindowManager1 para que no vuelva a mostrar la ventana del Popup
            this.RadWindowManager1.Enabled = false;
            this.RadWindowManager1.EnableAjaxSkinRendering = false;
            this.RadWindowManager1.Visible = false;
            //--
            this.LimpiarForm();
            //this.GetConsultarLiquidacion();
            this.GetDatosCliente();
        }

        protected void BtnConsultar_Click(object sender, ImageClickEventArgs e)
        {
            //Aqui deshabilitamos el control RadWindowManager1 para que no vuelva a mostrar la ventana del Popup
            this.RadWindowManager1.Enabled = false;
            this.RadWindowManager1.EnableAjaxSkinRendering = false;
            this.RadWindowManager1.Visible = false;
            //--
            this.LimpiarForm();
            //this.GetConsultarLiquidacion();
            this.GetDatosCliente();
        }

        protected void TxtAnioGravable_TextChanged(object sender, EventArgs e)
        {
            //Aqui deshabilitamos el control RadWindowManager1 para que no vuelva a mostrar la ventana del Popup
            this.RadWindowManager1.Enabled = false;
            this.RadWindowManager1.EnableAjaxSkinRendering = false;
            this.RadWindowManager1.Visible = false;

            this.GetConsultarLiquidacion();
        }

        protected void RbPeriodoMensual_SelectedIndexChanged(object sender, EventArgs e)
        {
            try
            {
                #region OBTENER EL PERIODO SELECCIONADO POR EL USUARIO
                int _IdPeriodo = Int32.Parse(this.RbPeriodoMensual.SelectedValue.ToString().Trim());
                this.ViewState["PeriodicidadImpuesto"] = _IdPeriodo;
                this.ViewState["PeriodoImpuesto"] = "12";
                switch (_IdPeriodo)
                {
                    case 1:
                        #region AQUI DEFINIMOS VALORES DE VARIABLES Y EJECUTAMOS EL E.F.
                        this.ViewState["MesEFActual"] = _IdPeriodo.ToString().Trim().PadLeft(2, '0');
                        this.ViewState["ValorEFMesAntesR8"] = 0;
                        this.ViewState["ValorEFMesAntesR9"] = 0;
                        this.ViewState["ValorEFMesAntesR11"] = 0;
                        this.ViewState["ValorEFMesAntesR12"] = 0;
                        this.ViewState["ValorEFMesAntesR13"] = 0;
                        this.ViewState["ValorEFMesAntesR14"] = 0;
                        this.ViewState["ValorEFMesAntesR15"] = 0;
                        this.ViewState["ValorEFMesAntesR26"] = 0;
                        this.ViewState["ValorEFMesAntesR27"] = 0;
                        this.ViewState["ValorEFMesAntesR28"] = 0;
                        this.ViewState["ValorEFMesAntesR29"] = 0;
                        this.ViewState["ValorEFMesAntesR31"] = 0;
                        this.ViewState["ValorEFMesAntesR32"] = 0;
                        this.ViewState["ValorEFMesAntesR33"] = 0;
                        this.ViewState["ValorEFMesAntesR34"] = 0;
                        this.ViewState["ValorEFMesAntesR35"] = 0;
                        this.ViewState["ValorEFMesAntesR36"] = 0;
                        this.ViewState["ValorEFMesAntesR37"] = 0;

                        //--AQUI ENVIAMOS A REALIZAR LA LIQUIDACIÓN DEL IMPUESTO
                        //this.GetEstadoFinanciero();
                        this.GetConsultarLiquidacion();
                        #endregion
                        break;
                    default:
                        int _IdPeriodoAntes = (_IdPeriodo - 1);
                        this.ViewState["MesEFAntes"] = _IdPeriodoAntes.ToString().Trim().PadLeft(2, '0');
                        this.ViewState["MesEFActual"] = _IdPeriodo.ToString().Trim().PadLeft(2, '0');

                        //--AQUI GENERAMOS LA BASE GRAVABLE DEL MES ANTERIOR
                        if (this.GetBaseGravable())
                        {
                            //--AQUI ENVIAMOS A REALIZAR LA LIQUIDACIÓN DEL IMPUESTO
                            //this.GetEstadoFinanciero();
                            this.GetConsultarLiquidacion();
                        }
                        break;
                }
                #endregion
            }
            catch (Exception ex)
            {
                #region MOSTRAR MENSAJE DE USUARIO
                //Mostramos el mensaje porque se produjo un error con la Trx.
                this.RadWindowManager1.ReloadOnShow = true;
                this.RadWindowManager1.DestroyOnClose = true;
                this.RadWindowManager1.Windows.Clear();
                this.RadWindowManager1.Enabled = true;
                this.RadWindowManager1.EnableAjaxSkinRendering = true;
                this.RadWindowManager1.Visible = true;

                RadWindow Ventana = new RadWindow();
                Ventana.Modal = true;
                string _MsgMensaje = "Señor usuario, ocurrio un error al preocesar la Periodicidad de Pago ( " + this.ViewState["Periodicidad"].ToString().Trim() + " ). Motivo: " + ex.ToString();
                Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgMensaje;
                Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                Ventana.VisibleOnPageLoad = true;
                Ventana.Visible = true;
                Ventana.Height = Unit.Pixel(300);
                Ventana.Width = Unit.Pixel(600);
                Ventana.KeepInScreenBounds = true;
                Ventana.Title = "Mensaje del Sistema";
                Ventana.VisibleStatusbar = false;
                Ventana.Behaviors = WindowBehaviors.Close;
                this.RadWindowManager1.Windows.Add(Ventana);
                this.RadWindowManager1 = null;
                Ventana = null;
                #endregion
            }
        }

        protected void RbPeriodoBimestral_SelectedIndexChanged(object sender, EventArgs e)
        {
            try
            {
                #region OBTENER EL PERIODO SELECCIONADO POR EL USUARIO
                //int _IdPeriodo = Int32.Parse(this.RbPeriodoBimestral.SelectedValue.ToString().Trim());
                string[] _ArrayPeriodo = this.RbPeriodoBimestral.SelectedValue.ToString().Trim().Split('|');
                int _IdPeriodo = Int32.Parse(_ArrayPeriodo[0].ToString().Trim());
                this.ViewState["PeriodicidadImpuesto"] = Int32.Parse(_ArrayPeriodo[1].ToString().Trim());
                this.ViewState["PeriodoImpuesto"] = "6";
                switch (_IdPeriodo)
                {
                    case 2:
                        #region AQUI DEFINIMOS VALORES DE VARIABLES Y EJECUTAMOS EL E.F.
                        this.ViewState["MesEFActual"] = _IdPeriodo.ToString().Trim().PadLeft(2, '0');
                        this.ViewState["ValorEFMesAntesR8"] = 0;
                        this.ViewState["ValorEFMesAntesR9"] = 0;
                        this.ViewState["ValorEFMesAntesR11"] = 0;
                        this.ViewState["ValorEFMesAntesR12"] = 0;
                        this.ViewState["ValorEFMesAntesR13"] = 0;
                        this.ViewState["ValorEFMesAntesR14"] = 0;
                        this.ViewState["ValorEFMesAntesR15"] = 0;
                        this.ViewState["ValorEFMesAntesR26"] = 0;
                        this.ViewState["ValorEFMesAntesR27"] = 0;
                        this.ViewState["ValorEFMesAntesR28"] = 0;
                        this.ViewState["ValorEFMesAntesR29"] = 0;
                        this.ViewState["ValorEFMesAntesR31"] = 0;
                        this.ViewState["ValorEFMesAntesR32"] = 0;
                        this.ViewState["ValorEFMesAntesR33"] = 0;
                        this.ViewState["ValorEFMesAntesR34"] = 0;
                        this.ViewState["ValorEFMesAntesR35"] = 0;
                        this.ViewState["ValorEFMesAntesR36"] = 0;
                        this.ViewState["ValorEFMesAntesR37"] = 0;

                        //--AQUI ENVIAMOS A REALIZAR LA LIQUIDACIÓN DEL IMPUESTO
                        //this.GetEstadoFinanciero();
                        this.GetConsultarLiquidacion();
                        #endregion
                        break;
                    default:
                        int _IdPeriodoAntes = (_IdPeriodo - 2);
                        this.ViewState["MesEFAntes"] = _IdPeriodoAntes.ToString().Trim().PadLeft(2, '0');
                        this.ViewState["MesEFActual"] = _IdPeriodo.ToString().Trim().PadLeft(2, '0');

                        //--AQUI GENERAMOS LA BASE GRAVABLE DEL MES ANTERIOR
                        if (this.GetBaseGravable())
                        {
                            //--AQUI ENVIAMOS A REALIZAR LA LIQUIDACIÓN DEL IMPUESTO
                            //this.GetEstadoFinanciero();
                            this.GetConsultarLiquidacion();
                        }
                        break;
                }
                #endregion
            }
            catch (Exception ex)
            {
                #region MOSTRAR MENSAJE DE USUARIO
                //Mostramos el mensaje porque se produjo un error con la Trx.
                this.RadWindowManager1.ReloadOnShow = true;
                this.RadWindowManager1.DestroyOnClose = true;
                this.RadWindowManager1.Windows.Clear();
                this.RadWindowManager1.Enabled = true;
                this.RadWindowManager1.EnableAjaxSkinRendering = true;
                this.RadWindowManager1.Visible = true;

                RadWindow Ventana = new RadWindow();
                Ventana.Modal = true;
                string _MsgMensaje = "Señor usuario, ocurrio un error al preocesar la Periodicidad de Pago ( " + this.ViewState["Periodicidad"].ToString().Trim() + " ). Motivo: " + ex.ToString();
                Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgMensaje;
                Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                Ventana.VisibleOnPageLoad = true;
                Ventana.Visible = true;
                Ventana.Height = Unit.Pixel(300);
                Ventana.Width = Unit.Pixel(600);
                Ventana.KeepInScreenBounds = true;
                Ventana.Title = "Mensaje del Sistema";
                Ventana.VisibleStatusbar = false;
                Ventana.Behaviors = WindowBehaviors.Close;
                this.RadWindowManager1.Windows.Add(Ventana);
                this.RadWindowManager1 = null;
                Ventana = null;
                #endregion
            }
        }

        protected void RbPeriodoTrimestral_SelectedIndexChanged(object sender, EventArgs e)
        {
            try
            {
                #region OBTENER EL PERIODO SELECCIONADO POR EL USUARIO
                //int _IdPeriodo = Int32.Parse(this.RbPeriodoBimestral.SelectedValue.ToString().Trim());
                string[] _ArrayPeriodo = this.RbPeriodoBimestral.SelectedValue.ToString().Trim().Split('|');
                int _IdPeriodo = Int32.Parse(_ArrayPeriodo[0].ToString().Trim());
                this.ViewState["PeriodicidadImpuesto"] = Int32.Parse(_ArrayPeriodo[1].ToString().Trim());
                this.ViewState["PeriodoImpuesto"] = "4";
                switch (_IdPeriodo)
                {
                    case 3:
                        #region AQUI DEFINIMOS VALORES DE VARIABLES Y EJECUTAMOS EL E.F.
                        this.ViewState["MesEFActual"] = _IdPeriodo.ToString().Trim().PadLeft(2, '0');
                        this.ViewState["ValorEFMesAntesR8"] = 0;
                        this.ViewState["ValorEFMesAntesR9"] = 0;
                        this.ViewState["ValorEFMesAntesR11"] = 0;
                        this.ViewState["ValorEFMesAntesR12"] = 0;
                        this.ViewState["ValorEFMesAntesR13"] = 0;
                        this.ViewState["ValorEFMesAntesR14"] = 0;
                        this.ViewState["ValorEFMesAntesR15"] = 0;
                        this.ViewState["ValorEFMesAntesR26"] = 0;
                        this.ViewState["ValorEFMesAntesR27"] = 0;
                        this.ViewState["ValorEFMesAntesR28"] = 0;
                        this.ViewState["ValorEFMesAntesR29"] = 0;
                        this.ViewState["ValorEFMesAntesR31"] = 0;
                        this.ViewState["ValorEFMesAntesR32"] = 0;
                        this.ViewState["ValorEFMesAntesR33"] = 0;
                        this.ViewState["ValorEFMesAntesR34"] = 0;
                        this.ViewState["ValorEFMesAntesR35"] = 0;
                        this.ViewState["ValorEFMesAntesR36"] = 0;
                        this.ViewState["ValorEFMesAntesR37"] = 0;

                        //--AQUI ENVIAMOS A REALIZAR LA LIQUIDACIÓN DEL IMPUESTO
                        //this.GetEstadoFinanciero();
                        this.GetConsultarLiquidacion();
                        #endregion
                        break;
                    default:
                        int _IdPeriodoAntes = (_IdPeriodo - 3);
                        this.ViewState["MesEFAntes"] = _IdPeriodoAntes.ToString().Trim().PadLeft(2, '0');
                        this.ViewState["MesEFActual"] = _IdPeriodo.ToString().Trim().PadLeft(2, '0');

                        //--AQUI GENERAMOS LA BASE GRAVABLE DEL MES ANTERIOR
                        if (this.GetBaseGravable())
                        {
                            //--AQUI ENVIAMOS A REALIZAR LA LIQUIDACIÓN DEL IMPUESTO
                            //this.GetEstadoFinanciero();
                            this.GetConsultarLiquidacion();
                        }
                        break;
                }
                #endregion
            }
            catch (Exception ex)
            {
                #region MOSTRAR MENSAJE DE USUARIO
                //Mostramos el mensaje porque se produjo un error con la Trx.
                this.RadWindowManager1.ReloadOnShow = true;
                this.RadWindowManager1.DestroyOnClose = true;
                this.RadWindowManager1.Windows.Clear();
                this.RadWindowManager1.Enabled = true;
                this.RadWindowManager1.EnableAjaxSkinRendering = true;
                this.RadWindowManager1.Visible = true;

                RadWindow Ventana = new RadWindow();
                Ventana.Modal = true;
                string _MsgMensaje = "Señor usuario, ocurrio un error al preocesar la Periodicidad de Pago ( " + this.ViewState["Periodicidad"].ToString().Trim() + " ). Motivo: " + ex.ToString();
                Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgMensaje;
                Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                Ventana.VisibleOnPageLoad = true;
                Ventana.Visible = true;
                Ventana.Height = Unit.Pixel(300);
                Ventana.Width = Unit.Pixel(600);
                Ventana.KeepInScreenBounds = true;
                Ventana.Title = "Mensaje del Sistema";
                Ventana.VisibleStatusbar = false;
                Ventana.Behaviors = WindowBehaviors.Close;
                this.RadWindowManager1.Windows.Add(Ventana);
                this.RadWindowManager1 = null;
                Ventana = null;
                #endregion
            }
        }

        protected void RbPeriodoCuatrimestral_SelectedIndexChanged(object sender, EventArgs e)
        {
            try
            {
                #region OBTENER EL PERIODO SELECCIONADO POR EL USUARIO
                //int _IdPeriodo = Int32.Parse(this.RbPeriodoBimestral.SelectedValue.ToString().Trim());
                string[] _ArrayPeriodo = this.RbPeriodoBimestral.SelectedValue.ToString().Trim().Split('|');
                int _IdPeriodo = Int32.Parse(_ArrayPeriodo[0].ToString().Trim());
                this.ViewState["PeriodicidadImpuesto"] = Int32.Parse(_ArrayPeriodo[1].ToString().Trim());
                this.ViewState["PeriodoImpuesto"] = "3";
                switch (_IdPeriodo)
                {
                    case 4:
                        #region AQUI DEFINIMOS VALORES DE VARIABLES Y EJECUTAMOS EL E.F.
                        this.ViewState["MesEFActual"] = _IdPeriodo.ToString().Trim().PadLeft(2, '0');
                        this.ViewState["ValorEFMesAntesR8"] = 0;
                        this.ViewState["ValorEFMesAntesR9"] = 0;
                        this.ViewState["ValorEFMesAntesR11"] = 0;
                        this.ViewState["ValorEFMesAntesR12"] = 0;
                        this.ViewState["ValorEFMesAntesR13"] = 0;
                        this.ViewState["ValorEFMesAntesR14"] = 0;
                        this.ViewState["ValorEFMesAntesR15"] = 0;
                        this.ViewState["ValorEFMesAntesR26"] = 0;
                        this.ViewState["ValorEFMesAntesR27"] = 0;
                        this.ViewState["ValorEFMesAntesR28"] = 0;
                        this.ViewState["ValorEFMesAntesR29"] = 0;
                        this.ViewState["ValorEFMesAntesR31"] = 0;
                        this.ViewState["ValorEFMesAntesR32"] = 0;
                        this.ViewState["ValorEFMesAntesR33"] = 0;
                        this.ViewState["ValorEFMesAntesR34"] = 0;
                        this.ViewState["ValorEFMesAntesR35"] = 0;
                        this.ViewState["ValorEFMesAntesR36"] = 0;
                        this.ViewState["ValorEFMesAntesR37"] = 0;

                        //--AQUI ENVIAMOS A REALIZAR LA LIQUIDACIÓN DEL IMPUESTO
                        //this.GetEstadoFinanciero();
                        this.GetConsultarLiquidacion();
                        #endregion
                        break;
                    default:
                        int _IdPeriodoAntes = (_IdPeriodo - 4);
                        this.ViewState["MesEFAntes"] = _IdPeriodoAntes.ToString().Trim().PadLeft(2, '0');
                        this.ViewState["MesEFActual"] = _IdPeriodo.ToString().Trim().PadLeft(2, '0');

                        //--AQUI GENERAMOS LA BASE GRAVABLE DEL MES ANTERIOR
                        if (this.GetBaseGravable())
                        {
                            //--AQUI ENVIAMOS A REALIZAR LA LIQUIDACIÓN DEL IMPUESTO
                            //this.GetEstadoFinanciero();
                            this.GetConsultarLiquidacion();
                        }
                        break;
                }
                #endregion
            }
            catch (Exception ex)
            {
                #region MOSTRAR MENSAJE DE USUARIO
                //Mostramos el mensaje porque se produjo un error con la Trx.
                this.RadWindowManager1.ReloadOnShow = true;
                this.RadWindowManager1.DestroyOnClose = true;
                this.RadWindowManager1.Windows.Clear();
                this.RadWindowManager1.Enabled = true;
                this.RadWindowManager1.EnableAjaxSkinRendering = true;
                this.RadWindowManager1.Visible = true;

                RadWindow Ventana = new RadWindow();
                Ventana.Modal = true;
                string _MsgMensaje = "Señor usuario, ocurrio un error al preocesar la Periodicidad de Pago ( " + this.ViewState["Periodicidad"].ToString().Trim() + " ). Motivo: " + ex.ToString();
                Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgMensaje;
                Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                Ventana.VisibleOnPageLoad = true;
                Ventana.Visible = true;
                Ventana.Height = Unit.Pixel(300);
                Ventana.Width = Unit.Pixel(600);
                Ventana.KeepInScreenBounds = true;
                Ventana.Title = "Mensaje del Sistema";
                Ventana.VisibleStatusbar = false;
                Ventana.Behaviors = WindowBehaviors.Close;
                this.RadWindowManager1.Windows.Add(Ventana);
                this.RadWindowManager1 = null;
                Ventana = null;
                #endregion
            }
        }

        protected void RbPeriodoSemestral_SelectedIndexChanged(object sender, EventArgs e)
        {
            try
            {
                #region OBTENER EL PERIODO SELECCIONADO POR EL USUARIO
                //int _IdPeriodo = Int32.Parse(this.RbPeriodoBimestral.SelectedValue.ToString().Trim());
                string[] _ArrayPeriodo = this.RbPeriodoBimestral.SelectedValue.ToString().Trim().Split('|');
                int _IdPeriodo = Int32.Parse(_ArrayPeriodo[0].ToString().Trim());
                this.ViewState["PeriodicidadImpuesto"] = Int32.Parse(_ArrayPeriodo[1].ToString().Trim());
                this.ViewState["PeriodoImpuesto"] = "2";
                switch (_IdPeriodo)
                {
                    case 6:
                        #region AQUI DEFINIMOS VALORES DE VARIABLES Y EJECUTAMOS EL E.F.
                        this.ViewState["MesEFActual"] = _IdPeriodo.ToString().Trim().PadLeft(2, '0');
                        this.ViewState["ValorEFMesAntesR8"] = 0;
                        this.ViewState["ValorEFMesAntesR9"] = 0;
                        this.ViewState["ValorEFMesAntesR11"] = 0;
                        this.ViewState["ValorEFMesAntesR12"] = 0;
                        this.ViewState["ValorEFMesAntesR13"] = 0;
                        this.ViewState["ValorEFMesAntesR14"] = 0;
                        this.ViewState["ValorEFMesAntesR15"] = 0;
                        this.ViewState["ValorEFMesAntesR26"] = 0;
                        this.ViewState["ValorEFMesAntesR27"] = 0;
                        this.ViewState["ValorEFMesAntesR28"] = 0;
                        this.ViewState["ValorEFMesAntesR29"] = 0;
                        this.ViewState["ValorEFMesAntesR31"] = 0;
                        this.ViewState["ValorEFMesAntesR32"] = 0;
                        this.ViewState["ValorEFMesAntesR33"] = 0;
                        this.ViewState["ValorEFMesAntesR34"] = 0;
                        this.ViewState["ValorEFMesAntesR35"] = 0;
                        this.ViewState["ValorEFMesAntesR36"] = 0;
                        this.ViewState["ValorEFMesAntesR37"] = 0;

                        //--AQUI ENVIAMOS A REALIZAR LA LIQUIDACIÓN DEL IMPUESTO
                        //this.GetEstadoFinanciero();
                        this.GetConsultarLiquidacion();
                        #endregion
                        break;
                    default:
                        int _IdPeriodoAntes = (_IdPeriodo - 6);
                        this.ViewState["MesEFAntes"] = _IdPeriodoAntes.ToString().Trim().PadLeft(2, '0');
                        this.ViewState["MesEFActual"] = _IdPeriodo.ToString().Trim().PadLeft(2, '0');

                        //--AQUI GENERAMOS LA BASE GRAVABLE DEL MES ANTERIOR
                        if (this.GetBaseGravable())
                        {
                            //--AQUI ENVIAMOS A REALIZAR LA LIQUIDACIÓN DEL IMPUESTO
                            //this.GetEstadoFinanciero();
                            this.GetConsultarLiquidacion();
                        }
                        break;
                }
                #endregion
            }
            catch (Exception ex)
            {
                #region MOSTRAR MENSAJE DE USUARIO
                //Mostramos el mensaje porque se produjo un error con la Trx.
                this.RadWindowManager1.ReloadOnShow = true;
                this.RadWindowManager1.DestroyOnClose = true;
                this.RadWindowManager1.Windows.Clear();
                this.RadWindowManager1.Enabled = true;
                this.RadWindowManager1.EnableAjaxSkinRendering = true;
                this.RadWindowManager1.Visible = true;

                RadWindow Ventana = new RadWindow();
                Ventana.Modal = true;
                string _MsgMensaje = "Señor usuario, ocurrio un error al preocesar la Periodicidad de Pago ( " + this.ViewState["Periodicidad"].ToString().Trim() + " ). Motivo: " + ex.ToString();
                Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgMensaje;
                Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                Ventana.VisibleOnPageLoad = true;
                Ventana.Visible = true;
                Ventana.Height = Unit.Pixel(300);
                Ventana.Width = Unit.Pixel(600);
                Ventana.KeepInScreenBounds = true;
                Ventana.Title = "Mensaje del Sistema";
                Ventana.VisibleStatusbar = false;
                Ventana.Behaviors = WindowBehaviors.Close;
                this.RadWindowManager1.Windows.Add(Ventana);
                this.RadWindowManager1 = null;
                Ventana = null;
                #endregion
            }
        }

        protected void TxtValorRenglon43_TextChanged(object sender, EventArgs e)
        {
            try
            {
                //Aqui deshabilitamos el control RadWindowManager1 para que no vuelva a mostrar la ventana del Popup
                this.RadWindowManager1.Enabled = false;
                this.RadWindowManager1.EnableAjaxSkinRendering = false;
                this.RadWindowManager1.Visible = false;

                double _ValorRenglon42 = Double.Parse(this.LblValorRenglon42.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                double _ValorRenglon43 = Double.Parse(this.TxtValorRenglon43.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                double _TotalPagar = (_ValorRenglon42 + _ValorRenglon43);
                this.LblValorRenglon44.Text = String.Format(String.Format("{0:###,###,##0}", round(_TotalPagar)));

            }
            catch (Exception ex)
            {
                #region MOSTRAR MENSAJE DE USUARIO
                //Mostramos el mensaje porque se produjo un error con la Trx.
                this.RadWindowManager1.ReloadOnShow = true;
                this.RadWindowManager1.DestroyOnClose = true;
                this.RadWindowManager1.Windows.Clear();
                this.RadWindowManager1.Enabled = true;
                this.RadWindowManager1.EnableAjaxSkinRendering = true;
                this.RadWindowManager1.Visible = true;

                RadWindow Ventana = new RadWindow();
                Ventana.Modal = true;
                string _MsgError = "Error al calcular el Total a Pagar. Motivo: " + ex.Message;
                Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgError;
                Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                Ventana.VisibleOnPageLoad = true;
                Ventana.Visible = true;
                Ventana.Height = Unit.Pixel(300);
                Ventana.Width = Unit.Pixel(600);
                Ventana.KeepInScreenBounds = true;
                Ventana.Title = "Mensaje del Sistema";
                Ventana.VisibleStatusbar = false;
                Ventana.Behaviors = WindowBehaviors.Close;
                this.RadWindowManager1.Windows.Add(Ventana);
                this.RadWindowManager1 = null;
                Ventana = null;
                #endregion
            }
        }

        protected void TxtValorRenglon39_TextChanged(object sender, EventArgs e)
        {
            try
            {
                //Aqui deshabilitamos el control RadWindowManager1 para que no vuelva a mostrar la ventana del Popup
                this.RadWindowManager1.Enabled = false;
                this.RadWindowManager1.EnableAjaxSkinRendering = false;
                this.RadWindowManager1.Visible = false;

                #region CALCULAR RENGLONES DEL 39 AL 44
                double _ValorRenglon30 = Double.Parse(this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                double _ValorRenglon38 = Double.Parse(this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                double _ValorRenglon39 = Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                this.LblValorRenglon40.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorRenglon30)));
                this.LblValorRenglon41.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorRenglon38)));
                double _ValorRenglon40 = Double.Parse(this.LblValorRenglon40.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                double _ValorRenglon41 = Double.Parse(this.LblValorRenglon41.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                double _ValorPagar = (_ValorRenglon39 + _ValorRenglon40 + _ValorRenglon41);
                this.LblValorRenglon42.Text = String.Format(String.Format("{0:###,###,##0}", round(_ValorPagar)));
                double _ValorRenglon42 = Double.Parse(this.LblValorRenglon42.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                double _ValorRenglon43 = Double.Parse(this.TxtValorRenglon43.Text.ToString().Trim().Replace("$ ", "").Replace(".", ""));
                double _TotalPagar = (_ValorRenglon42 + _ValorRenglon43);
                this.LblValorRenglon44.Text = String.Format(String.Format("{0:###,###,##0}", round(_TotalPagar)));
                #endregion
            }
            catch (Exception ex)
            {
                #region MOSTRAR MENSAJE DE USUARIO
                //Mostramos el mensaje porque se produjo un error con la Trx.
                this.RadWindowManager1.ReloadOnShow = true;
                this.RadWindowManager1.DestroyOnClose = true;
                this.RadWindowManager1.Windows.Clear();
                this.RadWindowManager1.Enabled = true;
                this.RadWindowManager1.EnableAjaxSkinRendering = true;
                this.RadWindowManager1.Visible = true;

                RadWindow Ventana = new RadWindow();
                Ventana.Modal = true;
                string _MsgError = "Error al calcular el Total a Pagar. Motivo: " + ex.Message;
                Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgError;
                Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                Ventana.VisibleOnPageLoad = true;
                Ventana.Visible = true;
                Ventana.Height = Unit.Pixel(300);
                Ventana.Width = Unit.Pixel(600);
                Ventana.KeepInScreenBounds = true;
                Ventana.Title = "Mensaje del Sistema";
                Ventana.VisibleStatusbar = false;
                Ventana.Behaviors = WindowBehaviors.Close;
                this.RadWindowManager1.Windows.Add(Ventana);
                this.RadWindowManager1 = null;
                Ventana = null;
                _log.Error(_MsgError);
                #endregion
            }
        }
        #endregion

        #region EVENTOS RADIO BUTTOM DEL FORMULARIO
        protected void RbDeclaracionInicial_CheckedChanged(object sender, EventArgs e)
        {
            //Aqui deshabilitamos el control RadWindowManager1 para que no vuelva a mostrar la ventana del Popup
            this.RadWindowManager1.Enabled = false;
            this.RadWindowManager1.EnableAjaxSkinRendering = false;
            this.RadWindowManager1.Visible = false;

            if (this.RbDeclaracionInicial.Checked == true)
            {
                this.ViewState["OpcionUso"] = "1";
                this.RbSoloPago.Checked = false;
                this.RbCorreccion.Checked = false;
                this.TxtNumCorreccion.Enabled = false;
                this.TxtNumCorreccion.Text = "";
            }
        }

        protected void RbSoloPago_CheckedChanged(object sender, EventArgs e)
        {
            //Aqui deshabilitamos el control RadWindowManager1 para que no vuelva a mostrar la ventana del Popup
            this.RadWindowManager1.Enabled = false;
            this.RadWindowManager1.EnableAjaxSkinRendering = false;
            this.RadWindowManager1.Visible = false;

            if (this.RbSoloPago.Checked == true)
            {
                this.ViewState["OpcionUso"] = "2";
                this.RbDeclaracionInicial.Checked = false;
                this.RbCorreccion.Checked = false;
                this.TxtNumCorreccion.Enabled = false;
                this.TxtNumCorreccion.Text = "";
            }
        }

        protected void RbCorreccion_CheckedChanged(object sender, EventArgs e)
        {
            //Aqui deshabilitamos el control RadWindowManager1 para que no vuelva a mostrar la ventana del Popup
            this.RadWindowManager1.Enabled = false;
            this.RadWindowManager1.EnableAjaxSkinRendering = false;
            this.RadWindowManager1.Visible = false;

            if (this.RbCorreccion.Checked == true)
            {
                this.ViewState["OpcionUso"] = "3";
                this.RbDeclaracionInicial.Checked = false;
                this.RbSoloPago.Checked = false;
                this.TxtNumCorreccion.Enabled = true;
                this.TxtNumCorreccion.Focus();
            }
            else
            {
                this.TxtNumCorreccion.Enabled = false;
                this.TxtNumCorreccion.Text = "";
            }
        }

        protected void RbExtemporaneidad_CheckedChanged(object sender, EventArgs e)
        {
            //Aqui deshabilitamos el control RadWindowManager1 para que no vuelva a mostrar la ventana del Popup
            this.RadWindowManager1.Enabled = false;
            this.RadWindowManager1.EnableAjaxSkinRendering = false;
            this.RadWindowManager1.Visible = false;

            if (this.RbExtemporaneidad.Checked == true)
            {
                this.ViewState["Sancion"] = "1";
                this.RbCorreccion2.Checked = false;
                this.RbInexactitud.Checked = false;
                this.RbOtra.Checked = false;
                this.Validator3.Enabled = false;
                this.TxtDescripcionSancion.Enabled = false;
                this.TxtDescripcionSancion.Text = "";
            }
        }

        protected void RbCorreccion2_CheckedChanged(object sender, EventArgs e)
        {
            //Aqui deshabilitamos el control RadWindowManager1 para que no vuelva a mostrar la ventana del Popup
            this.RadWindowManager1.Enabled = false;
            this.RadWindowManager1.EnableAjaxSkinRendering = false;
            this.RadWindowManager1.Visible = false;

            if (this.RbCorreccion2.Checked == true)
            {
                this.ViewState["Sancion"] = "2";
                this.RbExtemporaneidad.Checked = false;
                this.RbInexactitud.Checked = false;
                this.RbOtra.Checked = false;
                this.Validator3.Enabled = false;
                this.TxtDescripcionSancion.Enabled = false;
                this.TxtDescripcionSancion.Text = "";
            }
        }

        protected void RbInexactitud_CheckedChanged(object sender, EventArgs e)
        {
            //Aqui deshabilitamos el control RadWindowManager1 para que no vuelva a mostrar la ventana del Popup
            this.RadWindowManager1.Enabled = false;
            this.RadWindowManager1.EnableAjaxSkinRendering = false;
            this.RadWindowManager1.Visible = false;

            if (this.RbInexactitud.Checked == true)
            {
                this.ViewState["Sancion"] = "3";
                this.RbExtemporaneidad.Checked = false;
                this.RbCorreccion2.Checked = false;
                this.RbOtra.Checked = false;
                this.Validator3.Enabled = false;
                this.TxtDescripcionSancion.Enabled = false;
                this.TxtDescripcionSancion.Text = "";
            }
        }

        protected void RbOtra_CheckedChanged(object sender, EventArgs e)
        {
            //Aqui deshabilitamos el control RadWindowManager1 para que no vuelva a mostrar la ventana del Popup
            this.RadWindowManager1.Enabled = false;
            this.RadWindowManager1.EnableAjaxSkinRendering = false;
            this.RadWindowManager1.Visible = false;

            if (this.RbOtra.Checked == true)
            {
                this.ViewState["Sancion"] = "4";
                this.RbExtemporaneidad.Checked = false;
                this.RbCorreccion2.Checked = false;
                this.RbInexactitud.Checked = false;
                this.Validator3.Enabled = true;
                this.TxtDescripcionSancion.Enabled = true;
                this.TxtDescripcionSancion.Text = "";
                this.TxtDescripcionSancion.Focus();
            }
        }

        protected void RbFirmaContador_CheckedChanged(object sender, EventArgs e)
        {
            //Aqui deshabilitamos el control RadWindowManager1 para que no vuelva a mostrar la ventana del Popup
            this.RadWindowManager1.Enabled = false;
            this.RadWindowManager1.EnableAjaxSkinRendering = false;
            this.RadWindowManager1.Visible = false;

            if (this.RbFirmaContador.Checked == true)
            {
                this.RbFirmaRevFiscal.Checked = false;
            }
        }

        protected void RbFirmaRevFiscal_CheckedChanged(object sender, EventArgs e)
        {
            //Aqui deshabilitamos el control RadWindowManager1 para que no vuelva a mostrar la ventana del Popup
            this.RadWindowManager1.Enabled = false;
            this.RadWindowManager1.EnableAjaxSkinRendering = false;
            this.RadWindowManager1.Visible = false;

            if (this.RbFirmaRevFiscal.Checked == true)
            {
                this.RbFirmaContador.Checked = false;
            }
        }

        protected void CmbFirmante1_SelectedIndexChanged(object sender, EventArgs e)
        {
            try
            {
                //Aqui deshabilitamos el control RadWindowManager1 para que no vuelva a mostrar la ventana del Popup
                this.RadWindowManager1.Enabled = false;
                this.RadWindowManager1.EnableAjaxSkinRendering = false;
                this.RadWindowManager1.Visible = false;

                int _IdFirmante = Int32.Parse(this.CmbFirmante1.SelectedValue.ToString().Trim());
                if (_IdFirmante > 0)
                {
                    #region AQUI OBTENEMOS LOS DATOS DEL FIRMANTE 1
                    //--
                    DataTable dtDatos = new DataTable();
                    dtDatos = (DataTable)this.ViewState["DtFirmante1"];
                    DataRow[] dataRows = dtDatos.Select("id_firmante = " + _IdFirmante);
                    if (dataRows.Length == 1)
                    {
                        #region AQUI OBTENEMOS LOS DATOS DEL FIRMANTE
                        //this.UpdatePanel1.Update();
                        this.ViewState["IdFirmante1"] = dataRows[0]["id_firmante"].ToString().Trim();
                        this.ViewState["IdRolFirmante1"] = dataRows[0]["id_rol"].ToString().Trim();
                        string _IdTipoIdentificacion = dataRows[0]["idtipo_identificacion"].ToString().Trim();
                        //--AQUI VALIDAMOS EL TIPO DE IDENTIFICACION.
                        if (_IdTipoIdentificacion.Equals("1"))
                        {
                            this.RbCedulaCiudFirm1.Checked = true;
                            this.RbCedulaExtrFirm1.Checked = false;
                        }
                        else if (_IdTipoIdentificacion.Equals("3"))
                        {
                            this.RbCedulaExtrFirm1.Checked = true;
                            this.RbCedulaCiudFirm1.Checked = false;
                        }

                        //this.LblNombreFirmante1.Text = dtDatosFirm1.Rows[0]["nombre_firmante"].ToString().Trim();
                        this.LblNumeroFirm1.Text = "No.: " + dataRows[0]["numero_documento"].ToString().Trim();

                        if (dataRows[0]["imagen_firma"].ToString().Trim().Length > 0)
                        {
                            Byte[] ImagenByte = (Byte[])dataRows[0]["imagen_firma"];
                            this.ViewState["ImagenFirma1"] = ImagenByte;
                            this.ImgFirma1.Visible = true;
                            this.ImgFirma1.DataValue = ImagenByte;
                        }
                        else
                        {
                            this.ViewState["ImagenFirma1"] = null;
                            this.ImgFirma1.Visible = false;
                            this.ImgFirma1.DataValue = null;
                        }
                        #endregion
                    }
                    #endregion
                }
                else
                {
                    #region MOSTRAR MENSAJE DE USUARIO
                    //--DATOS DE LOS FIRMANTES
                    this.ViewState["IdFirmante1"] = "0";
                    this.ViewState["IdRolFirmante1"] = "";
                    this.ViewState["ImagenFirma1"] = null;

                    //Mostramos el mensaje porque se produjo un error con la Trx.
                    this.RadWindowManager1.ReloadOnShow = true;
                    this.RadWindowManager1.DestroyOnClose = true;
                    this.RadWindowManager1.Windows.Clear();
                    this.RadWindowManager1.Enabled = true;
                    this.RadWindowManager1.EnableAjaxSkinRendering = true;
                    this.RadWindowManager1.Visible = true;

                    RadWindow Ventana = new RadWindow();
                    Ventana.Modal = true;
                    string _MsgMensaje = "Señor usuario, debe seleccionar un firmante de la lista !";
                    Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgMensaje;
                    Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                    Ventana.VisibleOnPageLoad = true;
                    Ventana.Visible = true;
                    Ventana.Height = Unit.Pixel(300);
                    Ventana.Width = Unit.Pixel(600);
                    Ventana.KeepInScreenBounds = true;
                    Ventana.Title = "Mensaje del Sistema";
                    Ventana.VisibleStatusbar = false;
                    Ventana.Behaviors = WindowBehaviors.Close;
                    this.RadWindowManager1.Windows.Add(Ventana);
                    this.RadWindowManager1 = null;
                    Ventana = null;
                    #endregion
                }
            }
            catch (Exception ex)
            {
                #region MOSTRAR MENSAJE DE USUARIO
                //--DATOS DE LOS FIRMANTES
                this.ViewState["IdFirmante1"] = "0";
                this.ViewState["IdRolFirmante1"] = "";
                this.ViewState["ImagenFirma1"] = null;

                //Mostramos el mensaje porque se produjo un error con la Trx.
                this.RadWindowManager1.ReloadOnShow = true;
                this.RadWindowManager1.DestroyOnClose = true;
                this.RadWindowManager1.Windows.Clear();
                this.RadWindowManager1.Enabled = true;
                this.RadWindowManager1.EnableAjaxSkinRendering = true;
                this.RadWindowManager1.Visible = true;

                RadWindow Ventana = new RadWindow();
                Ventana.Modal = true;
                string _MsgMensaje = "Señor usuario. Ocurrio un Error al obtener los datos del firmante 1. Motivo: " + ex.ToString();
                Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgMensaje;
                Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                Ventana.VisibleOnPageLoad = true;
                Ventana.Visible = true;
                Ventana.Height = Unit.Pixel(300);
                Ventana.Width = Unit.Pixel(600);
                Ventana.KeepInScreenBounds = true;
                Ventana.Title = "Mensaje del Sistema";
                Ventana.VisibleStatusbar = false;
                Ventana.Behaviors = WindowBehaviors.Close;
                this.RadWindowManager1.Windows.Add(Ventana);
                this.RadWindowManager1 = null;
                Ventana = null;
                #endregion
            }
        }

        protected void CmbFirmante2_SelectedIndexChanged(object sender, EventArgs e)
        {
            try
            {
                //Aqui deshabilitamos el control RadWindowManager1 para que no vuelva a mostrar la ventana del Popup
                this.RadWindowManager1.Enabled = false;
                this.RadWindowManager1.EnableAjaxSkinRendering = false;
                this.RadWindowManager1.Visible = false;

                int _IdFirmante = Int32.Parse(this.CmbFirmante2.SelectedValue.ToString().Trim());
                if (_IdFirmante > 0)
                {
                    #region AQUI OBTENEMOS LOS DATOS DEL FIRMANTE 2
                    //--
                    DataTable dtDatos = new DataTable();
                    dtDatos = (DataTable)this.ViewState["DtFirmante2"];
                    DataRow[] dataRows = dtDatos.Select("id_firmante = " + _IdFirmante);
                    if (dataRows.Length == 1)
                    {
                        #region AQUI OBTENEMOS LOS DATOS DEL FIRMANTE
                        //this.UpdatePanel1.Update();
                        this.ViewState["IdFirmante2"] = dataRows[0]["id_firmante"].ToString().Trim();
                        this.ViewState["IdRolFirmante2"] = dataRows[0]["id_rol"].ToString().Trim();
                        int _IdRol = Int32.Parse(this.ViewState["IdRolFirmante2"].ToString().Trim());
                        //--AQUI VALIDAMOS EL TIPO DE IDENTIFICACION.
                        if (_IdRol == 5 || _IdRol == 10)
                        {
                            this.RbFirmaContador.Checked = false;
                            this.RbFirmaRevFiscal.Checked = true;
                        }
                        else if (_IdRol == 6)
                        {
                            this.RbFirmaContador.Checked = true;
                            this.RbFirmaRevFiscal.Checked = false;
                        }

                        string _IdTipoIdentificacion = dataRows[0]["idtipo_identificacion"].ToString().Trim();
                        //--AQUI VALIDAMOS EL TIPO DE IDENTIFICACION.
                        if (_IdTipoIdentificacion.Equals("1"))
                        {
                            this.RbCedulaExtrFirm2.Checked = false;
                            this.RbCedulaCiudFirm2.Checked = true;
                        }
                        else if (_IdTipoIdentificacion.Equals("3"))
                        {
                            this.RbCedulaExtrFirm2.Checked = true;
                            this.RbCedulaCiudFirm2.Checked = false;
                        }

                        this.LblNumDocFirm2.Text = "No.: " + dataRows[0]["numero_documento"].ToString().Trim();
                        this.LblNumTpFirm2.Text = "No.: " + dataRows[0]["numero_tp"].ToString().Trim();

                        if (dataRows[0]["imagen_firma"].ToString().Trim().Length > 0)
                        {
                            Byte[] ImagenByte = (Byte[])dataRows[0]["imagen_firma"];
                            this.ViewState["ImagenFirma2"] = ImagenByte;
                            this.ImgFirma2.Visible = true;
                            this.ImgFirma2.DataValue = ImagenByte;
                        }
                        else
                        {
                            this.ViewState["ImagenFirma2"] = null;
                            this.ImgFirma2.Visible = false;
                            this.ImgFirma2.DataValue = null;
                        }
                        #endregion
                    }
                    #endregion
                }
                else
                {
                    #region MOSTRAR MENSAJE DE USUARIO
                    //--DATOS DE LOS FIRMANTES
                    this.ViewState["IdFirmante2"] = "0";
                    this.ViewState["IdRolFirmante2"] = "";
                    this.ViewState["ImagenFirma2"] = null;

                    //Mostramos el mensaje porque se produjo un error con la Trx.
                    this.RadWindowManager1.ReloadOnShow = true;
                    this.RadWindowManager1.DestroyOnClose = true;
                    this.RadWindowManager1.Windows.Clear();
                    this.RadWindowManager1.Enabled = true;
                    this.RadWindowManager1.EnableAjaxSkinRendering = true;
                    this.RadWindowManager1.Visible = true;

                    RadWindow Ventana = new RadWindow();
                    Ventana.Modal = true;
                    string _MsgMensaje = "Señor usuario, debe seleccionar un firmante de la lista !";
                    Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgMensaje;
                    Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                    Ventana.VisibleOnPageLoad = true;
                    Ventana.Visible = true;
                    Ventana.Height = Unit.Pixel(300);
                    Ventana.Width = Unit.Pixel(600);
                    Ventana.KeepInScreenBounds = true;
                    Ventana.Title = "Mensaje del Sistema";
                    Ventana.VisibleStatusbar = false;
                    Ventana.Behaviors = WindowBehaviors.Close;
                    this.RadWindowManager1.Windows.Add(Ventana);
                    this.RadWindowManager1 = null;
                    Ventana = null;
                    #endregion
                }
            }
            catch (Exception ex)
            {
                #region MOSTRAR MENSAJE DE USUARIO
                //--DATOS DE LOS FIRMANTES
                this.ViewState["IdFirmante2"] = "0";
                this.ViewState["IdRolFirmante2"] = "";
                this.ViewState["ImagenFirma2"] = null;

                //Mostramos el mensaje porque se produjo un error con la Trx.
                this.RadWindowManager1.ReloadOnShow = true;
                this.RadWindowManager1.DestroyOnClose = true;
                this.RadWindowManager1.Windows.Clear();
                this.RadWindowManager1.Enabled = true;
                this.RadWindowManager1.EnableAjaxSkinRendering = true;
                this.RadWindowManager1.Visible = true;

                RadWindow Ventana = new RadWindow();
                Ventana.Modal = true;
                string _MsgMensaje = "Señor usuario. Ocurrio un Error al obtener los datos del firmante 1. Motivo: " + ex.ToString();
                Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgMensaje;
                Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                Ventana.VisibleOnPageLoad = true;
                Ventana.Visible = true;
                Ventana.Height = Unit.Pixel(300);
                Ventana.Width = Unit.Pixel(600);
                Ventana.KeepInScreenBounds = true;
                Ventana.Title = "Mensaje del Sistema";
                Ventana.VisibleStatusbar = false;
                Ventana.Behaviors = WindowBehaviors.Close;
                this.RadWindowManager1.Windows.Add(Ventana);
                this.RadWindowManager1 = null;
                Ventana = null;
                #endregion
            }
        }
        #endregion

        #region EVENTOS CLICK BUTTOM DEL FORMULARIO
        protected void LnkVerDesagregacion_Click(object sender, EventArgs e)
        {
            try
            {
                #region MOSTRAR FORMULARIO DESAGREGACION
                //--Mandamos abrir el formulario de registro
                this.RadWindowManager1.ReloadOnShow = true;
                this.RadWindowManager1.DestroyOnClose = true;
                this.RadWindowManager1.Windows.Clear();
                this.RadWindowManager1.Enabled = true;
                this.RadWindowManager1.EnableAjaxSkinRendering = true;
                this.RadWindowManager1.Visible = true;
                Ventana.Modal = true;

                string _PathUrl = HttpContext.Current.Request.ServerVariables["PATH_INFO"].ToString().Trim();
                Ventana.NavigateUrl = "/Controles/Modulos/LiquidacionImpuestos/FrmVerDesagregacion.aspx?" + this.ViewState["ParamDesagregacion"].ToString().Trim();
                Ventana.ID = "RadWindow12";
                Ventana.VisibleOnPageLoad = true;
                Ventana.Visible = true;
                Ventana.Height = Unit.Pixel(350);
                Ventana.Width = Unit.Pixel(1000);
                Ventana.KeepInScreenBounds = true;
                Ventana.Title = "Desagregación de cuentas";
                Ventana.VisibleStatusbar = false;
                Ventana.Behaviors = WindowBehaviors.Close;
                this.RadWindowManager1.Windows.Add(Ventana);
                this.RadWindowManager1 = null;
                Ventana = null;
                #endregion
            }
            catch (Exception ex)
            {
                #region MOSTRAR MENSAJE DE USUARIO
                //Mostramos el mensaje porque se produjo un error con la Trx.
                this.RadWindowManager1.ReloadOnShow = true;
                this.RadWindowManager1.DestroyOnClose = true;
                this.RadWindowManager1.Windows.Clear();
                this.RadWindowManager1.Enabled = true;
                this.RadWindowManager1.EnableAjaxSkinRendering = true;
                this.RadWindowManager1.Visible = true;

                RadWindow Ventana = new RadWindow();
                Ventana.Modal = true;
                string _MsgError = "Error al ver la desagregación. Motivo: " + ex.Message;
                Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgError;
                Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                Ventana.VisibleOnPageLoad = true;
                Ventana.Visible = true;
                Ventana.Height = Unit.Pixel(300);
                Ventana.Width = Unit.Pixel(600);
                Ventana.KeepInScreenBounds = true;
                Ventana.Title = "Mensaje del Sistema";
                Ventana.VisibleStatusbar = false;
                Ventana.Behaviors = WindowBehaviors.Close;
                this.RadWindowManager1.Windows.Add(Ventana);
                this.RadWindowManager1 = null;
                Ventana = null;
                _log.Error(_MsgError);
                #endregion
            }
        }

        private void LimpiarForm()
        {
            try
            {
                #region LIMPIAR CONTROLES DEL FORMULARIO
                this.TxtNumCorreccion.Text = "";
                this.LblNombreMunicipio.Text = "";
                this.LblNombreDpto.Text = "";
                this.LblTelefono.Text = "";
                this.LblEmail.Text = "";
                this.LblNumEstablecimientos.Text = "";
                this.LblClasificacion.Text = "";

                //--GRUPO DE CONTROLES SESION BASE GRAVABLE
                this.LblValorRenglon8.Text = "0";
                this.LblValorRenglon9.Text = "0";
                this.LblValorRenglon10.Text = "0";
                this.LblValorRenglon11.Text = "0";
                this.LblValorRenglon12.Text = "0";
                this.LblValorRenglon13.Text = "0";
                this.LblValorRenglon14.Text = "0";
                this.LblValorRenglon15.Text = "0";
                this.LblValorRenglon16.Text = "0";
                this.LblTotalImpuesto.Text = "0";

                //--GRUPO DE CONTROLES SESION ACTIVIDADES ECONOMICAS
                this.LblCodActividad1.Text = "";
                this.LblCodActividad2.Text = "";
                this.LblCodActividad3.Text = "";

                this.LblIngresosActividad1.Text = "0";
                this.LblIngresosActividad2.Text = "0";
                this.LblIngresosActividad3.Text = "0";
                this.LblIngresosActividad4.Text = "0";

                this.LblTarifaActividad1.Text = "";
                this.LblTarifaActividad2.Text = "";
                this.LblTarifaActividad3.Text = "";

                this.LblValorRenglon17.Text = "0";
                this.LblValorRenglon18.Text = "0";
                this.LblValorRenglon19.Text = "0";
                this.LblValorDesagregacion.Text = "0";
                this.LblTotalIngresosGravados.Text = "0";

                //--GRUPO DE CONTROLES SESION LIQUIDACION PRIVADA
                this.LblValorRenglon20.Text = "0";
                this.LblValorRenglon21.Text = "0";
                this.LblValorRenglon22.Text = "0";
                this.LblValorRenglon23.Text = "0";
                this.LblValorRenglon24.Text = "0";
                this.LblValorRenglon25.Text = "0";
                this.LblValorRenglon26.Text = "0";
                this.LblValorRenglon27.Text = "0";
                this.LblValorRenglon28.Text = "0";
                this.LblValorRenglon29.Text = "0";
                this.LblValorRenglon30.Text = "0";
                this.LblValorRenglon32.Text = "0";
                this.LblValorRenglon33.Text = "0";
                this.LblValorRenglon34.Text = "0";
                this.LblValorRenglon35.Text = "0";
                this.LblValorRenglon36.Text = "0";
                this.LblValorRenglon38.Text = "0";
                this.LblValorRenglon41.Text = "0";
                this.TxtValorRenglon39.Text = "0";
                this.TxtDescripcionSancion.Text = "0";
                this.BtnGuardar.Enabled = true;
                this.BtnNuevaLiquidacion.Enabled = false;
                this.TxtCodDane.Focus();
                #endregion
            }
            catch (Exception ex)
            {
                #region MOSTRAR MENSAJE DE USUARIO
                //Mostramos el mensaje porque se produjo un error con la Trx.
                this.RadWindowManager1.ReloadOnShow = true;
                this.RadWindowManager1.DestroyOnClose = true;
                this.RadWindowManager1.Windows.Clear();
                this.RadWindowManager1.Enabled = true;
                this.RadWindowManager1.EnableAjaxSkinRendering = true;
                this.RadWindowManager1.Visible = true;

                RadWindow Ventana = new RadWindow();
                Ventana.Modal = true;
                string _MsgMensaje = "Señor usuario. Ocurrio un error. Motivo: " + ex.ToString();
                Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgMensaje;
                Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                Ventana.VisibleOnPageLoad = true;
                Ventana.Visible = true;
                Ventana.Height = Unit.Pixel(300);
                Ventana.Width = Unit.Pixel(600);
                Ventana.KeepInScreenBounds = true;
                Ventana.Title = "Mensaje del Sistema";
                Ventana.VisibleStatusbar = false;
                Ventana.Behaviors = WindowBehaviors.Close;
                this.RadWindowManager1.Windows.Add(Ventana);
                this.RadWindowManager1 = null;
                Ventana = null;
                _log.Error(_MsgMensaje);
                #endregion
            }
        }

        protected void BtnVerDetalleCuentas_Click(object sender, EventArgs e)
        {
            try
            {
                #region MOSTRAR FORMULARIO DESAGREGACION
                //--Mandamos abrir el formulario de registro
                this.RadWindowManager1.ReloadOnShow = true;
                this.RadWindowManager1.DestroyOnClose = true;
                this.RadWindowManager1.Windows.Clear();
                this.RadWindowManager1.Enabled = true;
                this.RadWindowManager1.EnableAjaxSkinRendering = true;
                this.RadWindowManager1.Visible = true;
                Ventana.Modal = true;

                string _PathUrl = HttpContext.Current.Request.ServerVariables["PATH_INFO"].ToString().Trim();
                Ventana.NavigateUrl = "/Controles/Modulos/LiquidacionImpuestos/FrmVerDetalleCuentas.aspx?IdCliente=" + this.Session["IdCliente"].ToString().Trim() +
                    "&IdClienteEstablecimiento=" + this.ViewState["IdClienteEstablecimiento"].ToString().Trim() + "&IdFormImpuesto=" + this.ViewState["IdFormImpuesto"].ToString().Trim() +
                    "&AnioGravable=" + this.TxtAnioGravable.Text.ToString().Trim();
                Ventana.ID = "RadWindow12";
                Ventana.VisibleOnPageLoad = true;
                Ventana.Visible = true;
                Ventana.Height = Unit.Pixel(500);
                Ventana.Width = Unit.Pixel(1150);
                Ventana.KeepInScreenBounds = true;
                Ventana.Title = "Ver cuentas liquidación";
                Ventana.VisibleStatusbar = false;
                Ventana.Behaviors = WindowBehaviors.Close;
                this.RadWindowManager1.Windows.Add(Ventana);
                this.RadWindowManager1 = null;
                Ventana = null;
                #endregion
            }
            catch (Exception ex)
            {
                #region MOSTRAR MENSAJE DE USUARIO
                //Mostramos el mensaje porque se produjo un error con la Trx.
                this.RadWindowManager1.ReloadOnShow = true;
                this.RadWindowManager1.DestroyOnClose = true;
                this.RadWindowManager1.Windows.Clear();
                this.RadWindowManager1.Enabled = true;
                this.RadWindowManager1.EnableAjaxSkinRendering = true;
                this.RadWindowManager1.Visible = true;

                RadWindow Ventana = new RadWindow();
                Ventana.Modal = true;
                string _MsgMensaje = "Señor usuario. Ocurrio un error. Motivo: " + ex.ToString();
                Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgMensaje;
                Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                Ventana.VisibleOnPageLoad = true;
                Ventana.Visible = true;
                Ventana.Height = Unit.Pixel(300);
                Ventana.Width = Unit.Pixel(600);
                Ventana.KeepInScreenBounds = true;
                Ventana.Title = "Mensaje del Sistema";
                Ventana.VisibleStatusbar = false;
                Ventana.Behaviors = WindowBehaviors.Close;
                this.RadWindowManager1.Windows.Add(Ventana);
                this.RadWindowManager1 = null;
                Ventana = null;
                _log.Error(_MsgMensaje);
                #endregion
            }
        }

        protected void BtnGuardar_Click(object sender, EventArgs e)
        {
            try
            {
                //Aqui deshabilitamos el control RadWindowManager1 para que no vuelva a mostrar la ventana del Popup
                this.RadWindowManager1.Enabled = false;
                this.RadWindowManager1.EnableAjaxSkinRendering = false;
                this.RadWindowManager1.Visible = false;
                //--VALIDAR ID DE FIRMANTES
                if (Int32.Parse(this.ViewState["IdFirmante1"].ToString().Trim()) > 0 ||
                    Int32.Parse(this.ViewState["IdFirmante2"].ToString().Trim()) > 0)
                {
                    #region DEFINIR VALORES A CAMPOS DEL OBJETO DE CLASE
                    ObjLiqImpuesto.IdLiquidImpuesto = this.ViewState["IdLiquidImpuesto"] != null ? this.ViewState["IdLiquidImpuesto"].ToString().Trim() : null;
                    ObjLiqImpuesto.IdMunicipio = this.ViewState["IdMunicipioOficina"].ToString().Trim();
                    ObjLiqImpuesto.IdFormularioImpuesto = Int32.Parse(this.ViewState["IdFormImpuesto"].ToString().Trim());
                    ObjLiqImpuesto.IdCliente = this.Session["IdCliente"] != null ? this.Session["IdCliente"].ToString().Trim() : null;
                    ObjLiqImpuesto.IdClienteEstablecimiento = this.ViewState["IdClienteEstablecimiento"].ToString().Trim();
                    ObjLiqImpuesto.CodigoDane = this.TxtCodDane.Text.ToString().Trim();
                    ObjLiqImpuesto.AnioGravable = Int32.Parse(this.TxtAnioGravable.Text.ToString().Trim());
                    string _FechaMaxPresentacion = this.CmbFecha1.SelectedValue.ToString().Trim() + "-" + this.CmbFecha2.SelectedValue.ToString().Trim() + "-" + this.CmbFecha3.SelectedValue.ToString().Trim();
                    ObjLiqImpuesto.FechaMaxPresentacion = _FechaMaxPresentacion;
                    //string[] _FechaLiquidacion = this.LblFechaActual.Text.ToString().Trim();
                    ObjLiqImpuesto.FechaLiquidacion = this.LblFechaActual.Text.ToString().Trim();
                    ObjLiqImpuesto.PeriodoImpuesto = this.ViewState["IdPeriodicidad"].ToString().Trim();
                    ObjLiqImpuesto.PeriodicidadImpuesto = this.ViewState["PeriodicidadImpuesto"].ToString().Trim();
                    ObjLiqImpuesto.OpcionUso = this.ViewState["OpcionUso"].ToString().Trim();
                    ObjLiqImpuesto.NumDeclaracion = this.TxtNumCorreccion.Text.ToString().Trim().Length > 0 ? this.TxtNumCorreccion.Text.ToString().Trim() : "NA";
                    //--VALORES
                    ObjLiqImpuesto.ValorRenglon8 = this.LblValorRenglon8.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorRenglon9 = this.LblValorRenglon9.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorRenglon10 = this.LblValorRenglon10.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorRenglon11 = this.LblValorRenglon11.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorRenglon12 = this.LblValorRenglon12.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorRenglon13 = this.LblValorRenglon13.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorRenglon14 = this.LblValorRenglon14.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorRenglon15 = this.LblValorRenglon15.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorRenglon16 = this.LblValorRenglon16.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorActividad1 = this.LblValorRenglon17.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorActividad2 = this.LblValorRenglon18.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorActividad3 = this.LblValorRenglon19.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorOtrasAct = this.LblValorDesagregacion.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorRenglon17 = this.LblTotalImpuesto.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorRenglon19 = this.LblTotalImpuestosLey.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorRenglon20 = this.LblValorRenglon20.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorRenglon21 = this.LblValorRenglon21.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorRenglon22 = this.LblValorRenglon22.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorRenglon23 = this.LblValorRenglon23.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorRenglon24 = this.LblValorRenglon24.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorRenglon25 = this.LblValorRenglon25.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorRenglon26 = this.LblValorRenglon26.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorRenglon27 = this.LblValorRenglon27.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorRenglon28 = this.LblValorRenglon28.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorRenglon29 = this.LblValorRenglon29.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorRenglon30 = this.LblValorRenglon30.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorRenglon31 = this.LblValorRenglon31.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorRenglon32 = this.LblValorRenglon32.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorRenglon33 = this.LblValorRenglon33.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorRenglon34 = this.LblValorRenglon34.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorRenglon35 = this.LblValorRenglon35.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorRenglon36 = this.LblValorRenglon36.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorRenglon37 = this.LblValorRenglon37.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorRenglon38 = this.LblValorRenglon38.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    //---
                    ObjLiqImpuesto.Sanciones = this.ViewState["Sancion"].ToString().Trim().Length > 0 ? this.ViewState["Sancion"].ToString().Trim() : null;
                    ObjLiqImpuesto.DescripcionSancionOtro = this.TxtDescripcionSancion.Text.ToString().Trim().Length > 0 ? this.TxtDescripcionSancion.Text.ToString().Trim().ToUpper() : "";
                    ObjLiqImpuesto.ValorSancion = this.TxtValorRenglon39.Text.ToString().Trim().Length > 0 ? this.TxtValorRenglon39.Text.ToString().Trim().ToUpper() : "0";
                    ObjLiqImpuesto.ValorRenglon40 = this.LblValorRenglon40.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorRenglon41 = this.LblValorRenglon41.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.ValorRenglon42 = this.LblValorRenglon42.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.InteresMora = this.TxtValorRenglon43.Text.ToString().Trim().Length > 0 ? this.TxtValorRenglon43.Text.ToString().Trim().ToUpper() : "0";
                    ObjLiqImpuesto.ValorRenglon44 = this.LblValorRenglon44.Text.ToString().Trim().Replace("$ ", "").Replace(".", "").Replace(",", "");
                    ObjLiqImpuesto.IdFirmante1 = this.ViewState["IdFirmante1"].ToString().Trim();
                    ObjLiqImpuesto.IdFirmante2 = this.ViewState["IdFirmante2"].ToString().Trim();
                    ObjLiqImpuesto.IdEstado = 3;    //--ID ESTADO DEFINITIVO
                    ObjLiqImpuesto.TipoEjecucion = "UNO_A_UNO";
                    ObjLiqImpuesto.IdUsuario = this.Session["IdUsuario"].ToString().Trim();
                    ObjLiqImpuesto.TipoProceso = this.ViewState["IdLiquidImpuesto"] != null ? 2 : 1;    //--TIPO DE PROCESO 1. REALIZAR INSERT, 2. REALIZAR UPDATE
                    ObjLiqImpuesto.MotorBaseDatos = this.Session["MotorBaseDatos"].ToString().Trim();

                    //--AQUI SERIALIZAMOS EL OBJETO CLASE
                    JavaScriptSerializer js = new JavaScriptSerializer();
                    string jsonRequest = js.Serialize(ObjLiqImpuesto);
                    #endregion

                    int _IdRegistro = 0;
                    string _MsgError = "";
                    if (ObjLiqImpuesto.AddUpLiquidacionImpuestoAutoIca(ref _IdRegistro, ref _MsgError))
                    {
                        #region REGISTRO DE LOGS DE AUDITORIA
                        //--AQUI REGISTRAMOS EN LOS LOGS DE AUDITORIA
                        ObjAuditoria.MotorBaseDatos = this.Session["MotorBaseDatos"].ToString().Trim();
                        ObjAuditoria.IdEmpresa = Convert.ToInt32(this.Session["IdEmpresa"].ToString().Trim());
                        ObjAuditoria.IdUsuario = Convert.ToInt32(this.Session["IdUsuario"].ToString().Trim());
                        ObjAuditoria.ModuloApp = "LIQUIDACION_DEFINITIVO_AUTOICA";
                        if (ObjLiqImpuesto.TipoProceso == 1)
                        {
                            ObjAuditoria.IdTipoEvento = 2;
                        }
                        else
                        {
                            ObjAuditoria.IdTipoEvento = 3;
                        }
                        ObjAuditoria.UrlVisitada = Request.ServerVariables["PATH_INFO"].ToString().Trim();
                        ObjAuditoria.DescripcionEvento = jsonRequest;
                        ObjAuditoria.IPCliente = ObjUtils.GetIPAddress().ToString().Trim();
                        ObjAuditoria.TipoProceso = 1;

                        //'Agregar Auditoria del sistema
                        string _MsgErrorLogs = "";
                        if (!ObjAuditoria.AddAuditoria(ref _MsgErrorLogs))
                        {
                            _log.Error(_MsgErrorLogs);
                        }
                        #endregion

                        this.ViewState["IdRegistro"] = _IdRegistro;
                        this.BtnGuardar.Enabled = false;
                        this.BtnNuevaLiquidacion.Enabled = true;

                        //--AQUI MANDAMOS A GENERAR EL ARCHIVO PDF
                        if (this.GenerarArchivoPdf(_IdRegistro))
                        {
                            #region MOSTRAR EL IMPUESTO EN PDF Y PARA IMPRIMIR
                            //--AQUI HABILITAMOS EL FORM DEL IMPUESTO
                            this.RadWindowManager1.ReloadOnShow = true;
                            this.RadWindowManager1.DestroyOnClose = true;
                            this.RadWindowManager1.Windows.Clear();
                            this.RadWindowManager1.Enabled = true;
                            this.RadWindowManager1.EnableAjaxSkinRendering = true;
                            this.RadWindowManager1.Visible = true;
                            Ventana.Modal = true;

                            string _TipoLiquidacion = "DEFINITIVO";
                            string _TipoImpuesto = "AUTORETENCION_ICA\\UNO_A_UNO";
                            string _CodigoPeriodicidad = this.ViewState["PeriodicidadImpuesto"].ToString().Trim().PadLeft(2, '0');
                            string PathUrl = HttpContext.Current.Request.ServerVariables["PATH_INFO"].ToString().Trim();
                            Ventana.NavigateUrl = "/Controles/Modulos/LiquidacionImpuestos/FrmVerImpuesto.aspx?IdMunicipio=" + this.ViewState["IdMunicipioOficina"].ToString().Trim() +
                                "&IdFormImpuesto=" + this.ViewState["IdFormImpuesto"].ToString().Trim() + "&CodigoDane=" + ObjLiqImpuesto.CodigoDane +
                                "&CodigoPeriodicidad=" + _CodigoPeriodicidad + "&TipoImpuesto=" + _TipoImpuesto + "&TipoLiquidacion=" + _TipoLiquidacion;
                            Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                            Ventana.VisibleOnPageLoad = true;
                            Ventana.Visible = true;
                            Ventana.Height = Unit.Pixel(650);
                            Ventana.Width = Unit.Pixel(1100);
                            Ventana.KeepInScreenBounds = true;
                            Ventana.Title = "Visualizar Impuesto";
                            Ventana.VisibleStatusbar = false;
                            Ventana.Behaviors = WindowBehaviors.Close;
                            this.RadWindowManager1.Windows.Add(Ventana);
                            this.RadWindowManager1 = null;
                            Ventana = null;
                            #endregion
                        }
                        else
                        {
                            #region MOSTRAR MENSAJE DE USUARIO
                            //Mostramos el mensaje porque se produjo un error con la Trx.
                            this.RadWindowManager1.ReloadOnShow = true;
                            this.RadWindowManager1.DestroyOnClose = true;
                            this.RadWindowManager1.Windows.Clear();
                            this.RadWindowManager1.Enabled = true;
                            this.RadWindowManager1.EnableAjaxSkinRendering = true;
                            this.RadWindowManager1.Visible = true;

                            RadWindow Ventana = new RadWindow();
                            Ventana.Modal = true;
                            _MsgError = "Señor usuario, Los datos del formulario fueron guardados de forma exitosa, pero ocurrio un error al generar el PDF. Por favor contacte a soporte técnico !";
                            Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgError;
                            Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                            Ventana.VisibleOnPageLoad = true;
                            Ventana.Visible = true;
                            Ventana.Height = Unit.Pixel(300);
                            Ventana.Width = Unit.Pixel(600);
                            Ventana.KeepInScreenBounds = true;
                            Ventana.Title = "Mensaje del Sistema";
                            Ventana.VisibleStatusbar = false;
                            Ventana.Behaviors = WindowBehaviors.Close;
                            this.RadWindowManager1.Windows.Add(Ventana);
                            this.RadWindowManager1 = null;
                            Ventana = null;
                            #endregion
                        }
                    }
                    else
                    {
                        #region MOSTRAR MENSAJE DE USUARIO
                        //Mostramos el mensaje porque se produjo un error con la Trx.
                        this.RadWindowManager1.ReloadOnShow = true;
                        this.RadWindowManager1.DestroyOnClose = true;
                        this.RadWindowManager1.Windows.Clear();
                        this.RadWindowManager1.Enabled = true;
                        this.RadWindowManager1.EnableAjaxSkinRendering = true;
                        this.RadWindowManager1.Visible = true;

                        RadWindow Ventana = new RadWindow();
                        Ventana.Modal = true;
                        Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgError;
                        Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                        Ventana.VisibleOnPageLoad = true;
                        Ventana.Visible = true;
                        Ventana.Height = Unit.Pixel(300);
                        Ventana.Width = Unit.Pixel(600);
                        Ventana.KeepInScreenBounds = true;
                        Ventana.Title = "Mensaje del Sistema";
                        Ventana.VisibleStatusbar = false;
                        Ventana.Behaviors = WindowBehaviors.Close;
                        this.RadWindowManager1.Windows.Add(Ventana);
                        this.RadWindowManager1 = null;
                        Ventana = null;
                        #endregion
                    }
                }
                else
                {
                    #region MOSTRAR MENSAJE DE USUARIO
                    //Mostramos el mensaje porque se produjo un error con la Trx.
                    this.RadWindowManager1.ReloadOnShow = true;
                    this.RadWindowManager1.DestroyOnClose = true;
                    this.RadWindowManager1.Windows.Clear();
                    this.RadWindowManager1.Enabled = true;
                    this.RadWindowManager1.EnableAjaxSkinRendering = true;
                    this.RadWindowManager1.Visible = true;

                    RadWindow Ventana = new RadWindow();
                    Ventana.Modal = true;
                    string _MsgError = "Señor usuario, debe seleccionar el firmante 1 y 2 de la lista para guardar el definitivo";
                    Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgError;
                    Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                    Ventana.VisibleOnPageLoad = true;
                    Ventana.Visible = true;
                    Ventana.Height = Unit.Pixel(300);
                    Ventana.Width = Unit.Pixel(600);
                    Ventana.KeepInScreenBounds = true;
                    Ventana.Title = "Mensaje del Sistema";
                    Ventana.VisibleStatusbar = false;
                    Ventana.Behaviors = WindowBehaviors.Close;
                    this.RadWindowManager1.Windows.Add(Ventana);
                    this.RadWindowManager1 = null;
                    Ventana = null;
                    #endregion
                }
            }
            catch (Exception ex)
            {
                #region MOSTRAR MENSAJE DE USUARIO
                //Mostramos el mensaje porque se produjo un error con la Trx.
                this.RadWindowManager1.ReloadOnShow = true;
                this.RadWindowManager1.DestroyOnClose = true;
                this.RadWindowManager1.Windows.Clear();
                this.RadWindowManager1.Enabled = true;
                this.RadWindowManager1.EnableAjaxSkinRendering = true;
                this.RadWindowManager1.Visible = true;

                RadWindow Ventana = new RadWindow();
                Ventana.Modal = true;
                string _MsgMensaje = "Señor usuario. Ocurrio un Error al guardar los datos del formulario. Motivo: " + ex.ToString();
                Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgMensaje;
                Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                Ventana.VisibleOnPageLoad = true;
                Ventana.Visible = true;
                Ventana.Height = Unit.Pixel(300);
                Ventana.Width = Unit.Pixel(600);
                Ventana.KeepInScreenBounds = true;
                Ventana.Title = "Mensaje del Sistema";
                Ventana.VisibleStatusbar = false;
                Ventana.Behaviors = WindowBehaviors.Close;
                this.RadWindowManager1.Windows.Add(Ventana);
                this.RadWindowManager1 = null;
                Ventana = null;
                _log.Error(_MsgMensaje);
                #endregion
            }
        }

        protected void BtnVerFormulario_Click(object sender, EventArgs e)
        {
            try
            {
                #region MOSTRAR EL IMPUESTO EN PDF Y PARA IMPRIMIR
                //--AQUI HABILITAMOS EL FORM DEL IMPUESTO
                this.RadWindowManager1.ReloadOnShow = true;
                this.RadWindowManager1.DestroyOnClose = true;
                this.RadWindowManager1.Windows.Clear();
                this.RadWindowManager1.Enabled = true;
                this.RadWindowManager1.EnableAjaxSkinRendering = true;
                this.RadWindowManager1.Visible = true;
                Ventana.Modal = true;

                string _TipoFormulario = "DEFINITIVO";
                string PathUrl = HttpContext.Current.Request.ServerVariables["PATH_INFO"].ToString().Trim();
                Ventana.NavigateUrl = "/Controles/Modulos/LiquidacionImpuestos/FrmVerImpuesto.aspx?IdRegistro=" + this.ViewState["IdLiquidImpuesto"].ToString().Trim() + "&TipoFormulario=" + _TipoFormulario;
                Ventana.VisibleOnPageLoad = true;
                Ventana.Visible = true;
                Ventana.Height = Unit.Pixel(650);
                Ventana.Width = Unit.Pixel(1100);
                Ventana.KeepInScreenBounds = true;
                Ventana.Title = "Visualizar Impuesto";
                Ventana.VisibleStatusbar = false;
                Ventana.Behaviors = WindowBehaviors.Close;
                this.RadWindowManager1.Windows.Add(Ventana);
                this.RadWindowManager1 = null;
                Ventana = null;
                #endregion
            }
            catch (Exception ex)
            {
                #region MOSTRAR MENSAJE DE USUARIO
                //Mostramos el mensaje porque se produjo un error con la Trx.
                this.RadWindowManager1.ReloadOnShow = true;
                this.RadWindowManager1.DestroyOnClose = true;
                this.RadWindowManager1.Windows.Clear();
                this.RadWindowManager1.Enabled = true;
                this.RadWindowManager1.EnableAjaxSkinRendering = true;
                this.RadWindowManager1.Visible = true;

                RadWindow Ventana = new RadWindow();
                Ventana.Modal = true;
                string _MsgMensaje = "Error al visualizar el formulario. Motivo: " + ex.ToString();
                Ventana.NavigateUrl = "/Controles/General/FrmMensaje.aspx?strMensaje=" + _MsgMensaje;
                Ventana.ID = "RadWindow2" + ObjUtils.GetRandom();
                Ventana.VisibleOnPageLoad = true;
                Ventana.Visible = true;
                Ventana.Height = Unit.Pixel(300);
                Ventana.Width = Unit.Pixel(600);
                Ventana.KeepInScreenBounds = true;
                Ventana.Title = "Mensaje del Sistema";
                Ventana.VisibleStatusbar = false;
                Ventana.Behaviors = WindowBehaviors.Close;
                this.RadWindowManager1.Windows.Add(Ventana);
                this.RadWindowManager1 = null;
                Ventana = null;
                #endregion
            }
        }

        protected void BtnNuevaLiquidacion_Click(object sender, EventArgs e)
        {
            this.LimpiarForm();
        }

        private bool GenerarArchivoPdf(int _IdRegistroLiq)
        {
            bool _Result = false;
            try
            {
                #region AQUI CREAMOS EL DIRECTORIO PARA GUARDAR LOS ARCHIVOS
                string _RutaMapPath = HttpContext.Current.Server.MapPath("\\");
                string _RutaVirtual = HttpContext.Current.Server.MapPath("/" + this.Session["DirectorioVirtual"].ToString().Trim());
                string _PathDirectorio = _RutaVirtual + "\\" + this.Session["DirectorioArchivos"].ToString().Trim() + "\\" + DateTime.Now.ToString("yyyy") + "\\" + "AUTORETENCION_ICA\\UNO_A_UNO\\DEFINITIVO" + "\\" + "CLIENTE_" + this.Session["IdCliente"].ToString().Trim();

                if (!Directory.Exists(_PathDirectorio))
                {
                    Directory.CreateDirectory(_PathDirectorio);
                }

                // Indicamos donde vamos a guardar el documento
                //string _PathArchivoPdf = _PathDirectorio + "\\FORMULARIO_" + this.ViewState["CodigoDane"].ToString().Trim() + "_" + _IdRegistroLiq + ".pdf";
                string _CodigoPeriodicidad = this.ViewState["PeriodicidadImpuesto"].ToString().Trim().PadLeft(2, '0');
                string _PathArchivoPdf = _PathDirectorio + "\\FORMULARIO_" + this.ViewState["CodigoDane"].ToString().Trim() + "_" +
                    this.ViewState["IdMunicipioOficina"].ToString().Trim() + "_" + _CodigoPeriodicidad + ".pdf";

                //--AQUI VALIDAMOS SI EXISTE EL ARCHIVO PARA BORRARLO.
                if (File.Exists(_PathArchivoPdf))
                {
                    File.Delete(_PathArchivoPdf);
                }

                // Creamos el documento con el tamaño de página tradicional
                Document doc = new Document(PageSize.LETTER);
                FileStream fileStream = new FileStream(_PathArchivoPdf, System.IO.FileMode.OpenOrCreate);
                PdfWriter writer = PdfWriter.GetInstance(doc, fileStream);
                doc.SetPageSize(PageSize.LETTER);
                //doc.SetMargins(36f, 36f, 36f, 36f); // 0.5 inch margins
                doc.Open();

                //--AQUI COLOCAMOS LA MARCA DE AGUA EN EL DOCUMENTO
                //PdfContentByte cb = writer.DirectContentUnder;
                //iTextSharp.text.Image image = iTextSharp.text.Image.GetInstance(_RutaMapPath + "Imagenes\\General\\img_borrador.png");

                //float posicionX = (writer.PageSize.Top / 2) - (image.Width / 2);
                //float posicionY = (writer.PageSize.Right / 2) - (image.Height / 2);
                //image.SetAbsolutePosition(posicionX, posicionY);
                //PdfGState state = new PdfGState();
                //state.FillOpacity = 0.2f;
                //cb.SetGState(state);
                //cb.AddImage(image);
                #endregion

                #region DEFINIR TITULO DEL FORMULARIO
                PdfPTable tblTitulo = new PdfPTable(4);
                float _AnchoTabla = 560f;
                tblTitulo.TotalWidth = _AnchoTabla;
                tblTitulo.LockedWidth = true;
                tblTitulo.WidthPercentage = 100;

                Font _FontEncabezado1 = new Font(Font.FontFamily.HELVETICA, 9, Font.BOLD, BaseColor.BLACK);
                //--> 1. Titulo: del Formulario
                Paragraph LblTitulo = new Paragraph("\nFORMULARIO DE AUTORETENCIÓNES Y RETENCIÓN DE INDUSTRIA Y COMERCIO\n\n", _FontEncabezado1);
                PdfPCell clTitulo = new PdfPCell(new Phrase(LblTitulo));
                clTitulo.Colspan = 4;
                //header.BorderWidth = 1;
                clTitulo.HorizontalAlignment = Element.ALIGN_CENTER;
                tblTitulo.AddCell(clTitulo);

                //--AQUI ADICIONAMOS LA TABLA AL DOCUMENTO
                doc.Add(tblTitulo);
                #endregion

                #region DEFINICION DE VALORES DE LA SESION 1 DEL FORMULARIO
                PdfPTable TblSeccionMun = new PdfPTable(3);
                TblSeccionMun.TotalWidth = _AnchoTabla;
                TblSeccionMun.LockedWidth = true;
                TblSeccionMun.WidthPercentage = 100;
                /// Left aLign
                TblSeccionMun.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionMun.SpacingAfter = 0;
                float[] TblWidths0 = new float[3];
                TblWidths0[0] = 250f;
                TblWidths0[1] = 250f;
                TblWidths0[2] = -210f;
                // Set the column widths on table creation. Unlike HTML cells cannot be sized.
                TblSeccionMun.SetWidths(TblWidths0);
                Font _standardFont1 = new Font(Font.FontFamily.TIMES_ROMAN, 6, Font.NORMAL, BaseColor.BLACK);

                //--AQUI DEFINIMOS LOS DATOS DEL ENCABEZADO 1.
                string _TituloMunicipio = "MUNICIPIO O DISTRITO:".PadRight(150, ' ') + this.LblNombreMunicipio.Text.ToString().Trim().ToUpper();
                PdfPCell clTituloMun = new PdfPCell(new Phrase(_TituloMunicipio, _standardFont1));
                clTituloMun.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionMun.AddCell(clTituloMun);

                string _FechaMaxPres = this.CmbFecha1.SelectedValue.ToString().Trim() + "/" + this.CmbFecha2.SelectedValue.ToString().Trim() + "/" + this.CmbFecha3.SelectedValue.ToString().Trim();
                string _FechaMaxPresentacion = "Fecha máxima presentación\n" + _FechaMaxPres;
                PdfPCell clFechaMax = new PdfPCell(new Phrase(_FechaMaxPresentacion, _standardFont1));
                clFechaMax.HorizontalAlignment = Element.ALIGN_CENTER;
                clFechaMax.Rowspan = 2;
                clFechaMax.Colspan = 2;
                TblSeccionMun.AddCell(clFechaMax);

                //--AQUI DEFINIMOS LOS DATOS DEL ENCABEZADO 2.
                string _TituloDpto = "DEPARTAMENTO:".PadRight(140, ' ') + this.LblNombreDpto.Text.ToString().Trim().ToUpper();
                PdfPCell clTituloDpto = new PdfPCell(new Phrase(_TituloDpto, _standardFont1));
                clTituloDpto.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionMun.AddCell(clTituloDpto);

                //--AQUI ADICIONAMOS LA TABLA AL DOCUMENTO
                doc.Add(TblSeccionMun);
                #endregion

                #region SESION DEL AÑO GRAVABLE Y RECUADRO DE MESES
                int _NumColumnas = 4;
                PdfPTable TblSeccionAnio = new PdfPTable(_NumColumnas);
                TblSeccionAnio.TotalWidth = _AnchoTabla;
                TblSeccionAnio.LockedWidth = true;
                TblSeccionAnio.WidthPercentage = 100;
                ///-Left aLign
                TblSeccionAnio.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionAnio.SpacingAfter = 0;
                float[] TblWidths01 = new float[_NumColumnas];
                TblWidths01[0] = 30f;
                TblWidths01[1] = 50f;
                TblWidths01[2] = 10f;
                TblWidths01[3] = 10f;
                //-Set the column widths on table creation. Unlike HTML cells cannot be sized.
                TblSeccionAnio.SetWidths(TblWidths01);
                Font _FontAnio = new Font(Font.FontFamily.TIMES_ROMAN, 6, Font.NORMAL, BaseColor.BLACK);
                Font _FontPeriodicidad = new Font(Font.FontFamily.TIMES_ROMAN, 8, Font.NORMAL, BaseColor.BLACK);
                Font _FontPeriodicidadMensual = new Font(Font.FontFamily.TIMES_ROMAN, 7, Font.NORMAL, BaseColor.BLACK);

                //--AQUI DEFINIMOS LOS DATOS DEL ENCABEZADO 1.
                string _AnioGravable = "AÑO GRAVABLE:".PadRight(20, ' ') + this.TxtAnioGravable.Text.ToString().Trim();
                PdfPCell clAnioGravable = new PdfPCell(new Phrase(_AnioGravable, _FontAnio));
                clAnioGravable.PaddingTop = 9f;
                //clTituloAnio.VerticalAlignment = Element.ALIGN_CENTER;
                clAnioGravable.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionAnio.AddCell(clAnioGravable);

                #region AQUI OBTENEMOS LA PERIODICIDAD DE PAGO
                //--VALIDAR LA PERIODICIDAD DE PAGO
                int _IdPeriodicidad = Int32.Parse(this.ViewState["IdPeriodicidad"].ToString().Trim());
                int _PeriodicidadImpuesto = Int32.Parse(this.ViewState["PeriodicidadImpuesto"].ToString().Trim());
                string _Periodicidad = "";
                PdfPCell clPeriodicidad = null;
                //--
                switch (_IdPeriodicidad)
                {
                    case 1:
                        #region AQUI OBTENEMOS PERIODICIDAD MENSUAL
                        _Periodicidad = "PERIODICIDAD DE PAGO ( MENSUAL )";

                        switch (_PeriodicidadImpuesto)
                        {
                            case 1:
                                _Periodicidad = _Periodicidad + "\n" + "Enero [x] Febrero [ ] Marzo [ ] Abril [ ] Mayo [ ] Junio [ ] Julio [ ] Agosto [ ] Septiembre [ ] Octubre [ ] Noviembre [ ] Diciembre [ ]";
                                break;
                            case 2:
                                _Periodicidad = _Periodicidad + "\n" + "Enero [ ] Febrero [x] Marzo [ ] Abril [ ] Mayo [ ] Junio [ ] Julio [ ] Agosto [ ] Septiembre [ ] Octubre [ ] Noviembre [ ] Diciembre [ ]";
                                break;
                            case 3:
                                _Periodicidad = _Periodicidad + "\n" + "Enero [ ] Febrero [ ] Marzo [x] Abril [ ] Mayo [ ] Junio [ ] Julio [ ] Agosto [ ] Septiembre [ ] Octubre [ ] Noviembre [ ] Diciembre [ ]";
                                break;
                            case 4:
                                _Periodicidad = _Periodicidad + "\n" + "Enero [ ] Febrero [ ] Marzo [ ] Abril [x] Mayo [ ] Junio [ ] Julio [ ] Agosto [ ] Septiembre [ ] Octubre [ ] Noviembre [ ] Diciembre [ ]";
                                break;
                            case 5:
                                _Periodicidad = _Periodicidad + "\n" + "Enero [ ] Febrero [ ] Marzo [ ] Abril [ ] Mayo [x] Junio [ ] Julio [ ] Agosto [ ] Septiembre [ ] Octubre [ ] Noviembre [ ] Diciembre [ ]";
                                break;
                            case 6:
                                _Periodicidad = _Periodicidad + "\n" + "Enero [ ] Febrero [ ] Marzo [ ] Abril [ ] Mayo [ ] Junio [x] Julio [ ] Agosto [ ] Septiembre [ ] Octubre [ ] Noviembre [ ] Diciembre [ ]";
                                break;
                            case 7:
                                _Periodicidad = _Periodicidad + "\n" + "Enero [ ] Febrero [ ] Marzo [ ] Abril [ ] Mayo [ ] Junio [ ] Julio [x] Agosto [ ] Septiembre [ ] Octubre [ ] Noviembre [ ] Diciembre [ ]";
                                break;
                            case 8:
                                _Periodicidad = _Periodicidad + "\n" + "Enero [ ] Febrero [ ] Marzo [ ] Abril [ ] Mayo [ ] Junio [ ] Julio [ ] Agosto [x] Septiembre [ ] Octubre [ ] Noviembre [ ] Diciembre [ ]";
                                break;
                            case 9:
                                _Periodicidad = _Periodicidad + "\n" + "Enero [ ] Febrero [ ] Marzo [ ] Abril [ ] Mayo [ ] Junio [ ] Julio [ ] Agosto [ ] Septiembre [x] Octubre [ ] Noviembre [ ] Diciembre [ ]";
                                break;
                            case 10:
                                _Periodicidad = _Periodicidad + "\n" + "Enero [ ] Febrero [ ] Marzo [ ] Abril [ ] Mayo [ ] Junio [ ] Julio [ ] Agosto [ ] Septiembre [ ] Octubre [x] Noviembre [ ] Diciembre [ ]";
                                break;
                            case 11:
                                _Periodicidad = _Periodicidad + "\n" + "Enero [ ] Febrero [ ] Marzo [ ] Abril [ ] Mayo [ ] Junio [ ] Julio [ ] Agosto [ ] Septiembre [ ] Octubre [ ] Noviembre [x] Diciembre [ ]";
                                break;
                            case 12:
                                _Periodicidad = _Periodicidad + "\n" + "Enero [ ] Febrero [ ] Marzo [ ] Abril [ ] Mayo [ ] Junio [ ] Julio [ ] Agosto [ ] Septiembre [ ] Octubre [ ] Noviembre [ ] Diciembre [x]";
                                break;
                            default:
                                _Periodicidad = _Periodicidad + "\n" + "Sin Definir [ ]";
                                break;
                        }

                        clPeriodicidad = new PdfPCell(new Phrase(_Periodicidad, _FontPeriodicidadMensual));
                        clPeriodicidad.Colspan = 3;
                        clPeriodicidad.PaddingTop = 5f;
                        clPeriodicidad.HorizontalAlignment = Element.ALIGN_CENTER;
                        TblSeccionAnio.AddCell(clPeriodicidad);
                        break;
                    #endregion
                    case 3:
                        #region AQUI OBTENEMOS PERIODICIDAD BIMESTRAL
                        _Periodicidad = "PERIODICIDAD DE PAGO ( BIMESTRAL )";

                        switch (_PeriodicidadImpuesto)
                        {
                            case 2:
                                _Periodicidad = _Periodicidad + "\n" + "Enero-Febrero [x] Marzo-Abril [ ] Mayo-Junio [ ] Julio-Agosto [ ] Septiembre-Octubre [ ] Noviembre-Diciembre [ ]";
                                break;
                            case 4:
                                _Periodicidad = _Periodicidad + "\n" + "Enero-Febrero [ ] Marzo-Abril [x] Mayo-Junio [ ] Julio-Agosto [ ] Septiembre-Octubre [ ] Noviembre-Diciembre [ ]";
                                break;
                            case 6:
                                _Periodicidad = _Periodicidad + "\n" + "Enero-Febrero [ ] Marzo-Abril [ ] Mayo-Junio [x] Julio-Agosto [ ] Septiembre-Octubre [ ] Noviembre-Diciembre [ ]";
                                break;
                            case 8:
                                _Periodicidad = _Periodicidad + "\n" + "Enero-Febrero [ ] Marzo-Abril [ ] Mayo-Junio [ ] Julio-Agosto [x] Septiembre-Octubre [ ] Noviembre-Diciembre [ ]";
                                break;
                            case 10:
                                _Periodicidad = _Periodicidad + "\n" + "Enero-Febrero [ ] Marzo-Abril [ ] Mayo-Junio [ ] Julio-Agosto [ ] Septiembre-Octubre [x] Noviembre-Diciembre [ ]";
                                break;
                            case 12:
                                _Periodicidad = _Periodicidad + "\n" + "Enero-Febrero [ ] Marzo-Abril [ ] Mayo-Junio [ ] Julio-Agosto [ ] Septiembre-Octubre [ ] Noviembre-Diciembre [x]";
                                break;
                            default:
                                _Periodicidad = _Periodicidad + "\n" + "Sin Definir [ ]";
                                break;
                        }

                        clPeriodicidad = new PdfPCell(new Phrase(_Periodicidad, _FontPeriodicidad));
                        clPeriodicidad.Colspan = 3;
                        clPeriodicidad.PaddingTop = 5f;
                        clPeriodicidad.HorizontalAlignment = Element.ALIGN_CENTER;
                        TblSeccionAnio.AddCell(clPeriodicidad);
                        break;
                    #endregion
                    case 5:
                        #region AQUI OBTENEMOS PERIODICIDAD TRIMESTRAL
                        _Periodicidad = "PERIODICIDAD DE PAGO ( TRIMESTRAL )";

                        switch (_PeriodicidadImpuesto)
                        {
                            case 3:
                                _Periodicidad = _Periodicidad + "\n" + "Enero-Febrero-Marzo [x] Abril-Mayo-Junio [ ] Julio-Agosto-Septiembre [ ] Octubre-Noviembre-Diciembre [ ]";
                                break;
                            case 6:
                                _Periodicidad = _Periodicidad + "\n" + "Enero-Febrero-Marzo [ ] Abril-Mayo-Junio [x] Julio-Agosto-Septiembre [ ] Octubre-Noviembre-Diciembre [ ]";
                                break;
                            case 9:
                                _Periodicidad = _Periodicidad + "\n" + "Enero-Febrero-Marzo [ ] Abril-Mayo-Junio [ ] Julio-Agosto-Septiembre [x] Octubre-Noviembre-Diciembre [ ]";
                                break;
                            case 12:
                                _Periodicidad = _Periodicidad + "\n" + "Enero-Febrero-Marzo [ ] Abril-Mayo-Junio [ ] Julio-Agosto-Septiembre [ ] Octubre-Noviembre-Diciembre [x]";
                                break;
                            default:
                                _Periodicidad = _Periodicidad + "\n" + "Sin Definir [ ]";
                                break;
                        }

                        clPeriodicidad = new PdfPCell(new Phrase(_Periodicidad, _FontPeriodicidad));
                        clPeriodicidad.Colspan = 3;
                        clPeriodicidad.PaddingTop = 5f;
                        clPeriodicidad.HorizontalAlignment = Element.ALIGN_CENTER;
                        TblSeccionAnio.AddCell(clPeriodicidad);
                        break;
                    #endregion
                    case 6:
                        #region AQUI OBTENEMOS PERIODICIDAD CUATRIMESTRAL
                        _Periodicidad = "PERIODICIDAD DE PAGO ( CUATRIMESTRAL )";

                        switch (_PeriodicidadImpuesto)
                        {
                            case 4:
                                _Periodicidad = _Periodicidad + "\n" + "Enero-Febrero-Marzo-Abril [x] Mayo-Junio-Julio-Agosto [ ] Septiembre-Noviembre-Diciembre [ ]";
                                break;
                            case 8:
                                _Periodicidad = _Periodicidad + "\n" + "Enero-Febrero-Marzo-Abril [ ] Mayo-Junio-Julio-Agosto [x] Septiembre-Noviembre-Diciembre [ ]";
                                break;
                            case 12:
                                _Periodicidad = _Periodicidad + "\n" + "Enero-Febrero-Marzo-Abril [ ] Mayo-Junio-Julio-Agosto [ ] Septiembre-Noviembre-Diciembre [x]";
                                break;
                            default:
                                _Periodicidad = _Periodicidad + "\n" + "Sin Definir [ ]";
                                break;
                        }

                        clPeriodicidad = new PdfPCell(new Phrase(_Periodicidad, _FontPeriodicidad));
                        clPeriodicidad.Colspan = 3;
                        clPeriodicidad.PaddingTop = 5f;
                        clPeriodicidad.HorizontalAlignment = Element.ALIGN_CENTER;
                        TblSeccionAnio.AddCell(clPeriodicidad);
                        break;
                    #endregion
                    case 7:
                        #region AQUI OBTENEMOS PERIODICIDAD SEMESTRAL
                        _Periodicidad = "PERIODICIDAD DE PAGO ( SEMESTRAL )";

                        switch (_PeriodicidadImpuesto)
                        {
                            case 6:
                                _Periodicidad = _Periodicidad + "\n" + "Enero-Febrero-Marzo-Abril-Mayo-Junio [x] Julio-Agosto-Septiembre-Noviembre-Diciembre [ ]";
                                break;
                            case 12:
                                _Periodicidad = _Periodicidad + "\n" + "Enero-Febrero-Marzo-Abril-Mayo-Junio [ ] Julio-Agosto-Septiembre-Noviembre-Diciembre [x]";
                                break;
                            default:
                                _Periodicidad = _Periodicidad + "\n" + "Sin Definir [ ]";
                                break;
                        }

                        clPeriodicidad = new PdfPCell(new Phrase(_Periodicidad, _FontPeriodicidad));
                        clPeriodicidad.Colspan = 3;
                        clPeriodicidad.PaddingTop = 5f;
                        clPeriodicidad.HorizontalAlignment = Element.ALIGN_CENTER;
                        TblSeccionAnio.AddCell(clPeriodicidad);
                        break;
                    #endregion
                    default:
                        #region AQUI OBTENEMOS PERIODICIDAD SEMESTRAL
                        _Periodicidad = "PERIODICIDAD DE PAGO ( SIN DEFINIR )";
                        clPeriodicidad = new PdfPCell(new Phrase(_Periodicidad, _FontPeriodicidad));
                        clPeriodicidad.Colspan = 3;
                        clPeriodicidad.PaddingTop = 5f;
                        clPeriodicidad.HorizontalAlignment = Element.ALIGN_CENTER;
                        TblSeccionAnio.AddCell(clPeriodicidad);
                        break;
                        #endregion
                }
                #endregion

                //--AQUI ADICIONAMOS LA TABLA AL DOCUMENTO
                doc.Add(TblSeccionAnio);
                #endregion

                #region SESION OPCION DE USO, DECLARACION INICIAL
                PdfPTable TblSeccionOpcionUso = new PdfPTable(1);
                TblSeccionOpcionUso.TotalWidth = _AnchoTabla;
                TblSeccionOpcionUso.LockedWidth = true;
                TblSeccionOpcionUso.WidthPercentage = 100;
                ///-Left aLign
                TblSeccionOpcionUso.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionOpcionUso.SpacingAfter = 0;
                //float[] TblWidths01 = new float[2];
                //TblWidths01[0] = 100f;
                //TblWidths01[1] = 350f;
                ////-Set the column widths on table creation. Unlike HTML cells cannot be sized.
                //TblSeccionAnio.SetWidths(TblWidths01);
                Font _FontOpcionUso = new Font(Font.FontFamily.TIMES_ROMAN, 7, Font.NORMAL, BaseColor.BLACK);

                string _OpcionUso = "OPCIÓN DE USO";
                string _Opciones1 = "DECLARACIÓN INICIAL: X";
                string _Opciones2 = "SOLO PAGO: ";
                string _Opciones3 = "CORRECCIÓN: ";
                string _Opciones4 = "Declaración que corrige No.:_____________________________";
                string _Opciones5 = "Fecha: " + DateTime.Now.ToString("dd/MM/yyy");
                PdfPCell clOpciones = new PdfPCell(new Phrase(_OpcionUso + "                  " + _Opciones1 + "     " + _Opciones2 + "     " + _Opciones3 + "     " + _Opciones4 + "        " + _Opciones5, _FontOpcionUso));
                clOpciones.Colspan = 4;
                clOpciones.PaddingTop = 5f;
                clOpciones.VerticalAlignment = Element.ALIGN_CENTER;
                TblSeccionOpcionUso.AddCell(clOpciones);

                //--AQUI ADICIONAMOS LA TABLA AL DOCUMENTO
                doc.Add(TblSeccionOpcionUso);
                #endregion

                #region DEFINICION DE VALORES DE LA SESION 1 DEL FORMULARIO
                //PdfPTable table = new PdfPTable(4);
                //table.TotalWidth = _AnchoTabla;
                //table.LockedWidth = true;
                //table.WidthPercentage = 100;

                ////--AQUI DEFINIMOS LOS DATOS DEL ENCABEZADO 1.
                //Font _standardFont1 = new Font(Font.FontFamily.TIMES_ROMAN, 6, Font.NORMAL, BaseColor.BLACK);
                //string _TituloMunicipio = "MUNICIPIO O DISTRITO:";
                //PdfPCell clTituloMun = new PdfPCell(new Phrase(_TituloMunicipio, _standardFont1));
                //clTituloMun.HorizontalAlignment = Element.ALIGN_LEFT;
                //table.AddCell(clTituloMun);

                //string _NombreMunicipio = this.LblNombreMunicipio.Text.ToString().Trim().ToUpper();
                //PdfPCell clNombreMunicipio = new PdfPCell(new Phrase(_NombreMunicipio, _standardFont1));
                //clNombreMunicipio.BorderWidth = 0;
                //clNombreMunicipio.Colspan = 2;
                //clNombreMunicipio.HorizontalAlignment = Element.ALIGN_CENTER;
                //table.AddCell(clNombreMunicipio);

                //string _FechaMaxPres = this.CmbFecha1.SelectedValue.ToString().Trim() + "/" + this.CmbFecha2.SelectedValue.ToString().Trim() + "/" + this.CmbFecha3.SelectedValue.ToString().Trim();
                //string _FechaMaxPresentacion = "Fecha Máxima Presentación\n" + _FechaMaxPres;
                //PdfPCell clFechaMax = new PdfPCell(new Phrase(_FechaMaxPresentacion, _standardFont1));
                //clFechaMax.HorizontalAlignment = Element.ALIGN_CENTER;
                //clFechaMax.Rowspan = 2;
                //clFechaMax.Colspan = 2;
                //table.AddCell(clFechaMax);

                ////--AQUI DEFINIMOS LOS DATOS DEL ENCABEZADO 2.
                //string _TituloDpto = "DEPARTAMENTO:";
                //PdfPCell clTituloDpto = new PdfPCell(new Phrase(_TituloDpto, _standardFont1));
                //clTituloDpto.HorizontalAlignment = Element.ALIGN_LEFT;
                //table.AddCell(clTituloDpto);

                //string _NombreDpto = this.LblNombreDpto.Text.ToString().Trim().ToUpper();
                //PdfPCell clNombreDpto = new PdfPCell(new Phrase(_NombreDpto, _standardFont1));
                ////clTerminal.BorderWidth = 0;
                //clNombreDpto.Colspan = 2;
                //clNombreDpto.HorizontalAlignment = Element.ALIGN_CENTER;
                //table.AddCell(clNombreDpto);

                ////--AQUI DEFINIMOS LOS DATOS DEL ENCABEZADO 2.
                //string _TituloAnio = "AÑO GRAVABLE: " + this.TxtAnioGravable.Text.ToString().Trim();
                //PdfPCell clTituloAnio = new PdfPCell(new Phrase(_TituloAnio, _standardFont1));
                //clTituloAnio.PaddingTop = 9f;
                //clTituloAnio.VerticalAlignment = Element.ALIGN_CENTER;
                ////clTituloAnio.HorizontalAlignment = Element.ALIGN_LEFT;
                //table.AddCell(clTituloAnio);

                //string _ImgDefault = "Imagenes/Modulos/img_cuadro.png";
                //string _RutaImagen = HttpContext.Current.Server.MapPath("/" + _ImgDefault.ToString().Trim());
                ////--AQUI OBTENEMOS EL ARREGLO DE BYTE DE LA IMAGEN.
                //byte[] imageBytes = ObjUtils.GetImagenBytes(_RutaImagen);
                //iTextSharp.text.Image ImgHuella = iTextSharp.text.Image.GetInstance(imageBytes);
                //ImgHuella.ScaleAbsolute(700f, 40f);
                //PdfPCell clImg3 = new PdfPCell(ImgHuella);
                ////clImg3.Border = 0;
                //clImg3.Colspan = 3;
                //clImg3.PaddingTop = 5f;
                //clImg3.HorizontalAlignment = Element.ALIGN_CENTER;
                //table.AddCell(clImg3);

                //Font _standardFont2 = new Font(Font.FontFamily.TIMES_ROMAN, 7, Font.NORMAL, BaseColor.BLACK);
                //string _OpcionUso = "";
                //if (this.RbDeclaracionInicial.Checked)
                //{
                //    _OpcionUso = "OPCIÓN DE USO            DECLARACIÓN INICIAL: X        SOLO PAGO:          CORRECCIÓN:          Declaración que corrige No.:";
                //}
                //if (this.RbSoloPago.Checked)
                //{
                //    _OpcionUso = "OPCIÓN DE USO            DECLARACIÓN INICIAL:          SOLO PAGO: X        CORRECCIÓN:          Declaración que corrige No.:";
                //}
                //if (this.RbCorreccion.Checked)
                //{
                //    _OpcionUso = "OPCIÓN DE USO            DECLARACIÓN INICIAL:          SOLO PAGO:          CORRECCIÓN: X        Declaración que corrige No.: " + this.TxtNumCorreccion.Text.ToString().Trim();
                //}

                //string _Opciones5 = "Fecha: " + DateTime.Now.ToString("dd/MM/yyy");
                //PdfPCell clOpciones = new PdfPCell(new Phrase(_OpcionUso + "          " + _Opciones5, _standardFont2));
                //clOpciones.Colspan = 4;
                //clOpciones.PaddingTop = 5f;
                //clOpciones.VerticalAlignment = Element.ALIGN_CENTER;
                //table.AddCell(clOpciones);

                ////--AQUI ADICIONAMOS LA TABLA AL DOCUMENTO
                //doc.Add(table);
                #endregion

                //--AQUI DEFINIMOS LOS TIPOS DE LETRAS Y TAMAÑO DE LAS SESIONES
                Font _FontSecciones = new Font(Font.FontFamily.TIMES_ROMAN, 6, Font.NORMAL, BaseColor.BLACK);
                Font _FontFirmas = new Font(Font.FontFamily.TIMES_ROMAN, 5, Font.NORMAL, BaseColor.BLACK);
                Font _FontDetalle = new Font(Font.FontFamily.TIMES_ROMAN, 6, Font.NORMAL, BaseColor.BLACK);
                Font _FontCodigosQr = new Font(Font.FontFamily.TIMES_ROMAN, 4, Font.NORMAL, BaseColor.BLACK);
                Font _standardFontRenglon = new Font(Font.FontFamily.TIMES_ROMAN, 6, Font.BOLD, BaseColor.BLACK);

                #region SESION A. INFORMACION DEL CONTRIBUYENTE
                PdfPTable TblSeccionA = new PdfPTable(6);
                TblSeccionA.TotalWidth = _AnchoTabla;
                TblSeccionA.LockedWidth = true;
                TblSeccionA.WidthPercentage = 100;
                /// Left aLign
                TblSeccionA.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionA.SpacingAfter = 0;
                float[] TblWidthsA = new float[6];
                TblWidthsA[0] = 24.8f;
                TblWidthsA[1] = 11f;
                TblWidthsA[2] = 100f;
                TblWidthsA[3] = 100f;
                TblWidthsA[4] = 70f;
                TblWidthsA[5] = 70f;
                // Set the column widths on table creation. Unlike HTML cells cannot be sized.
                TblSeccionA.SetWidths(TblWidthsA);

                string _SeccionA = "A. INFORMACIÓN DEL\nCONTRIBUYENTE";
                //PdfPCell clSeccionA = new PdfPCell(new Phrase(_SeccionA, _FontSecciones)) { Rotation = 90, PaddingTop = 6f, VerticalAlignment = Element.ALIGN_CENTER, HorizontalAlignment = Element.ALIGN_CENTER, BorderWidth = 1 };
                PdfPCell clSeccionA = new PdfPCell(new Phrase(_SeccionA, _FontSecciones));
                clSeccionA.Rowspan = 6;
                clSeccionA.Colspan = 1;
                //clSeccionB.BorderWidth = 1;
                clSeccionA.Rotation = 90;
                clSeccionA.VerticalAlignment = Element.ALIGN_CENTER;
                clSeccionA.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionA.AddCell(clSeccionA);

                //--RENGLON 1
                PdfPCell clRenglon1 = new PdfPCell(new Phrase("1", _standardFontRenglon));
                clRenglon1.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionA.AddCell(clRenglon1);

                string _NombreCliente = "NOMBRES Y APELLIDOS O RAZÓN SOCIAL\n" + this.LblNombreCliente.Text.ToString().Trim();
                PdfPCell clNombreCliente = new PdfPCell(new Phrase(_NombreCliente, _FontDetalle));
                clNombreCliente.Colspan = 4;
                clNombreCliente.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionA.AddCell(clNombreCliente);
                //TblSeccionA.AddCell("A");

                //--RENGLON 2
                PdfPCell clRenglon2 = new PdfPCell(new Phrase("2", _standardFontRenglon));
                clRenglon2.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionA.AddCell(clRenglon2);

                #region MOSTRAR EL TIPO DE DOCUMENTO
                string _DocCliente = "";
                if (this.RbCedulaCiudadania.Checked)
                {
                    _DocCliente = "C.C.: X  NIT.:    TI.:    C.E.:    " + this.LblNumDocumento.Text.ToString().Trim() + "   " + this.LblDv.Text.ToString().Trim();
                }
                if (this.RbNit.Checked)
                {
                    _DocCliente = "C.C.:    NIT.: X  TI.:    C.E.:    " + this.LblNumDocumento.Text.ToString().Trim() + "   " + this.LblDv.Text.ToString().Trim();
                }
                if (this.RbCedulaExtranjeria.Checked)
                {
                    _DocCliente = "C.C.:    NIT.:    TI.:    C.E.: X  " + this.LblNumDocumento.Text.ToString().Trim() + "   " + this.LblDv.Text.ToString().Trim();
                }

                PdfPCell clDocumCliente = new PdfPCell(new Phrase(_DocCliente, _FontDetalle));
                //clDocumCliente.Colspan = 2;
                clDocumCliente.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionA.AddCell(clDocumCliente);
                #endregion

                #region MOSTRAR SI ES UNION TEMPORAL
                string _UnionTemporal = "";
                if (this.RbUnionTemporal.Checked && this.RbPatrimonioAut.Checked)
                {
                    _UnionTemporal = "Es Consorcio o Unión Temporal:  X   Realiza actividades a través de Patrimonio Autónomo:  X";
                }
                else
                {
                    if (this.RbUnionTemporal.Checked)
                    {
                        _UnionTemporal = "Es Consorcio o Unión Temporal:  X   Realiza actividades a través de Patrimonio Autónomo:";
                    }
                    if (this.RbPatrimonioAut.Checked)
                    {
                        _UnionTemporal = "Es Consorcio o Unión Temporal:      Realiza actividades a través de Patrimonio Autónomo:  X";
                    }
                }

                PdfPCell clUnionTemporal = new PdfPCell(new Phrase(_UnionTemporal, _FontDetalle));
                clUnionTemporal.Colspan = 3;
                clUnionTemporal.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionA.AddCell(clUnionTemporal);
                //TblSeccionA.AddCell("B");
                #endregion

                //--RENGLON 3
                PdfPCell clRenglon3 = new PdfPCell(new Phrase("3", _standardFontRenglon));
                clRenglon3.Rowspan = 2;
                clRenglon3.PaddingTop = 11f;
                clRenglon3.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionA.AddCell(clRenglon3);

                string _DirecCliente = "DIRECCIÓN DE NOTIFICACIÓN\n" + this.LblDireccionNotificacion.Text.ToString().Trim();
                PdfPCell clDirecCliente = new PdfPCell(new Phrase(_DirecCliente, _FontDetalle));
                clDirecCliente.Colspan = 4;
                clDirecCliente.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionA.AddCell(clDirecCliente);

                string _MunicipioDistrito = "MUNICIPIO O DISTRITO DE LA DIRECCIÓN\n" + this.LblMunicipioDirNotificacion.Text.ToString().Trim();
                PdfPCell clMunDistrito = new PdfPCell(new Phrase(_MunicipioDistrito, _FontDetalle));
                //clMunDistrito.Colspan = 2;
                clMunDistrito.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionA.AddCell(clMunDistrito);

                string _Dpto = "DEPARTAMENTO\n" + this.LblDptoDirNotificacion.Text.ToString().Trim();
                PdfPCell clDpto = new PdfPCell(new Phrase(_Dpto, _FontDetalle));
                clDpto.Colspan = 4;
                clDpto.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionA.AddCell(clDpto);

                ////--RENGLON 4
                PdfPCell clRenglon4 = new PdfPCell(new Phrase("4", _standardFontRenglon));
                clRenglon4.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionA.AddCell(clRenglon4);

                string _TelefCliente = "TELÉFONO\n" + this.LblTelefono.Text.ToString().Trim();
                PdfPCell clTelefCliente = new PdfPCell(new Phrase(_TelefCliente, _FontDetalle));
                clTelefCliente.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionA.AddCell(clTelefCliente);

                string _EmailCliente = "5. CORREO ELECTRÓNICO\n" + this.LblEmail.Text.ToString().Trim();
                PdfPCell clEmailCliente = new PdfPCell(new Phrase(_EmailCliente, _FontDetalle));
                clEmailCliente.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionA.AddCell(clEmailCliente);

                string _NumEstablecimiento = "6. N° DE ESTABLECIMIENTOS\n" + this.LblNumEstablecimientos.Text.ToString().Trim().PadLeft(30, ' ');
                PdfPCell clNumEstablecimiento = new PdfPCell(new Phrase(_NumEstablecimiento, _FontDetalle));
                clNumEstablecimiento.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionA.AddCell(clNumEstablecimiento);

                string _ClasificacionCliente = "7. CLASIFICACIÓN\n" + this.LblClasificacion.Text.ToString().Trim();
                PdfPCell clClasificacionCliente = new PdfPCell(new Phrase(_ClasificacionCliente, _FontDetalle));
                clClasificacionCliente.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionA.AddCell(clClasificacionCliente);

                //--AQUI ADICIONAMOS LA TABLA AL DOCUMENTO
                doc.Add(TblSeccionA);
                #endregion

                #region SECCION B. BASE GRAVABLE
                PdfPTable TblSeccionB = new PdfPTable(4);
                TblSeccionB.TotalWidth = _AnchoTabla;
                TblSeccionB.LockedWidth = true;
                TblSeccionB.WidthPercentage = 100;
                /// Left aLign
                TblSeccionB.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionB.SpacingAfter = 0;
                float[] TblWidthsB = new float[4];
                TblWidthsB[0] = 20.5f;
                TblWidthsB[1] = 9f;
                TblWidthsB[2] = 200f;
                TblWidthsB[3] = 80f;
                // Set the column widths on table creation. Unlike HTML cells cannot be sized.
                TblSeccionB.SetWidths(TblWidthsB);

                string _SeccionB = "B. BASE GRAVABLE";
                //PdfPCell clSeccionB = new PdfPCell(new Phrase(_SeccionB, _FontSecciones)) { Rotation = 90, PaddingTop = 6f, VerticalAlignment = Element.ALIGN_CENTER, HorizontalAlignment = Element.ALIGN_CENTER, BorderWidth = 1 };
                PdfPCell clSeccionB = new PdfPCell(new Phrase(_SeccionB, _FontSecciones));
                clSeccionB.Rowspan = 9;
                clSeccionB.Colspan = 1;
                //clSeccionB.BorderWidth = 1;
                clSeccionB.Rotation = 90;
                clSeccionB.VerticalAlignment = Element.ALIGN_CENTER;
                clSeccionB.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionB.AddCell(clSeccionB);

                //--RENGLON 8
                PdfPCell clRenglon8 = new PdfPCell(new Phrase("8", _standardFontRenglon));
                clRenglon8.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionB.AddCell(clRenglon8);

                string _DescRenglon8 = "TOTAL INGRESOS ORDINARIOS Y EXTRAORDINARIOS DEL PERIODO EN TODO EL PAÍS";
                PdfPCell clDescRenglon8 = new PdfPCell(new Phrase(_DescRenglon8, _FontDetalle));
                clDescRenglon8.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionB.AddCell(clDescRenglon8);

                string _ValorRenglon8 = this.LblValorRenglon8.Text.ToString().Trim();
                PdfPCell clValorRenglon8 = new PdfPCell(new Phrase(_ValorRenglon8, _FontDetalle));
                clValorRenglon8.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionB.AddCell(clValorRenglon8);

                //--RENGLON 9
                PdfPCell clRenglon9 = new PdfPCell(new Phrase("9", _standardFontRenglon));
                clRenglon9.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionB.AddCell(clRenglon9);

                string _DescRenglon9 = "      MENOS INGRESOS FUERA DE ESTE MUNICIPIO O DISTRITO";
                PdfPCell clDescRenglon9 = new PdfPCell(new Phrase(_DescRenglon9, _FontDetalle));
                clDescRenglon9.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionB.AddCell(clDescRenglon9);

                string _ValorRenglon9 = this.LblValorRenglon9.Text.ToString().Trim();
                PdfPCell clValorRenglon9 = new PdfPCell(new Phrase(_ValorRenglon9, _FontDetalle));
                clValorRenglon9.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionB.AddCell(clValorRenglon9);

                //--RENGLON 10
                PdfPCell clRenglon10 = new PdfPCell(new Phrase("10", _standardFontRenglon));
                clRenglon10.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionB.AddCell(clRenglon10);

                string _DescRenglon10 = "TOTAL INGRESOS ORDINARIOS Y EXTRAORDINARIOS EN ESTE MUNICIPIO (RENGLÓN 8 MENOS 9)";
                PdfPCell clDescRenglon10 = new PdfPCell(new Phrase(_DescRenglon10, _FontDetalle));
                clDescRenglon10.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionB.AddCell(clDescRenglon10);

                string _ValorRenglon10 = this.LblValorRenglon10.Text.ToString().Trim();
                PdfPCell clValorRenglon10 = new PdfPCell(new Phrase(_ValorRenglon10, _FontDetalle));
                clValorRenglon10.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionB.AddCell(clValorRenglon10);

                //--RENGLON 11
                PdfPCell clRenglon11 = new PdfPCell(new Phrase("11", _standardFontRenglon));
                clRenglon11.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionB.AddCell(clRenglon11);

                string _DescRenglon11 = "     MENOS INGRESOS POR DEVOLUCIONES, REBAJAS, DESCUENTOS";
                PdfPCell clDescRenglon11 = new PdfPCell(new Phrase(_DescRenglon11, _FontDetalle));
                clDescRenglon11.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionB.AddCell(clDescRenglon11);

                string _ValorRenglon11 = this.LblValorRenglon11.Text.ToString().Trim();
                PdfPCell clValorRenglon11 = new PdfPCell(new Phrase(_ValorRenglon11, _FontDetalle));
                clValorRenglon11.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionB.AddCell(clValorRenglon11);

                //--RENGLON 12
                PdfPCell clRenglon12 = new PdfPCell(new Phrase("12", _standardFontRenglon));
                clRenglon12.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionB.AddCell(clRenglon12);

                string _DescRenglon12 = "     MENOS INGRESOS POR EXPORTACIONES";
                PdfPCell clDescRenglon12 = new PdfPCell(new Phrase(_DescRenglon12, _FontDetalle));
                clDescRenglon12.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionB.AddCell(clDescRenglon12);

                string _ValorRenglon12 = this.LblValorRenglon12.Text.ToString().Trim();
                PdfPCell clValorRenglon12 = new PdfPCell(new Phrase(_ValorRenglon12, _FontDetalle));
                clValorRenglon12.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionB.AddCell(clValorRenglon12);

                //--RENGLON 13
                PdfPCell clRenglon13 = new PdfPCell(new Phrase("13", _standardFontRenglon));
                clRenglon13.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionB.AddCell(clRenglon13);

                string _DescRenglon13 = "     MENOS INGRESOS POR VENTAS DE ACTIVOS FIJOS";
                PdfPCell clDescRenglon13 = new PdfPCell(new Phrase(_DescRenglon13, _FontDetalle));
                clDescRenglon13.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionB.AddCell(clDescRenglon13);

                string _ValorRenglon13 = this.LblValorRenglon13.Text.ToString().Trim();
                PdfPCell clValorRenglon13 = new PdfPCell(new Phrase(_ValorRenglon13, _FontDetalle));
                clValorRenglon13.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionB.AddCell(clValorRenglon13);

                //--RENGLON 14
                PdfPCell clRenglon14 = new PdfPCell(new Phrase("14", _standardFontRenglon));
                clRenglon14.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionB.AddCell(clRenglon14);

                string _DescRenglon14 = "     MENOS INGRESOS POR ACTIVIDADES EXCLUIDAS O NO SUJETAS Y OTROS INGRESOS NO GRAVADOS";
                PdfPCell clDescRenglon14 = new PdfPCell(new Phrase(_DescRenglon14, _FontDetalle));
                clDescRenglon14.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionB.AddCell(clDescRenglon14);

                string _ValorRenglon14 = this.LblValorRenglon14.Text.ToString().Trim();
                PdfPCell clValorRenglon14 = new PdfPCell(new Phrase(_ValorRenglon14, _FontDetalle));
                clValorRenglon14.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionB.AddCell(clValorRenglon14);

                //--RENGLON 15
                PdfPCell clRenglon15 = new PdfPCell(new Phrase("15", _standardFontRenglon));
                clRenglon15.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionB.AddCell(clRenglon15);

                string _DescRenglon15 = "     MENOS INGRESOS POR OTRAS ACTIVIDADES EXENTAS EN ESTE MUNICIPIO O DISTRITO (POR ACUERDO)";
                PdfPCell clDescRenglon15 = new PdfPCell(new Phrase(_DescRenglon15, _FontDetalle));
                clDescRenglon15.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionB.AddCell(clDescRenglon15);

                string _ValorRenglon15 = this.LblValorRenglon15.Text.ToString().Trim();
                PdfPCell clValorRenglon15 = new PdfPCell(new Phrase(_ValorRenglon15, _FontDetalle));
                clValorRenglon15.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionB.AddCell(clValorRenglon15);

                //--RENGLON 16
                PdfPCell clRenglon16 = new PdfPCell(new Phrase("16", _standardFontRenglon));
                clRenglon16.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionB.AddCell(clRenglon16);

                string _DescRenglon16 = "TOTAL INGRESOS GRAVABLES (RENGLÓN 10 MENOS 11, 12, 13, 14 Y 15)";
                PdfPCell clDescRenglon16 = new PdfPCell(new Phrase(_DescRenglon16, _FontDetalle));
                clDescRenglon16.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionB.AddCell(clDescRenglon16);

                string _ValorRenglon16 = this.LblValorRenglon16.Text.ToString().Trim();
                PdfPCell clValorRenglon16 = new PdfPCell(new Phrase(_ValorRenglon16, _FontDetalle));
                clValorRenglon16.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionB.AddCell(clValorRenglon16);

                //--AQUI ADICIONAMOS LA TABLA AL DOCUMENTO
                doc.Add(TblSeccionB);
                #endregion

                #region SECCION C. DISCRIMINACIÓN DE ACTIVIDADES GRAVADAS
                PdfPTable TblSeccionC = new PdfPTable(6);
                TblSeccionC.TotalWidth = _AnchoTabla;
                TblSeccionC.LockedWidth = true;
                TblSeccionC.WidthPercentage = 100;
                /// Left aLign
                TblSeccionC.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionC.SpacingAfter = 0;
                float[] TblWidthsC = new float[6];
                TblWidthsC[0] = 23f;
                TblWidthsC[1] = 70f;
                TblWidthsC[2] = 50f;
                TblWidthsC[3] = 53f;
                TblWidthsC[4] = 62f;
                TblWidthsC[5] = 90f;
                // Set the column widths on table creation. Unlike HTML cells cannot be sized.
                TblSeccionC.SetWidths(TblWidthsC);

                string _SeccionC = "C. DISCRIMINACIÓN DE\nACTIVIDADES\nGRAVADAS";
                PdfPCell clSeccionC = new PdfPCell(new Phrase(_SeccionC, _FontSecciones));
                clSeccionC.Rowspan = 7;
                clSeccionC.Colspan = 1;
                //clSeccionB.BorderWidth = 1;
                clSeccionC.Rotation = 90;
                clSeccionC.VerticalAlignment = Element.ALIGN_CENTER;
                clSeccionC.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionC.AddCell(clSeccionC);

                #region DEFINIR NOMBRE DE COLUMNAS DE LA TABLA
                //--DEFINIR NOMBRE DE COLUMNAS DE LA TABLA
                PdfPCell clActGravadas = new PdfPCell(new Phrase("ACTIVIDADES GRAVADAS", _FontDetalle));
                clActGravadas.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionC.AddCell(clActGravadas);

                string _CodigoAct = "CÓDIGO";
                PdfPCell clCodigoAct = new PdfPCell(new Phrase(_CodigoAct, _FontDetalle));
                clCodigoAct.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionC.AddCell(clCodigoAct);

                string _IngGravados = "INGRESOS GRAVADOS";
                PdfPCell clIngGravados = new PdfPCell(new Phrase(_IngGravados, _FontDetalle));
                clIngGravados.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionC.AddCell(clIngGravados);

                string _TarifaxMil = "TARIFA (POR MIL)";
                PdfPCell clTarifaxMil = new PdfPCell(new Phrase(_TarifaxMil, _FontDetalle));
                //clTarifaxMil.Colspan = 2;
                clTarifaxMil.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionC.AddCell(clTarifaxMil);

                PdfPCell clValorAct = new PdfPCell(new Phrase("", _FontDetalle));
                //clValorAct.Colspan = 2;
                clValorAct.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionC.AddCell(clValorAct);
                #endregion

                #region DEFINIR VALORES DE COLUMNAS DE LA TABLA
                //--DEFINIR VALORES CAMPO ACTIVIDAD 1
                PdfPCell clActPrincipal1 = new PdfPCell(new Phrase("ACTIVIDAD 1 (PRINCIPAL)", _FontDetalle));
                clActPrincipal1.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionC.AddCell(clActPrincipal1);

                string _CodigoAct1 = this.LblCodActividad1.Text.ToString().Trim();
                PdfPCell clCodigoAct1 = new PdfPCell(new Phrase(_CodigoAct1, _FontDetalle));
                clCodigoAct1.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionC.AddCell(clCodigoAct1);

                string _IngGravados1 = this.LblIngresosActividad1.Text.ToString().Trim();
                PdfPCell clIngGravados1 = new PdfPCell(new Phrase(_IngGravados1, _FontDetalle));
                clIngGravados1.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionC.AddCell(clIngGravados1);

                string _TarifaAct1 = this.LblTarifaActividad1.Text.ToString().Trim();
                PdfPCell clTarifaAct1 = new PdfPCell(new Phrase(_TarifaAct1, _FontDetalle));
                clTarifaAct1.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionC.AddCell(clTarifaAct1);

                string _ValorAct1 = this.LblValorRenglon17.Text.ToString().Trim();
                PdfPCell clValorAct1 = new PdfPCell(new Phrase(_ValorAct1, _FontDetalle));
                clValorAct1.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionC.AddCell(clValorAct1);

                //--DEFINIR VALORES CAMPO ACTIVIDAD 2
                PdfPCell clActividad2 = new PdfPCell(new Phrase("ACTIVIDAD 2", _FontDetalle));
                clActividad2.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionC.AddCell(clActividad2);

                string _CodigoAct2 = this.LblCodActividad2.Text.ToString().Trim();
                PdfPCell clCodigoAct2 = new PdfPCell(new Phrase(_CodigoAct2, _FontDetalle));
                clCodigoAct2.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionC.AddCell(clCodigoAct2);

                string _IngGravados2 = this.LblIngresosActividad2.Text.ToString().Trim();
                PdfPCell clIngGravados2 = new PdfPCell(new Phrase(_IngGravados2, _FontDetalle));
                clIngGravados2.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionC.AddCell(clIngGravados2);

                string _TarifaAct2 = this.LblTarifaActividad2.Text.ToString().Trim();
                PdfPCell clTarifaAct2 = new PdfPCell(new Phrase(_TarifaAct2, _FontDetalle));
                clTarifaAct2.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionC.AddCell(clTarifaAct2);

                string _ValorAct2 = this.LblValorRenglon18.Text.ToString().Trim();
                PdfPCell clValorAct2 = new PdfPCell(new Phrase(_ValorAct2, _FontDetalle));
                clValorAct2.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionC.AddCell(clValorAct2);

                //--DEFINIR VALORES CAMPO ACTIVIDAD 3
                PdfPCell clActividad3 = new PdfPCell(new Phrase("ACTIVIDAD 3", _FontDetalle));
                clActividad3.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionC.AddCell(clActividad3);

                string _CodigoAct3 = this.LblCodActividad3.Text.ToString().Trim();
                PdfPCell clCodigoAct3 = new PdfPCell(new Phrase(_CodigoAct3, _FontDetalle));
                clCodigoAct3.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionC.AddCell(clCodigoAct3);

                string _IngGravados3 = this.LblIngresosActividad3.Text.ToString().Trim();
                PdfPCell clIngGravados3 = new PdfPCell(new Phrase(_IngGravados3, _FontDetalle));
                clIngGravados3.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionC.AddCell(clIngGravados3);

                string _TarifaAct3 = this.LblTarifaActividad3.Text.ToString().Trim();
                PdfPCell clTarifaAct3 = new PdfPCell(new Phrase(_TarifaAct3, _FontDetalle));
                clTarifaAct3.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionC.AddCell(clTarifaAct3);

                string _ValorAct3 = this.LblValorRenglon19.Text.ToString().Trim();
                PdfPCell clValorAct3 = new PdfPCell(new Phrase(_ValorAct3, _FontDetalle));
                clValorAct3.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionC.AddCell(clValorAct3);

                //--DEFINIR VALORES CAMPO ACTIVIDAD 4
                PdfPCell clActividad4 = new PdfPCell(new Phrase("OTRAS ACTIVIDADES", _FontDetalle));
                clActividad4.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionC.AddCell(clActividad4);

                string _CodigoAct4 = "VER DESAGREGACIÓN";
                PdfPCell clCodigoAct4 = new PdfPCell(new Phrase(_CodigoAct4, _FontDetalle));
                clCodigoAct4.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionC.AddCell(clCodigoAct4);

                string _IngGravados4 = this.LblIngresosActividad4.Text.ToString().Trim();
                PdfPCell clIngGravados4 = new PdfPCell(new Phrase(_IngGravados4, _FontDetalle));
                clIngGravados4.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionC.AddCell(clIngGravados4);

                string _TarifaAct4 = this.LblTarifaActividad4.Text.ToString().Trim();
                PdfPCell clTarifaAct4 = new PdfPCell(new Phrase(_TarifaAct4, _FontDetalle));
                clTarifaAct4.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionC.AddCell(clTarifaAct4);

                string _ValorAct4 = this.LblValorDesagregacion.Text.ToString().Trim();
                PdfPCell clValorAct4 = new PdfPCell(new Phrase(_ValorAct4, _FontDetalle));
                clValorAct4.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionC.AddCell(clValorAct4);

                //--DEFINIR VALORES TOTAL INGRESOS GRAVADOS
                PdfPCell clActividad5 = new PdfPCell(new Phrase("TOTAL INGRESOS GRAVADOS", _FontDetalle));
                clActividad5.Colspan = 2;
                clActividad5.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionC.AddCell(clActividad5);

                string _IngGravados5 = this.LblTotalIngresosGravados.Text.ToString().Trim();
                PdfPCell clIngGravados5 = new PdfPCell(new Phrase(_IngGravados5, _FontDetalle));
                clIngGravados5.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionC.AddCell(clIngGravados5);

                PdfPCell clTarifaAct5 = new PdfPCell(new Phrase("17. TOTAL IMPUESTO", _FontDetalle));
                clTarifaAct5.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionC.AddCell(clTarifaAct5);

                string _ValorAct5 = this.LblTotalImpuesto.Text.ToString().Trim();
                PdfPCell clValorAct5 = new PdfPCell(new Phrase(_ValorAct5, _FontDetalle));
                clValorAct5.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionC.AddCell(clValorAct5);

                //--DEFINIR VALORES GENERACIÓN DE ENERGIA
                PdfPCell clActividad6 = new PdfPCell(new Phrase("18. GENERACIÓN DE ENERGIA CAPACIDAD INSTALADA", _FontDetalle));
                clActividad6.Colspan = 3;
                clActividad6.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionC.AddCell(clActividad6);

                PdfPCell clTarifaAct6 = new PdfPCell(new Phrase("19. IMPUESTO LEY 56 DE 1981", _FontDetalle));
                clTarifaAct6.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionC.AddCell(clTarifaAct6);

                string _ValorAct6 = this.LblTotalImpuestosLey.Text.ToString().Trim();
                PdfPCell clValorAct6 = new PdfPCell(new Phrase(_ValorAct6, _FontDetalle));
                clValorAct6.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionC.AddCell(clValorAct6);
                #endregion

                //--AQUI ADICIONAMOS LA TABLA AL DOCUMENTO
                doc.Add(TblSeccionC);
                #endregion

                #region SECCION D. AUTORETENCIONES
                PdfPTable TblSeccionD = new PdfPTable(4);
                TblSeccionD.TotalWidth = _AnchoTabla;
                TblSeccionD.LockedWidth = true;
                TblSeccionD.WidthPercentage = 100;
                /// Left aLign
                TblSeccionD.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionD.SpacingAfter = 0;
                float[] TblWidthsD = new float[4];
                TblWidthsD[0] = 20.5f;
                TblWidthsD[1] = 9f;
                TblWidthsD[2] = 200f;
                TblWidthsD[3] = 80f;
                // Set the column widths on table creation. Unlike HTML cells cannot be sized.
                TblSeccionD.SetWidths(TblWidthsD);

                string _SeccionD = "D. AUTORETENCIO-\nNES";
                PdfPCell clSeccionD = new PdfPCell(new Phrase(_SeccionD, _FontSecciones));
                clSeccionD.Rowspan = 15;
                clSeccionD.Colspan = 1;
                //clSeccionD.BorderWidth = 1;
                clSeccionD.Rotation = 90;
                clSeccionD.VerticalAlignment = Element.ALIGN_CENTER;
                clSeccionD.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionD.AddCell(clSeccionD);

                //--RENGLON 20
                PdfPCell clRenglon20 = new PdfPCell(new Phrase("20", _standardFontRenglon));
                clRenglon20.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionD.AddCell(clRenglon20);

                string _DescRenglon20 = "TOTAL AUTORRETENCIONES DE INDUSTRIA Y COMERCIO PRACTICADAS EN EL PERIODO (Base x Tarifa)";
                PdfPCell clDescRenglon20 = new PdfPCell(new Phrase(_DescRenglon20, _FontDetalle));
                clDescRenglon20.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionD.AddCell(clDescRenglon20);

                string _ValorRenglon20 = this.LblValorRenglon20.Text.ToString().Trim();
                PdfPCell clValorRenglon20 = new PdfPCell(new Phrase(_ValorRenglon20, _FontDetalle));
                clValorRenglon20.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionD.AddCell(clValorRenglon20);

                //--RENGLON 21
                PdfPCell clRenglon21 = new PdfPCell(new Phrase("21", _standardFontRenglon));
                clRenglon21.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionD.AddCell(clRenglon21);

                string _DescRenglon21 = this.LblDescRenglon21.Text.ToString().Trim();
                PdfPCell clDescRenglon21 = new PdfPCell(new Phrase(_DescRenglon21, _FontDetalle));
                clDescRenglon21.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionD.AddCell(clDescRenglon21);

                string _ValorRenglon21 = this.LblValorRenglon21.Text.ToString().Trim();
                PdfPCell clValorRenglon21 = new PdfPCell(new Phrase(_ValorRenglon21, _FontDetalle));
                clValorRenglon21.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionD.AddCell(clValorRenglon21);

                //--RENGLON 22
                PdfPCell clRenglon22 = new PdfPCell(new Phrase("22", _standardFontRenglon));
                clRenglon22.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionD.AddCell(clRenglon22);

                string _DescRenglon22 = "TOTAL AUTORRETENCION POR UNIDADES ADICIONALES DEL SECTOR FINANCIERO";
                PdfPCell clDescRenglon22 = new PdfPCell(new Phrase(_DescRenglon22, _FontDetalle));
                clDescRenglon22.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionD.AddCell(clDescRenglon22);

                string _ValorRenglon22 = this.LblValorRenglon22.Text.ToString().Trim();
                PdfPCell clValorRenglon22 = new PdfPCell(new Phrase(_ValorRenglon22, _FontDetalle));
                clValorRenglon22.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionD.AddCell(clValorRenglon22);

                //--RENGLON 23
                PdfPCell clRenglon23 = new PdfPCell(new Phrase("23", _standardFontRenglon));
                clRenglon23.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionD.AddCell(clRenglon23);

                string _DescRenglon23 = this.LblDescRenglon23.Text.ToString().Trim();
                PdfPCell clDescRenglon23 = new PdfPCell(new Phrase(_DescRenglon23, _FontDetalle));
                clDescRenglon23.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionD.AddCell(clDescRenglon23);

                string _ValorRenglon23 = this.LblValorRenglon23.Text.ToString().Trim();
                PdfPCell clValorRenglon23 = new PdfPCell(new Phrase(_ValorRenglon23, _FontDetalle));
                clValorRenglon23.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionD.AddCell(clValorRenglon23);

                //--RENGLON 24
                PdfPCell clRenglon24 = new PdfPCell(new Phrase("24", _standardFontRenglon));
                clRenglon24.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionD.AddCell(clRenglon24);

                string _DescRenglon24 = this.LblDescRenglon24.Text.ToString().Trim();
                PdfPCell clDescRenglon24 = new PdfPCell(new Phrase(_DescRenglon24, _FontDetalle));
                clDescRenglon24.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionD.AddCell(clDescRenglon24);

                string _ValorRenglon24 = this.LblValorRenglon24.Text.ToString().Trim();
                PdfPCell clValorRenglon24 = new PdfPCell(new Phrase(_ValorRenglon24, _FontDetalle));
                clValorRenglon24.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionD.AddCell(clValorRenglon24);

                //--RENGLON 25
                PdfPCell clRenglon25 = new PdfPCell(new Phrase("25", _standardFontRenglon));
                clRenglon25.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionD.AddCell(clRenglon25);

                //string _DescRenglon25 = "SUB TOTAL AUTORRETENCIONES (REGLÓN 20+21+22+23+24)";
                string _DescRenglon25 = this.LblDescRenglon25.Text.ToString().Trim();
                PdfPCell clDescRenglon25 = new PdfPCell(new Phrase(_DescRenglon25, _FontDetalle));
                clDescRenglon25.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionD.AddCell(clDescRenglon25);

                string _ValorRenglon25 = this.LblValorRenglon25.Text.ToString().Trim();
                PdfPCell clValorRenglon25 = new PdfPCell(new Phrase(_ValorRenglon25, _FontDetalle));
                clValorRenglon25.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionD.AddCell(clValorRenglon25);

                //--AQUI ADICIONAMOS LA TABLA AL DOCUMENTO
                doc.Add(TblSeccionD);
                #endregion

                #region SECCION E. ANTICIPOS Y SALDOS A FAVOR
                PdfPTable TblSeccionE = new PdfPTable(4);
                TblSeccionE.TotalWidth = _AnchoTabla;
                TblSeccionE.LockedWidth = true;
                TblSeccionE.WidthPercentage = 100;
                /// Left aLign
                TblSeccionE.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionE.SpacingAfter = 0;
                float[] TblWidthsE = new float[4];
                TblWidthsE[0] = 20.5f;
                TblWidthsE[1] = 9f;
                TblWidthsE[2] = 200f;
                TblWidthsE[3] = 80f;
                // Set the column widths on table creation. Unlike HTML cells cannot be sized.
                TblSeccionE.SetWidths(TblWidthsE);

                string _SeccionE = "E. ANTICIPOS Y\nSALDOS A\nFAVOR";
                PdfPCell clSeccionE = new PdfPCell(new Phrase(_SeccionE, _FontSecciones));
                clSeccionE.Rowspan = 15;
                clSeccionE.Colspan = 1;
                //clSeccionD.BorderWidth = 1;
                clSeccionE.Rotation = 90;
                clSeccionE.VerticalAlignment = Element.ALIGN_CENTER;
                clSeccionE.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionE.AddCell(clSeccionE);

                //--RENGLON 26
                PdfPCell clRenglon26 = new PdfPCell(new Phrase("26", _standardFontRenglon));
                clRenglon26.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionE.AddCell(clRenglon26);

                //string _DescRenglon26 = "     MENOS: ANTICIPOS REALIZADOS SEGÚN PERIODO A DECLARAR( M.B.T.C.S.A)";
                string _DescRenglon26 = "     " + this.LblDescRenglon26.Text.ToString().Trim();
                PdfPCell clDescRenglon26 = new PdfPCell(new Phrase(_DescRenglon26, _FontDetalle));
                clDescRenglon26.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionE.AddCell(clDescRenglon26);

                string _ValorRenglon26 = this.LblValorRenglon26.Text.ToString().Trim();
                PdfPCell clValorRenglon26 = new PdfPCell(new Phrase(_ValorRenglon26, _FontDetalle));
                clValorRenglon26.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionE.AddCell(clValorRenglon26);

                //--RENGLON 27
                PdfPCell clRenglon27 = new PdfPCell(new Phrase("27", _standardFontRenglon));
                clRenglon27.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionE.AddCell(clRenglon27);

                //string _DescRenglon27 = "     MENOS RETENCIONES que le practicaron a favor de este municipio o distrito en este periodo";
                string _DescRenglon27 = "     " + this.LblDescRenglon27.Text.ToString().Trim();
                PdfPCell clDescRenglon27 = new PdfPCell(new Phrase(_DescRenglon27, _FontDetalle));
                clDescRenglon27.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionE.AddCell(clDescRenglon27);

                string _ValorRenglon27 = this.LblValorRenglon27.Text.ToString().Trim();
                PdfPCell clValorRenglon27 = new PdfPCell(new Phrase(_ValorRenglon27, _FontDetalle));
                clValorRenglon27.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionE.AddCell(clValorRenglon27);

                //--RENGLON 28
                PdfPCell clRenglon28 = new PdfPCell(new Phrase("28", _standardFontRenglon));
                clRenglon28.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionE.AddCell(clRenglon28);

                //string _DescRenglon28 = "     MENOS AUTORETENCIONES practicadas a favor de este municipio o distrito en este periodo";
                string _DescRenglon28 = "     " + this.LblDescRenglon28.Text.ToString().Trim();
                PdfPCell clDescRenglon28 = new PdfPCell(new Phrase(_DescRenglon28, _FontDetalle));
                clDescRenglon28.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionE.AddCell(clDescRenglon28);

                string _ValorRenglon28 = this.LblValorRenglon28.Text.ToString().Trim();
                PdfPCell clValorRenglon28 = new PdfPCell(new Phrase(_ValorRenglon28, _FontDetalle));
                clValorRenglon28.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionE.AddCell(clValorRenglon28);

                //--RENGLON 29
                PdfPCell clRenglon29 = new PdfPCell(new Phrase("29", _standardFontRenglon));
                clRenglon29.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionE.AddCell(clRenglon29);

                //string _DescRenglon29 = "     MENOS ANTICIPO LIQUIDADO EN EL AÑO ANTERIOR";
                string _DescRenglon29 = "     " + this.LblDescRenglon29.Text.ToString().Trim();
                PdfPCell clDescRenglon29 = new PdfPCell(new Phrase(_DescRenglon29, _FontDetalle));
                clDescRenglon29.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionE.AddCell(clDescRenglon29);

                string _ValorRenglon29 = this.LblValorRenglon29.Text.ToString().Trim();
                PdfPCell clValorRenglon29 = new PdfPCell(new Phrase(_ValorRenglon29, _FontDetalle));
                clValorRenglon29.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionE.AddCell(clValorRenglon29);

                //--RENGLON 30
                PdfPCell clRenglon30 = new PdfPCell(new Phrase("30", _standardFontRenglon));
                clRenglon30.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionE.AddCell(clRenglon30);

                //string _DescRenglon30 = "ANTICIPO DEL AÑO SIGUIENTE (Si existe, liquide porcentaje según Acuerdo Municipal o Distrital)";
                string _DescRenglon30 = this.LblDescRenglon30.Text.ToString().Trim();
                PdfPCell clDescRenglon30 = new PdfPCell(new Phrase(_DescRenglon30, _FontDetalle));
                clDescRenglon30.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionE.AddCell(clDescRenglon30);

                string _ValorRenglon30 = this.LblValorRenglon30.Text.ToString().Trim();
                PdfPCell clValorRenglon30 = new PdfPCell(new Phrase(_ValorRenglon30, _FontDetalle));
                clValorRenglon30.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionE.AddCell(clValorRenglon30);

                //--AQUI ADICIONAMOS LA TABLA AL DOCUMENTO
                doc.Add(TblSeccionE);
                #endregion

                #region SECCION F. LIQUIDACIONES DE RETENCIONES
                PdfPTable TblSeccionF = new PdfPTable(4);
                TblSeccionF.TotalWidth = _AnchoTabla;
                TblSeccionF.LockedWidth = true;
                TblSeccionF.WidthPercentage = 100;
                /// Left aLign
                TblSeccionF.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionF.SpacingAfter = 0;
                float[] TblWidthsF = new float[4];
                TblWidthsF[0] = 20.5f;
                TblWidthsF[1] = 9f;
                TblWidthsF[2] = 200f;
                TblWidthsF[3] = 80f;
                // Set the column widths on table creation. Unlike HTML cells cannot be sized.
                TblSeccionF.SetWidths(TblWidthsF);

                string _SeccionF = "F. LIQUIDACIÓN DE\nRETENCIONES";
                PdfPCell clSeccionF = new PdfPCell(new Phrase(_SeccionF, _FontSecciones));
                clSeccionF.Rowspan = 15;
                clSeccionF.Colspan = 1;
                //clSeccionD.BorderWidth = 1;
                clSeccionF.Rotation = 90;
                clSeccionF.VerticalAlignment = Element.ALIGN_CENTER;
                clSeccionF.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionF.AddCell(clSeccionF);

                //--RENGLON 31
                PdfPCell clRenglon31 = new PdfPCell(new Phrase("31", _standardFontRenglon));
                clRenglon31.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionF.AddCell(clRenglon31);

                string _DescRenglon31 = this.LblDescRenglon31.Text.ToString().Trim();
                PdfPCell clDescRenglon31 = new PdfPCell(new Phrase(_DescRenglon31, _FontDetalle));
                clDescRenglon31.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionF.AddCell(clDescRenglon31);

                string _ValorRenglon31 = this.LblValorRenglon32.Text.ToString().Trim();
                PdfPCell clValorRenglon31 = new PdfPCell(new Phrase(_ValorRenglon31, _FontDetalle));
                clValorRenglon31.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionF.AddCell(clValorRenglon31);

                //--RENGLON 32
                PdfPCell clRenglon32 = new PdfPCell(new Phrase("32", _standardFontRenglon));
                clRenglon32.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionF.AddCell(clRenglon32);

                //string _DescRenglon32 = "     MENOS SALDO A FAVOR DEL PERIODO ANTERIOR SIN SOLICITUD DE DEVOLUCIÓN O COMPENSACIÓN";
                string _DescRenglon32 = this.LblDescRenglon32.Text.ToString().Trim();
                PdfPCell clDescRenglon32 = new PdfPCell(new Phrase(_DescRenglon32, _FontDetalle));
                clDescRenglon32.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionF.AddCell(clDescRenglon32);

                string _ValorRenglon32 = this.LblValorRenglon32.Text.ToString().Trim();
                PdfPCell clValorRenglon32 = new PdfPCell(new Phrase(_ValorRenglon32, _FontDetalle));
                clValorRenglon32.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionF.AddCell(clValorRenglon32);

                //--RENGLON 33
                PdfPCell clRenglon33 = new PdfPCell(new Phrase("33", _standardFontRenglon));
                clRenglon33.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionF.AddCell(clRenglon33);

                //string _DescRenglon33 = "TOTAL SALDO A CARGO (RENGLÓN 25-26-27-28-29+30+31-32)";
                string _DescRenglon33 = this.LblDescRenglon33.Text.ToString().Trim();
                PdfPCell clDescRenglon33 = new PdfPCell(new Phrase(_DescRenglon33, _FontDetalle));
                clDescRenglon33.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionF.AddCell(clDescRenglon33);

                string _ValorRenglon33 = this.LblValorRenglon33.Text.ToString().Trim();
                PdfPCell clValorRenglon33 = new PdfPCell(new Phrase(_ValorRenglon33, _FontDetalle));
                clValorRenglon33.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionF.AddCell(clValorRenglon33);

                //--RENGLON 34
                PdfPCell clRenglon34 = new PdfPCell(new Phrase("34", _standardFontRenglon));
                clRenglon34.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionF.AddCell(clRenglon34);

                //string _DescRenglon34 = "TOTAL SALDO A FAVOR (RENGLÓN 25-26-27-28-29+30+31-32) si el resultado es menor a cero";
                string _DescRenglon34 = this.LblDescRenglon34.Text.ToString().Trim();
                PdfPCell clDescRenglon34 = new PdfPCell(new Phrase(_DescRenglon34, _FontDetalle));
                clDescRenglon34.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionF.AddCell(clDescRenglon34);

                string _ValorRenglon34 = this.LblValorRenglon34.Text.ToString().Trim();
                PdfPCell clValorRenglon34 = new PdfPCell(new Phrase(_ValorRenglon34, _FontDetalle));
                clValorRenglon34.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionF.AddCell(clValorRenglon34);

                //--RENGLON 35
                PdfPCell clRenglon35 = new PdfPCell(new Phrase("35", _standardFontRenglon));
                clRenglon35.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionF.AddCell(clRenglon35);

                //string _DescRenglon35 = "VALOR A PAGAR";
                string _DescRenglon35 = this.LblDescRenglon35.Text.ToString().Trim();
                PdfPCell clDescRenglon35 = new PdfPCell(new Phrase(_DescRenglon35, _FontDetalle));
                clDescRenglon35.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionF.AddCell(clDescRenglon35);

                string _ValorRenglon35 = this.LblValorRenglon35.Text.ToString().Trim();
                PdfPCell clValorRenglon35 = new PdfPCell(new Phrase(_ValorRenglon35, _FontDetalle));
                clValorRenglon35.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionF.AddCell(clValorRenglon35);

                //--RENGLON 36
                PdfPCell clRenglon36 = new PdfPCell(new Phrase("36", _standardFontRenglon));
                clRenglon36.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionF.AddCell(clRenglon36);

                //string _DescRenglon36 = "DESCUENTO POR PRONTO PAGO (Si existe, liquídelo según el Acuerdo Municipal o Distrital)";
                string _DescRenglon36 = this.LblDescRenglon36.Text.ToString().Trim();
                PdfPCell clDescRenglon36 = new PdfPCell(new Phrase(_DescRenglon36, _FontDetalle));
                clDescRenglon36.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionF.AddCell(clDescRenglon36);

                string _ValorRenglon36 = this.LblValorRenglon36.Text.ToString().Trim();
                PdfPCell clValorRenglon36 = new PdfPCell(new Phrase(_ValorRenglon36, _FontDetalle));
                clValorRenglon36.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionF.AddCell(clValorRenglon36);

                //--RENGLON 37
                PdfPCell clRenglon37 = new PdfPCell(new Phrase("37", _standardFontRenglon));
                clRenglon37.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionF.AddCell(clRenglon37);

                //string _DescRenglon37 = "INTERESES DE MORA";
                string _DescRenglon37 = this.LblDescRenglon37.Text.ToString().Trim();
                PdfPCell clDescRenglon37 = new PdfPCell(new Phrase(_DescRenglon37, _FontDetalle));
                clDescRenglon37.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionF.AddCell(clDescRenglon37);

                string _ValorRenglon37 = this.LblValorRenglon37.Text.ToString().Trim();
                PdfPCell clValorRenglon37 = new PdfPCell(new Phrase(_ValorRenglon37, _FontDetalle));
                clValorRenglon37.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionF.AddCell(clValorRenglon37);

                //--RENGLON 38
                PdfPCell clRenglon38 = new PdfPCell(new Phrase("38", _standardFontRenglon));
                clRenglon38.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionF.AddCell(clRenglon38);

                //string _DescRenglon38 = "TOTAL A PAGAR (RENGLÓN 35-36+37)";
                string _DescRenglon38 = this.LblDescRenglon38.Text.ToString().Trim();
                PdfPCell clDescRenglon38 = new PdfPCell(new Phrase(_DescRenglon38, _FontDetalle));
                clDescRenglon38.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionF.AddCell(clDescRenglon38);

                string _ValorRenglon38 = this.LblValorRenglon38.Text.ToString().Trim();
                PdfPCell clValorRenglon38 = new PdfPCell(new Phrase(_ValorRenglon38, _FontDetalle));
                clValorRenglon38.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionF.AddCell(clValorRenglon38);

                //--AQUI ADICIONAMOS LA TABLA AL DOCUMENTO
                doc.Add(TblSeccionF);
                #endregion

                #region SECCION G. SUB-TOTALES
                PdfPTable TblSeccionG = new PdfPTable(4);
                TblSeccionG.TotalWidth = _AnchoTabla;
                TblSeccionG.LockedWidth = true;
                TblSeccionG.WidthPercentage = 100;
                /// Left aLign
                TblSeccionG.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionG.SpacingAfter = 0;
                float[] TblWidthsG = new float[4];
                TblWidthsG[0] = 20.5f;
                TblWidthsG[1] = 9f;
                TblWidthsG[2] = 200f;
                TblWidthsG[3] = 80f;
                // Set the column widths on table creation. Unlike HTML cells cannot be sized.
                TblSeccionG.SetWidths(TblWidthsG);

                string _SeccionG = "G. SUB-\nTOTALES";
                PdfPCell clSeccionG = new PdfPCell(new Phrase(_SeccionG, _FontSecciones));
                clSeccionG.Rowspan = 15;
                clSeccionG.Colspan = 1;
                //clSeccionD.BorderWidth = 1;
                clSeccionG.Rotation = 90;
                clSeccionG.VerticalAlignment = Element.ALIGN_CENTER;
                clSeccionG.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionG.AddCell(clSeccionG);

                #region AQUI VALIDAMOS LA OPCION DE SANCION
                //--RENGLON 39
                PdfPCell clRenglon39 = new PdfPCell(new Phrase("39", _standardFontRenglon));
                clRenglon39.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionG.AddCell(clRenglon39);

                string _DescripcionSancion = this.TxtDescripcionSancion.Text.ToString().Trim().ToUpper();
                string _DescRenglon39 = "";

                //--AQUI VALIDAMOS EL TIPO DE SANCION.
                if (this.ViewState["Sancion"].ToString().Trim().Equals("1"))
                {
                    _DescRenglon39 = "SANCIONES Extemporaneidad:  X   Corrección:     Inexactitud:        Otra Cuál:___________";
                }
                else if (this.ViewState["Sancion"].ToString().Trim().Equals("2"))
                {
                    _DescRenglon39 = "SANCIONES Extemporaneidad:     Corrección:  X   Inexactitud:        Otra Cuál:___________";
                }
                else if (this.ViewState["Sancion"].ToString().Trim().Equals("3"))
                {
                    _DescRenglon39 = "SANCIONES Extemporaneidad:     Corrección:     Inexactitud:   X     Otra Cuál:___________";
                }
                else if (this.ViewState["Sancion"].ToString().Trim().Equals("4"))
                {
                    _DescRenglon39 = "SANCIONES Extemporaneidad:     Corrección:     Inexactitud:        Otra X Cuál: " + _DescripcionSancion;
                }
                else
                {
                    _DescRenglon39 = "SANCIONES Extemporaneidad:     Corrección:     Inexactitud:        Otra X Cuál: NO IDENTIFICADA";
                }

                PdfPCell clDescRenglon39 = new PdfPCell(new Phrase(_DescRenglon39, _FontDetalle));
                clDescRenglon39.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionG.AddCell(clDescRenglon39);

                string _ValorRenglon39 = String.Format(String.Format("{0:###,###,##0}", round(Double.Parse(this.TxtValorRenglon39.Text.ToString().Trim()))));
                PdfPCell clValorRenglon39 = new PdfPCell(new Phrase(_ValorRenglon39, _FontDetalle));
                clValorRenglon39.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionG.AddCell(clValorRenglon39);
                #endregion

                //--RENGLON 40
                PdfPCell clRenglon40 = new PdfPCell(new Phrase("40", _standardFontRenglon));
                clRenglon40.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionG.AddCell(clRenglon40);

                string _DescRenglon40 = this.LblDescRenglon40.Text.ToString().Trim();
                PdfPCell clDescRenglon40 = new PdfPCell(new Phrase(_DescRenglon40, _FontDetalle));
                clDescRenglon40.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionG.AddCell(clDescRenglon40);

                string _ValorRenglon40 = this.LblValorRenglon40.Text.ToString().Trim();
                PdfPCell clValorRenglon40 = new PdfPCell(new Phrase(_ValorRenglon40, _FontDetalle));
                clValorRenglon40.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionG.AddCell(clValorRenglon40);

                //--RENGLON 41
                PdfPCell clRenglon41 = new PdfPCell(new Phrase("41", _standardFontRenglon));
                clRenglon41.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionG.AddCell(clRenglon41);

                string _DescRenglon41 = this.LblDescRenglon41.Text.ToString().Trim();
                PdfPCell clDescRenglon41 = new PdfPCell(new Phrase(_DescRenglon41, _FontDetalle));
                clDescRenglon41.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionG.AddCell(clDescRenglon41);

                string _ValorRenglon41 = this.LblValorRenglon41.Text.ToString().Trim();
                PdfPCell clValorRenglon41 = new PdfPCell(new Phrase(_ValorRenglon41, _FontDetalle));
                clValorRenglon41.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionG.AddCell(clValorRenglon41);

                //--AQUI ADICIONAMOS LA TABLA AL DOCUMENTO
                doc.Add(TblSeccionG);
                #endregion

                #region SECCION H. PAGO
                PdfPTable TblSeccionH = new PdfPTable(4);
                TblSeccionH.TotalWidth = _AnchoTabla;
                TblSeccionH.LockedWidth = true;
                TblSeccionH.WidthPercentage = 100;
                /// Left aLign
                TblSeccionH.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionH.SpacingAfter = 0;
                float[] TblWidthsH = new float[4];
                TblWidthsH[0] = 20.5f;
                TblWidthsH[1] = 9f;
                TblWidthsH[2] = 200f;
                TblWidthsH[3] = 80f;
                // Set the column widths on table creation. Unlike HTML cells cannot be sized.
                TblSeccionH.SetWidths(TblWidthsH);

                string _SeccionH = "H. PAGO";
                PdfPCell clSeccionH = new PdfPCell(new Phrase(_SeccionH, _FontSecciones));
                clSeccionH.Rowspan = 4;
                clSeccionH.Colspan = 1;
                //clSeccionE.BorderWidth = 1;
                clSeccionH.Rotation = 90;
                clSeccionH.VerticalAlignment = Element.ALIGN_CENTER;
                clSeccionH.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionH.AddCell(clSeccionH);

                //--RENGLON 42
                PdfPCell clRenglon42 = new PdfPCell(new Phrase("42", _standardFontRenglon));
                clRenglon42.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionH.AddCell(clRenglon42);

                string _DescRenglon42 = this.LblDescRenglon42.Text.ToString().Trim();
                PdfPCell clDescRenglon42 = new PdfPCell(new Phrase(_DescRenglon42, _FontDetalle));
                clDescRenglon42.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionH.AddCell(clDescRenglon42);

                string _ValorRenglon42 = this.LblValorRenglon42.Text.ToString().Trim();
                PdfPCell clValorRenglon42 = new PdfPCell(new Phrase(_ValorRenglon42, _FontDetalle));
                clValorRenglon42.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionH.AddCell(clValorRenglon42);

                //--RENGLON 43
                PdfPCell clRenglon43 = new PdfPCell(new Phrase("43", _standardFontRenglon));
                clRenglon43.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionH.AddCell(clRenglon43);

                string _DescRenglon43 = this.LblDescRenglon42.Text.ToString().Trim();
                PdfPCell clDescRenglon43 = new PdfPCell(new Phrase(_DescRenglon43, _FontDetalle));
                clDescRenglon43.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionH.AddCell(clDescRenglon43);

                string _ValorRenglon43 = String.Format(String.Format("{0:###,###,##0}", round(Double.Parse(this.TxtValorRenglon43.Text.ToString().Trim()))));
                PdfPCell clValorRenglon43 = new PdfPCell(new Phrase(_ValorRenglon43, _FontDetalle));
                clValorRenglon43.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionH.AddCell(clValorRenglon43);

                //--RENGLON 37
                PdfPCell clRenglon44 = new PdfPCell(new Phrase("44", _standardFontRenglon));
                clRenglon44.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionH.AddCell(clRenglon44);

                string _DescRenglon44 = this.LblDescRenglon44.Text.ToString().Trim();
                PdfPCell clDescRenglon44 = new PdfPCell(new Phrase(_DescRenglon44, _FontDetalle));
                clDescRenglon44.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionH.AddCell(clDescRenglon44);

                string _ValorRenglon44 = this.LblValorRenglon44.Text.ToString().Trim();
                PdfPCell clValorRenglon44 = new PdfPCell(new Phrase(_ValorRenglon44, _FontDetalle));
                clValorRenglon44.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionH.AddCell(clValorRenglon44);

                //--AQUI ADICIONAMOS LA TABLA AL DOCUMENTO
                doc.Add(TblSeccionH);
                #endregion

                #region SECCION F. FIRMAS
                PdfPTable TblSeccionFirmas = new PdfPTable(3);
                TblSeccionFirmas.TotalWidth = _AnchoTabla;
                TblSeccionFirmas.LockedWidth = true;
                TblSeccionFirmas.WidthPercentage = 100;
                /// Left aLign
                TblSeccionF.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionF.SpacingAfter = 0;
                float[] TblWidthsFirmas = new float[3];
                TblWidthsFirmas[0] = 23f;
                TblWidthsFirmas[1] = 160f;
                TblWidthsFirmas[2] = 160f;
                // Set the column widths on table creation. Unlike HTML cells cannot be sized.
                TblSeccionFirmas.SetWidths(TblWidthsFirmas);

                #region AQUI VALIDAMOS LA VARIABLE QUE CONTIENE LA IMAGEN DE LOS FIRMANTES
                //--IMAGEN FIRMANTE 1
                byte[] _ImagenFirma1 = (byte[])this.ViewState["ImagenFirma1"];
                byte[] _ImagenFirma2 = (byte[])this.ViewState["ImagenFirma2"];
                //--VALIDAR SI ALGUNA DE LAS FIRMAS VIENE LLENA
                if (_ImagenFirma1 != null || _ImagenFirma2 != null)
                {
                    #region AQUI MOSTRAMOS LOS DATOS DE LOS FIRMANTES MAS LA IMAGEN DE LAS FIRMAS 
                    string _SeccionFirm = "F. FIRMAS";
                    PdfPCell clSeccionFirm = new PdfPCell(new Phrase(_SeccionFirm, _FontSecciones));
                    clSeccionFirm.Rowspan = 4;
                    clSeccionFirm.Colspan = 1;
                    clSeccionFirm.Rotation = 90;
                    clSeccionFirm.VerticalAlignment = Element.ALIGN_CENTER;
                    clSeccionFirm.HorizontalAlignment = Element.ALIGN_CENTER;
                    TblSeccionFirmas.AddCell(clSeccionFirm);

                    //--RENGLON DATOS FIRMA DECLARANTE 1
                    string _DescFirma1 = "FIRMA DEL DECLARANTE";
                    PdfPCell clRenglonFirma1 = new PdfPCell(new Phrase(_DescFirma1, _FontFirmas));
                    clRenglonFirma1.HorizontalAlignment = Element.ALIGN_LEFT;
                    TblSeccionFirmas.AddCell(clRenglonFirma1);

                    //--OBTENER ID DEL 
                    int _IdRol = this.ViewState["IdRolFirmante2"].ToString().Trim().Length > 0 ? Int32.Parse(this.ViewState["IdRolFirmante2"].ToString().Trim()) : -1;
                    string _DescFirma2 = "";
                    //--AQUI VALIDAMOS EL TIPO DE IDENTIFICACION.
                    if (_IdRol == 5 || _IdRol == 10)
                    {
                        _DescFirma2 = "FIRMA DEL CONTADOR:       REVISOR FISCAL: X";
                    }
                    else if (_IdRol == 6)
                    {
                        _DescFirma2 = "FIRMA DEL CONTADOR: X     REVISOR FISCAL:";
                    }
                    else
                    {
                        _DescFirma2 = "FIRMA DEL CONTADOR:       REVISOR FISCAL:";
                    }

                    PdfPCell clRenglonFirma2 = new PdfPCell(new Phrase(_DescFirma2, _FontFirmas));
                    clRenglonFirma2.HorizontalAlignment = Element.ALIGN_LEFT;
                    TblSeccionFirmas.AddCell(clRenglonFirma2);

                    #region AQUI VALIDAMOS LA VARIABLE QUE CONTIENE LA IMAGEN DE LOS FIRMANTES
                    //--AQUI VALIDAMOS LA VARIABLE QUE CONTIENE LA IMAGEN DE LOS FIRMANTES
                    //--IMAGEN FIRMANTE 1
                    if (_ImagenFirma1 != null)
                    {
                        iTextSharp.text.Image _ImgFirma1 = iTextSharp.text.Image.GetInstance(_ImagenFirma1);
                        _ImgFirma1.ScaleAbsolute(100f, 25f);
                        PdfPCell clImagen1 = new PdfPCell(_ImgFirma1);
                        clImagen1.HorizontalAlignment = Element.ALIGN_LEFT;
                        TblSeccionFirmas.AddCell(clImagen1);
                    }
                    else
                    {
                        PdfPCell clImagen1 = new PdfPCell(new Phrase("", _FontFirmas));
                        clImagen1.HorizontalAlignment = Element.ALIGN_LEFT;
                        TblSeccionFirmas.AddCell(clImagen1);
                    }

                    //--IMAGEN FIRMANTE 2
                    if (_ImagenFirma2 != null)
                    {
                        iTextSharp.text.Image _ImgFirma2 = iTextSharp.text.Image.GetInstance(_ImagenFirma2);
                        _ImgFirma2.ScaleAbsolute(100f, 25f);
                        PdfPCell clImagen2 = new PdfPCell(_ImgFirma2);
                        clImagen2.HorizontalAlignment = Element.ALIGN_LEFT;
                        TblSeccionFirmas.AddCell(clImagen2);
                    }
                    else
                    {
                        PdfPCell clImagen2 = new PdfPCell(new Phrase("", _FontFirmas));
                        clImagen2.HorizontalAlignment = Element.ALIGN_LEFT;
                        TblSeccionFirmas.AddCell(clImagen2);
                    }
                    #endregion
                    //--
                    #endregion
                }
                else
                {
                    #region AQUI MOSTRAMOS LOS DATOS DE LOS FIRMANTES MAS LA IMAGEN DE LAS FIRMAS 
                    string _SeccionFirm = "F. FIRMAS";
                    PdfPCell clSeccionFirm = new PdfPCell(new Phrase(_SeccionFirm, _FontSecciones));
                    clSeccionFirm.Rowspan = 3;
                    clSeccionFirm.Colspan = 1;
                    clSeccionFirm.Rotation = 90;
                    clSeccionFirm.VerticalAlignment = Element.ALIGN_CENTER;
                    clSeccionFirm.HorizontalAlignment = Element.ALIGN_CENTER;
                    TblSeccionFirmas.AddCell(clSeccionFirm);

                    //--RENGLON DATOS FIRMA DECLARANTE 1
                    string _DescFirma1 = "FIRMA DEL DECLARANTE\n\n\n\n";
                    PdfPCell clRenglonFirma1 = new PdfPCell(new Phrase(_DescFirma1, _FontFirmas));
                    clRenglonFirma1.HorizontalAlignment = Element.ALIGN_LEFT;
                    TblSeccionFirmas.AddCell(clRenglonFirma1);

                    //--OBTENER ID DEL 
                    int _IdRol = this.ViewState["IdRolFirmante2"].ToString().Trim().Length > 0 ? Int32.Parse(this.ViewState["IdRolFirmante2"].ToString().Trim()) : -1;
                    string _DescFirma2 = "";
                    //--AQUI VALIDAMOS EL TIPO DE IDENTIFICACION.
                    if (_IdRol == 5 || _IdRol == 10)
                    {
                        _DescFirma2 = "FIRMA DEL CONTADOR:       REVISOR FISCAL: X\n\n\n\n";
                    }
                    else if (_IdRol == 6)
                    {
                        _DescFirma2 = "FIRMA DEL CONTADOR: X     REVISOR FISCAL:\n\n\n\n";
                    }
                    else
                    {
                        _DescFirma2 = "FIRMA DEL CONTADOR:       REVISOR FISCAL:\n\n\n\n";
                    }

                    PdfPCell clRenglonFirma2 = new PdfPCell(new Phrase(_DescFirma2, _FontFirmas));
                    clRenglonFirma2.HorizontalAlignment = Element.ALIGN_LEFT;
                    TblSeccionFirmas.AddCell(clRenglonFirma2);
                    //--
                    #endregion
                }
                #endregion

                #region AQUI MOSTRAMOS LOS NOMBRES, TIPO Y NUMERO DE DOCUMENTO DE LOS FIRMANTES
                //--RENGLON DATOS FIRMA DECLARANTE 2
                string _DescLineaFirma1 = "NOMBRE: " + this.CmbFirmante1.SelectedItem.Text.ToString().Trim();
                PdfPCell clRenglonLineaFirma1 = new PdfPCell(new Phrase(_DescLineaFirma1, _FontFirmas));
                clRenglonLineaFirma1.BorderWidthBottom = 1f;
                clRenglonLineaFirma1.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionFirmas.AddCell(clRenglonLineaFirma1);

                string _DescLineaFirma2 = "NOMBRE: " + this.CmbFirmante2.SelectedItem.Text.ToString().Trim();
                PdfPCell clRenglonLineaFirma2 = new PdfPCell(new Phrase(_DescLineaFirma2, _FontFirmas));
                clRenglonLineaFirma2.BorderWidthBottom = 1f;
                clRenglonLineaFirma2.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionFirmas.AddCell(clRenglonLineaFirma2);

                //--RENGLON DATOS FIRMA DECLARANTE 3
                string _DescDocFirma1 = "";
                if (this.RbCedulaCiudFirm1.Checked)
                {
                    _DescDocFirma1 = "C.C.:  X   C.E.:  " + this.LblNumeroFirm1.Text.ToString().Trim();
                }
                if (this.RbCedulaExtrFirm1.Checked)
                {
                    _DescDocFirma1 = "C.C.:      C.E.:  X " + this.LblNumeroFirm1.Text.ToString().Trim();
                }

                PdfPCell clRenglonDocFirma1 = new PdfPCell(new Phrase(_DescDocFirma1, _FontFirmas));
                clRenglonDocFirma1.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionFirmas.AddCell(clRenglonDocFirma1);

                string _DescDocFirma2 = "";
                if (this.RbCedulaCiudFirm2.Checked)
                {
                    _DescDocFirma2 = "C.C.: X   C.E.: " + this.LblNumDocFirm2.Text.ToString().Trim() + " T.P.: " + this.LblNumTpFirm2.Text.ToString().Trim();
                }
                else if (this.RbCedulaExtrFirm2.Checked)
                {
                    _DescDocFirma2 = "C.C.:     C.E.: X " + this.LblNumDocFirm2.Text.ToString().Trim() + " T.P.: " + this.LblNumTpFirm2.Text.ToString().Trim();
                }
                else
                {
                    _DescDocFirma2 = "C.C.:     C.E.:  " + this.LblNumDocFirm2.Text.ToString().Trim() + " T.P.: " + this.LblNumTpFirm2.Text.ToString().Trim();
                }

                PdfPCell clRenglonDocFirma2 = new PdfPCell(new Phrase(_DescDocFirma2, _FontFirmas));
                clRenglonDocFirma2.HorizontalAlignment = Element.ALIGN_LEFT;
                TblSeccionFirmas.AddCell(clRenglonDocFirma2);
                #endregion

                //--AQUI ADICIONAMOS LA TABLA AL DOCUMENTO
                doc.Add(TblSeccionFirmas);
                #endregion

                #region SECCION CODIGO DE BARRAS 1
                PdfPTable TblSeccionCB = new PdfPTable(2);
                TblSeccionCB.TotalWidth = _AnchoTabla;
                TblSeccionCB.LockedWidth = true;
                TblSeccionCB.WidthPercentage = 80;
                /// Left aLign
                TblSeccionCB.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionCB.SpacingAfter = 0;
                float[] TblWidthsCB = new float[2];
                TblWidthsCB[0] = 200f;
                TblWidthsCB[1] = 200f;
                // Set the column widths on table creation. Unlike HTML cells cannot be sized.
                TblSeccionCB.SetWidths(TblWidthsCB);

                //--ESPACIO PARA CÓDIGO DE BARRAS
                PdfPTable TblSeccionCB1 = new PdfPTable(1);
                TblSeccionCB1.WidthPercentage = 80;
                string _DescCodBarras1 = "\n\nESPACIO PARA CÓDIGO DE BARRAS\n\n\n\n";
                PdfPCell clCodBarras1 = new PdfPCell(new Phrase(_DescCodBarras1, _FontCodigosQr));
                clCodBarras1.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionCB1.AddCell(clCodBarras1);
                TblSeccionCB.AddCell(TblSeccionCB1);

                string _DescCodBarras2 = "\n\nESPACIO PARA NÚMERO DE REFERENCIA RECAUDO\n\nFORMULARIO No.";
                PdfPCell clCodBarras2 = new PdfPCell(new Phrase(_DescCodBarras2, _FontCodigosQr));
                clCodBarras2.HorizontalAlignment = Element.ALIGN_RIGHT;
                TblSeccionCB.AddCell(clCodBarras2);

                //--AQUI ADICIONAMOS LA TABLA AL DOCUMENTO
                doc.Add(TblSeccionCB);
                #endregion

                #region SECCION CODIGO DE BARRAS 2
                PdfPTable TblSeccionCB2 = new PdfPTable(3);
                TblSeccionCB2.TotalWidth = _AnchoTabla;
                TblSeccionCB2.LockedWidth = true;
                TblSeccionCB2.WidthPercentage = 120;
                /// Left aLign
                TblSeccionCB2.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionCB2.SpacingAfter = 0;
                float[] TblWidthsCB2 = new float[3];
                TblWidthsCB2[0] = 80f;
                TblWidthsCB2[1] = 120f;
                TblWidthsCB2[2] = 350f;
                // Set the column widths on table creation. Unlike HTML cells cannot be sized.
                TblSeccionCB2.SetWidths(TblWidthsCB2);

                PdfPTable TblSeccionCB21 = new PdfPTable(1);
                TblSeccionCB21.WidthPercentage = 80;
                //--ESPACIO PARA CÓDIGO DE BARRAS
                string _DescCodigoQr = "\n\n\nESPACIO PARA\nCÓDIGO QR\n\n\n";
                PdfPCell clCodigoQr = new PdfPCell(new Phrase(_DescCodigoQr, _FontCodigosQr));
                clCodigoQr.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionCB21.AddCell(clCodigoQr);
                TblSeccionCB2.AddCell(TblSeccionCB21);

                string _DescSelloTimbre = "\n\n\nESPACIO PARA\nSELLO O TIMBRE\n\n\n";
                PdfPCell clSelloTimbre = new PdfPCell(new Phrase(_DescSelloTimbre, _FontCodigosQr));
                clSelloTimbre.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionCB2.AddCell(clSelloTimbre);

                string _DescSerialAutom = "\n\n\nESPACIO PARA SERIAL AUTOMÁTICO DE TRANSACCIÓN O MECANISMO DE\nIDENTIFICACIÓN DE RECAUDO\n\n\n";
                PdfPCell clSerialAutom = new PdfPCell(new Phrase(_DescSerialAutom, _FontCodigosQr));
                clSerialAutom.HorizontalAlignment = Element.ALIGN_CENTER;
                TblSeccionCB2.AddCell(clSerialAutom);

                //--AQUI ADICIONAMOS LA TABLA AL DOCUMENTO
                doc.Add(TblSeccionCB2);
                #endregion

                #region MOSTRAR LAS ACTIVIDADES ECONOMISCAS AL RESPALDO DE LA PAGINA
                DataTable dtActEconomica = new DataTable();
                dtActEconomica = (DataTable)this.ViewState["dtActEconomica"];

                if (dtActEconomica != null)
                {
                    //--SOLO SE IOMPRIMEN AL RESPALDO SIEMPRE Y CUANDO LA LISTA ES MAYOR A 3 REGISTROS
                    if (dtActEconomica.Rows.Count > 3)
                    {
                        //--AQUI ESCRIBIMOS EL RESTO DE LAS ACTIVIDADES EN OTRA OTRA PARA QUE SEA IMPRESA AL RESPALDO DEL IMPUESTO
                        #region SECCION C. DISCRIMINACIÓN DE ACTIVIDADES GRAVADAS
                        #region AQUI DEFINIMOS EL NOMBRE Y ROTACION DEL LABEL
                        PdfPTable TblSeccionCAux = new PdfPTable(6);
                        TblSeccionCAux.TotalWidth = _AnchoTabla;
                        TblSeccionCAux.LockedWidth = true;
                        TblSeccionCAux.WidthPercentage = 100;
                        /// Left aLign
                        TblSeccionCAux.HorizontalAlignment = Element.ALIGN_CENTER;
                        TblSeccionCAux.SpacingAfter = 10;
                        float[] TblWidthsCAux = new float[6];
                        TblWidthsCAux[0] = 25f;
                        TblWidthsCAux[1] = 100f;
                        TblWidthsCAux[2] = 70f;
                        TblWidthsCAux[3] = 70f;
                        TblWidthsCAux[4] = 70f;
                        TblWidthsCAux[5] = 70f;
                        // Set the column widths on table creation. Unlike HTML cells cannot be sized.
                        TblSeccionCAux.SetWidths(TblWidthsCAux);

                        string _SeccionCAux = "C. DISCRIMINACIÓN DE\nACTIVIDADES GRAVADAS";
                        PdfPCell clSeccionCAux = new PdfPCell(new Phrase(_SeccionCAux, _FontSecciones));
                        clSeccionCAux.Rowspan = 14;
                        clSeccionCAux.Colspan = 1;
                        //clSeccionB.BorderWidth = 1;
                        clSeccionCAux.Rotation = 90;
                        clSeccionCAux.VerticalAlignment = Element.ALIGN_CENTER;
                        clSeccionCAux.HorizontalAlignment = Element.ALIGN_CENTER;
                        TblSeccionCAux.AddCell(clSeccionCAux);
                        #endregion

                        #region DEFINIR NOMBRE DE COLUMNAS DE LA TABLA
                        //--DEFINIR NOMBRE DE COLUMNAS DE LA TABLA
                        PdfPCell clActGravadasAux = new PdfPCell(new Phrase("ACTIVIDADES GRAVADAS", _FontDetalle));
                        clActGravadasAux.HorizontalAlignment = Element.ALIGN_CENTER;
                        TblSeccionCAux.AddCell(clActGravadasAux);

                        //string _CodigoActAux = "CÓDIGO";
                        PdfPCell clCodigoActAux = new PdfPCell(new Phrase("CÓDIGO", _FontDetalle));
                        clCodigoActAux.HorizontalAlignment = Element.ALIGN_CENTER;
                        TblSeccionCAux.AddCell(clCodigoActAux);

                        //string _IngGravados = "INGRESOS GRAVADOS";
                        PdfPCell clIngGravadosAux = new PdfPCell(new Phrase("INGRESOS GRAVADOS", _FontDetalle));
                        clIngGravadosAux.HorizontalAlignment = Element.ALIGN_CENTER;
                        TblSeccionCAux.AddCell(clIngGravadosAux);

                        //string _TarifaxMil = "TARIFA (POR MIL)";
                        PdfPCell clTarifaxMilAux = new PdfPCell(new Phrase("TARIFA (POR MIL)", _FontDetalle));
                        //clTarifaxMilAux.Colspan = 2;
                        clTarifaxMilAux.HorizontalAlignment = Element.ALIGN_CENTER;
                        TblSeccionCAux.AddCell(clTarifaxMilAux);

                        PdfPCell clValorActAux = new PdfPCell(new Phrase("", _FontDetalle));
                        //clValorAct.Colspan = 2;
                        clValorActAux.HorizontalAlignment = Element.ALIGN_CENTER;
                        TblSeccionCAux.AddCell(clValorActAux);
                        #endregion
                        #endregion

                        int _ContadorRowsAct = 4;
                        double _ValorActividad = 0;
                        foreach (DataRow rowItem in dtActEconomica.Rows)
                        {
                            #region AQUI PINTAMOS LAS ACTIVIDADES ECONOMICAS RESTANTES SI LAS HAY EN EL DATATABLE
                            //--SI EL CONTADOR DEL DATAROW ES IGUAL A 4 SE PROCEDE A PINTAR LAS DE
                            if (_ContadorRowsAct == 4)
                            {
                                //--AQUI OBTENEMOS LOS DATOS DE LA ACTIVIDAD ECONOMICA
                                string _CodigoActividad = rowItem["codigo_actividad"].ToString().Trim();
                                int _IdCalcularTarifaPor = Int32.Parse(rowItem["idtipo_calculo"].ToString().Trim());
                                int _IdTipoTarifa = Int32.Parse(rowItem["idtipo_tarifa"].ToString().Trim());
                                double _TarifaLey = Double.Parse(rowItem["tarifa_ley"].ToString().Trim());
                                double _TarifaMunicipio = Double.Parse(rowItem["tarifa_municipio"].ToString().Trim());
                                string _SaldoFinal1 = rowItem["saldo_final"].ToString().Trim().Replace("-", "");
                                double _SaldoFinal = Double.Parse(_SaldoFinal1);

                                #region DEFINIR VALORES DE COLUMNAS DE LA TABLA
                                //--DEFINIR VALORES CAMPO ACTIVIDAD 1
                                PdfPCell clActPrincipalAux = new PdfPCell(new Phrase("ACTIVIDAD " + _ContadorRowsAct, _FontDetalle));
                                clActPrincipalAux.HorizontalAlignment = Element.ALIGN_LEFT;
                                TblSeccionCAux.AddCell(clActPrincipalAux);

                                //string _CodigoAct1Aux = this.LblCodActividad1.Text.ToString().Trim();
                                PdfPCell clCodigoAct1Aux = new PdfPCell(new Phrase(_CodigoActividad, _FontDetalle));
                                clCodigoAct1Aux.HorizontalAlignment = Element.ALIGN_CENTER;
                                TblSeccionCAux.AddCell(clCodigoAct1Aux);

                                string _IngGravados1Aux = String.Format(String.Format("{0:###,###,##0}", round(_SaldoFinal)));
                                PdfPCell clIngGravados1Aux = new PdfPCell(new Phrase(_IngGravados1Aux, _FontDetalle));
                                clIngGravados1Aux.HorizontalAlignment = Element.ALIGN_CENTER;
                                TblSeccionCAux.AddCell(clIngGravados1Aux);

                                string _TarifaAct1Aux = _TarifaMunicipio.ToString().Trim();
                                PdfPCell clTarifaAct1Aux = new PdfPCell(new Phrase(_TarifaAct1Aux, _FontDetalle));
                                clTarifaAct1Aux.HorizontalAlignment = Element.ALIGN_CENTER;
                                TblSeccionCAux.AddCell(clTarifaAct1Aux);

                                //--AQUI HACEMOS EL CALCULO DE LA TARIFA
                                if (_IdTipoTarifa == 1)      //--1. TARIFA DE LEY
                                {
                                    _ValorActividad = ((_SaldoFinal * _TarifaLey) / 100);
                                }
                                else if (_IdTipoTarifa == 2)      //--1. TARIFA DEL MUNICIPIO
                                {
                                    _ValorActividad = ((_SaldoFinal * _TarifaMunicipio) / 100);
                                }

                                string _ValorAct1Aux = String.Format(String.Format("{0:###,###,##0}", round(_ValorActividad)));
                                PdfPCell clValorAct1Aux = new PdfPCell(new Phrase(_ValorAct1Aux, _FontDetalle));
                                clValorAct1Aux.HorizontalAlignment = Element.ALIGN_RIGHT;
                                TblSeccionCAux.AddCell(clValorAct1Aux);
                                #endregion
                            }
                            _ContadorRowsAct++;
                            #endregion
                        }

                        //--AQUI PINTAMOS LAS ACTIVIDADES QUE HAGAN FALTA POR PINTAR
                        for (int i = _ContadorRowsAct; i <= 15; i++)
                        {
                            #region DEFINIR VALORES DE COLUMNAS DE LA TABLA
                            //--DEFINIR VALORES CAMPO ACTIVIDAD 1
                            PdfPCell clActPrincipal1Aux = new PdfPCell(new Phrase("ACTIVIDAD " + i, _FontDetalle));
                            clActPrincipal1Aux.HorizontalAlignment = Element.ALIGN_LEFT;
                            TblSeccionCAux.AddCell(clActPrincipal1Aux);

                            PdfPCell clCodigoAct1Aux = new PdfPCell(new Phrase("", _FontDetalle));
                            clCodigoAct1Aux.HorizontalAlignment = Element.ALIGN_CENTER;
                            TblSeccionCAux.AddCell(clCodigoAct1Aux);

                            string _IngGravados1Aux = "";
                            PdfPCell clIngGravados1Aux = new PdfPCell(new Phrase(_IngGravados1Aux, _FontDetalle));
                            clIngGravados1Aux.HorizontalAlignment = Element.ALIGN_CENTER;
                            TblSeccionCAux.AddCell(clIngGravados1Aux);

                            string _TarifaAct1Aux = "";
                            PdfPCell clTarifaAct1Aux = new PdfPCell(new Phrase(_TarifaAct1Aux, _FontDetalle));
                            clTarifaAct1Aux.HorizontalAlignment = Element.ALIGN_CENTER;
                            TblSeccionCAux.AddCell(clTarifaAct1Aux);

                            string _ValorAct1Aux = "";
                            PdfPCell clValorAct1Aux = new PdfPCell(new Phrase(_ValorAct1Aux, _FontDetalle));
                            clValorAct1Aux.HorizontalAlignment = Element.ALIGN_RIGHT;
                            TblSeccionCAux.AddCell(clValorAct1Aux);
                            #endregion

                            if (i == 15)
                            {
                                #region TOTAL DE INGRESOS GRAVADOS ACT ECONOMICAS
                                //--DEFINIR VALORES TOTAL INGRESOS GRAVADOS
                                PdfPCell clActividad5Aux = new PdfPCell(new Phrase("TOTAL INGRESOS GRAVADOS", _FontDetalle));
                                clActividad5Aux.Colspan = 2;
                                clActividad5Aux.HorizontalAlignment = Element.ALIGN_LEFT;
                                TblSeccionCAux.AddCell(clActividad5Aux);

                                //string _IngGravados5Aux = this.LblTotalIngresosGravados.Text.ToString().Trim();
                                PdfPCell clIngGravados5Aux = new PdfPCell(new Phrase("", _FontDetalle));
                                clIngGravados5Aux.HorizontalAlignment = Element.ALIGN_CENTER;
                                TblSeccionCAux.AddCell(clIngGravados5Aux);

                                //PdfPCell clTarifaAct5Aux = new PdfPCell(new Phrase("17. TOTAL IMPUESTO", _FontDetalle));
                                PdfPCell clTarifaAct5Aux = new PdfPCell(new Phrase("17. TOTAL IMPUESTO", _FontDetalle));
                                clTarifaAct5Aux.HorizontalAlignment = Element.ALIGN_CENTER;
                                TblSeccionCAux.AddCell(clTarifaAct5Aux);

                                //string _ValorAct5Aux = this.LblTotalImpuesto.Text.ToString().Trim();
                                PdfPCell clValorAct5Aux = new PdfPCell(new Phrase("", _FontDetalle));
                                clValorAct5Aux.HorizontalAlignment = Element.ALIGN_RIGHT;
                                TblSeccionCAux.AddCell(clValorAct5Aux);

                                //--DEFINIR VALORES GENERACIÓN DE ENERGIA
                                //PdfPCell clActividad6Aux = new PdfPCell(new Phrase("18. GENERACIÓN DE ENERGIA CAPACIDAD INSTALADA", _FontDetalle));
                                PdfPCell clActividad6Aux = new PdfPCell(new Phrase("", _FontDetalle));
                                clActividad6Aux.Colspan = 3;
                                clActividad6Aux.HorizontalAlignment = Element.ALIGN_LEFT;
                                TblSeccionCAux.AddCell(clActividad6Aux);

                                //PdfPCell clTarifaAct6Aux = new PdfPCell(new Phrase("19. IMPUESTO LEY 56 DE 1981", _FontDetalle));
                                //clTarifaAct6Aux.HorizontalAlignment = Element.ALIGN_CENTER;
                                //TblSeccionCAux.AddCell(clTarifaAct6Aux);

                                //string _ValorAct6Aux = this.LblTotalImpuestosLey.Text.ToString().Trim();
                                PdfPCell clValorAct6Aux = new PdfPCell(new Phrase("", _FontDetalle));
                                clValorAct6Aux.HorizontalAlignment = Element.ALIGN_RIGHT;
                                TblSeccionCAux.AddCell(clValorAct6Aux);
                                #endregion
                            }
                        }

                        //--AQUI ADICIONAMOS LA TABLA AL DOCUMENTO
                        //doc.NewPage();
                        doc.Add(TblSeccionCAux);
                    }
                }
                #endregion

                doc.Close();
                writer.Close();
                _Result = true;
            }
            catch (Exception ex)
            {
                _Result = false;
                _log.Error("Error al generar el PDF del ICA. motivo: " + ex.Message);
            }

            return _Result;
        }
        #endregion
    }
}